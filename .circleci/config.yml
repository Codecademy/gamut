version: 2.1
orbs:
  queue: eddiewebb/queue@1.5.0

references:
  default_env: &default_env
    docker:
      - image: circleci/node:14.17.2
    working_directory: ~/repo
    environment:
      IGNORE_COMMIT_MESSAGE: 'chore(release): publish'
      NODE_OPTIONS: '--max_old_space_size=8196'
      CIRCLE_TEST_REPORTS: /tmp/test-results

  yarn_cache_key_1: &yarn_cache_key_1 v2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}

  webpack_cache_key_1: &webpack_cache_key_1 v1-webpack-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}-{{ .Revision }}
  webpack_cache_key_2: &webpack_cache_key_2 v1-webpack-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}

  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      keys:
        - *yarn_cache_key_1

  save_yarn_cache: &save_yarn_cache
    save_cache:
      key: *yarn_cache_key_1
      paths:
        - ~/.cache/yarn

  restore_webpack_cache: &restore_webpack_cache
    restore_cache:
      keys:
        - *webpack_cache_key_1
        - *webpack_cache_key_2

  save_webpack_cache: &save_webpack_cache
    save_cache:
      key: *webpack_cache_key_1
      paths:
        - node_modules/.cache
        - packages/styleguide/node_modules/.cache

  save_node_modules: &save_node_modules
    persist_to_workspace:
      root: ~/repo
      paths:
        - node_modules
        - packages

  restore_node_modules: &restore_node_modules
    attach_workspace:
      at: ~/repo

  build_all_packages: &build_all_packages
    run:
      name: Build All Packages
      command: yarn build-all

  build_changed_packages: &build_changed_packages
    run:
      name: Build Changed Packages
      command: yarn build-changed

  build_required_packages: &build_required_packages
    run:
      name: Build Required Packages
      command: |
        yarn build-all --scope={@codecademy/variance,@codecademy/gamut-styles,@codecademy/gamut-icons,@codecademy/gamut-patterns}

  set_git_user: &set_git_user
    run:
      name: Set git user
      command: |
        git config --global user.email "dev@codecademy.com"
        git config --global user.name "codecademydev"
        git config --global push.default current

  set_npm_token: &set_npm_token
    run:
      name: Add NPM auth token file
      command: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

  skip_on_automated_commit: &skip_on_automated_commit
    run:
      name: Skip build from automated commit
      command: |
        export COMMIT_MESSAGE=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
        echo "Build started due to commit with message $COMMIT_MESSAGE, blocking builds started by ${IGNORE_COMMIT_MESSAGE}"
        if [[ $COMMIT_MESSAGE == *"${IGNORE_COMMIT_MESSAGE}"* ]] ; then circleci-agent step halt ; fi

  skip_if_not_pr: &skip_if_not_pr
    run:
      name: Ensure workflow is associated with a pull request
      command: |
        prNumber="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"

        if [[ -z "${prNumber}" ]]; then
          echo "This workflow is not associated with a pull request; halting"
          circleci-agent step halt
        fi

  add_github_ssh_key: &add_github_ssh_key
    add_ssh_keys:
      fingerprints:
        - 'c9:c4:75:c4:3e:f9:1f:09:1e:bd:95:da:2d:79:2f:f7'

jobs:
  checkout_code:
    <<: *default_env
    steps:
      - checkout
      - *set_npm_token
      - *restore_yarn_cache
      - run: yarn --production=false --frozen-lockfile
      - *save_yarn_cache
      - *save_node_modules

  verify_formatting:
    <<: *default_env
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Verify Prettier
          command: yarn format:verify

  verify_linting:
    <<: *default_env
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Verify ESLint
          command: yarn lint --format junit --output-file /tmp/test-results/eslint.xml
      - store_test_results:
          path: /tmp/test-results

  verify_packages:
    <<: *default_env
    steps:
      - checkout
      - *restore_node_modules
      - *build_changed_packages
      - run:
          name: Verify Packages
          command: yarn verify-changed

  tests:
    <<: *default_env
    parallelism: 7
    resource_class: large
    steps:
      - checkout
      - *restore_node_modules
      - *build_required_packages
      - run:
          name: Run test suite
          command: |
            export TESTFILES=$(yarn --silent test --listTests | xargs realpath -q --relative-to=$PWD "$1" | sort | circleci tests split --split-by=timings)
            yarn test --ci --runInBand --runTestsByPath ${TESTFILES} --coverage --reporters="default" --reporters="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT_DIR: /tmp/test-results/junit
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: 'true'
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  publish:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *set_npm_token
      - *build_changed_packages
      - run:
          name: Lerna Publish
          command: yarn lerna publish --yes --conventional-commits --changelog-preset conventionalcommits --include-merged-tags --create-release=github

  deploy:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *build_all_packages
      - *restore_webpack_cache
      - run:
          name: build storybook
          command: yarn build-storybook
      - *save_webpack_cache
      - run:
          name: deploy
          command: yarn deploy

  deploy_alpha:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_if_not_pr
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *build_all_packages
      - *restore_webpack_cache
      - run:
          name: build storybook
          command: yarn build-storybook
      - *save_webpack_cache
      - run:
          name: deploy
          command: |
            DEPLOY_MESSAGE="User: ${CIRCLE_USERNAME} Project: ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} Pull Request: ${CIRCLE_PULL_REQUEST}"
            npx netlify-cli@2.37.0 deploy --message="${DEPLOY_MESSAGE}" --dir=dist/docs --json > .deploy-output
      - setup_remote_docker
      - run: docker pull cloudposse/github-commenter:0.5.0-58
      - run:
          name: comment
          command: |
            export DEPLOY_OUTPUT="$(cat .deploy-output)"
            echo $DEPLOY_OUTPUT
            DEPLOY_URL=$(echo "console.log(JSON.parse(process.env.DEPLOY_OUTPUT).deploy_url)" | node -)
            LOGS_URL=$(echo "console.log(JSON.parse(process.env.DEPLOY_OUTPUT).logs)" | node -)
            COMMENT_MSG="<p><a href="${DEPLOY_URL}">${DEPLOY_URL}</a></p><p><a href="${LOGS_URL}">Deploy Logs</a></p>"
            if [ -z "$DEPLOY_OUTPUT" ]
            then
              echo "No deploy output found, will not add PR comment"
            else
              docker run --rm \
                      -e GITHUB_TOKEN \
                      -e GITHUB_OWNER="${CIRCLE_PROJECT_USERNAME}" \
                      -e GITHUB_REPO="${CIRCLE_PROJECT_REPONAME}" \
                      -e GITHUB_COMMENT_TYPE=pr \
                      -e GITHUB_PR_ISSUE_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}" \
                      -e GITHUB_COMMENT_TEMPLATE='<p>ðŸš€ Styleguide deploy preview ready!</p>{{.}}<!--ALPHA_DEPLOY_COMMENT-->' \
                      -e GITHUB_DELETE_COMMENT_REGEX="ALPHA_DEPLOY_COMMENT" \
                      -e GITHUB_COMMENT="${COMMENT_MSG}" \
                      cloudposse/github-commenter:0.5.0-58
            fi

  publish_alpha:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_if_not_pr
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *set_npm_token
      - *build_changed_packages
      - run:
          name: lerna publish (alpha)
          command: yarn lerna publish --exact --yes --include-merged-tags --no-push --no-git-reset --conventional-commits --conventional-prerelease --preid=alpha.${CIRCLE_SHA1:0:6} --dist-tag=alpha.${CIRCLE_SHA1:0:6}
      - setup_remote_docker
      - run: docker pull cloudposse/github-commenter:0.5.0-58
      - run:
          name: Comment
          command: |
            ALPHA_PACKAGES="$(yarn lerna ll --parseable | grep alpha || true)"
            if [ -z "$ALPHA_PACKAGES" ]
            then
              echo "No alpha published packages found, will not add PR comment"
            else
              docker run --rm \
                      -e GITHUB_TOKEN \
                      -e GITHUB_OWNER="${CIRCLE_PROJECT_USERNAME}" \
                      -e GITHUB_REPO="${CIRCLE_PROJECT_REPONAME}" \
                      -e GITHUB_COMMENT_TYPE=pr \
                      -e GITHUB_PR_ISSUE_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}" \
                      -e GITHUB_COMMENT_TEMPLATE='<h3>ðŸ“¬Published Alpha Packages:</h3><pre>{{$x := splitList "\n" .}}{{range $x}}{{$y := split ":" .}}{{printf "%s@%v<br/>" $y._1 $y._2}}{{end}}</pre><!--LERNA_VERSION_COMMENT-->' \
                      -e GITHUB_DELETE_COMMENT_REGEX="LERNA_VERSION_COMMENT" \
                      -e GITHUB_COMMENT="${ALPHA_PACKAGES}" \
                      cloudposse/github-commenter:0.5.0-58
            fi

workflows:
  version: 2
  build-test:
    jobs:
      - queue/block_workflow:
          only-on-branch: main
          time: '10'
      - checkout_code:
          requires:
            - queue/block_workflow
      - tests:
          requires:
            - checkout_code
      - verify_linting:
          requires:
            - checkout_code
      - verify_formatting:
          requires:
            - checkout_code
      - verify_packages:
          requires:
            - checkout_code
      - publish:
          requires:
            - checkout_code
          filters:
            branches:
              only: main
      - publish_alpha:
          filters:
            branches:
              ignore:
                - main
                - gh-pages
          requires:
            - checkout_code
  deploy:
    jobs:
      - queue/block_workflow:
          only-on-branch: main
          time: '10'
      - checkout_code:
          requires:
            - queue/block_workflow
      - deploy:
          requires:
            - checkout_code
          filters:
            branches:
              only: main
      - deploy_alpha:
          filters:
            branches:
              ignore:
                - main
                - gh-pages
          requires:
            - checkout_code
