version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
references:
  default_env: &default_env
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    environment:
      GITHUB_BOT_USERNAME: codecademydev
      NODE_OPTIONS: "--max_old_space_size=4096"
      CIRCLE_TEST_REPORTS: /tmp/test-results

  repo_cache_key_1: &repo_cache_key_1 v1-repo-{{ arch}}-{{ .Branch }}-{{ .Revision }}
  repo_cache_key_2: &repo_cache_key_2 v1-repo-{{ arch}}-{{ .Branch }}
  repo_cache_key_3: &repo_cache_key_3 v1-repo-{{ arch}}

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key_1
        - *repo_cache_key_2
        - *repo_cache_key_3

  set_git_user: &set_git_user
    run:
      name: Set git user
      command: |
        git config --global user.email "dev@codecademy.com"
        git config --global user.name "codecademydev"
        git config --global push.default current

  set_npm_token: &set_npm_token
    run:
      name: Add NPM auth token file
      command: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

  skip_on_automated_commit: &skip_on_automated_commit
    run:
      name: Skip build from automated commit
      command: |
        echo "Build started due to commit by ${CIRCLE_USERNAME}, blocking builds started by ${GITHUB_BOT_USERNAME}"
        if [ $CIRCLE_USERNAME == $GITHUB_BOT_USERNAME ] ; then circleci step halt ; fi

  add_github_ssh_key: &add_github_ssh_key
    add_ssh_keys:
      fingerprints:
        - "c9:c4:75:c4:3e:f9:1f:09:1e:bd:95:da:2d:79:2f:f7"

jobs:
  checkout_code:
    <<: *default_env
    steps:
      - *restore_repo
      - checkout
      - *set_npm_token
      - run: npx yarn@1.15.2 --production=false --frozen-lockfile
      - run:
          name: Run all builds
          command: yarn build-all
      - save_cache:
          key: *repo_cache_key_1
          paths:
            - .

  verify_formatting:
    <<: *default_env
    steps:
      - *restore_repo
      - run:
          name: Verify Prettier
          command: yarn format:verify

  verify_linting:
    <<: *default_env
    steps:
      - *restore_repo
      - run:
          name: Verify ESLint
          command: yarn lint --format junit --output-file /tmp/test-results/eslint.xml
      - store_test_results:
          path: /tmp/test-results

  verify_packages:
    <<: *default_env
    steps:
      - *restore_repo
      - run:
          name: Verify Packages
          command: yarn verify-all

  tests:
    <<: *default_env
    parallelism: 4
    resource_class: large
    steps:
      - *restore_repo
      - run:
          name: Run test suite
          command: |
            TESTFILES=$(circleci tests glob "**/*-test.{jsx,tsx,js,ts}" | circleci tests split)
            JEST_JUNIT_OUTPUT_DIR="$CIRCLE_TEST_REPORTS/jest" yarn test --ci --runInBand ${TESTFILES} --coverage
      - store_test_results:
          path: /tmp/test-results
      - codecov/upload:
          file: /tmp/test-results/jest/*
          flags: frontend
          conf: codecov.yml

  publish:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - *restore_repo
      - checkout
      - *set_npm_token
      - run:
          name: lerna publish
          command: yarn lerna publish --yes --include-merged-tags --conventional-commits --create-release=github
      - run:
          name: build storybook
          command: yarn build-storybook
      - run:
          name: commit storybook changes
          command: |
            if [ -n "$(git status --porcelain)" ]; then
              git add -A
              git commit -am "chore: build storybook"
              git push
            fi
      - run:
          name: update lockfile versions for published packages
          command: |
            npx yarn@1.15.2 --production=false
            if [ -n "$(git status --porcelain)" ]; then
              git add -A
              git commit -am "chore: updated yarn.lock"
              git push
            fi

  publish_alpha:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *add_github_ssh_key
      - *set_git_user
      - *restore_repo
      - checkout
      - *set_npm_token
      - run:
          name: lerna publish (alpha)
          command: yarn lerna publish --yes --include-merged-tags --conventional-commits --no-push --canary --preid=alpha.${CIRCLE_SHA1:0:6} --no-git-reset --dist-tag=prerelease

workflows:
  version: 2
  build-test:
    jobs:
      - checkout_code
      - tests:
          requires:
            - checkout_code
      - verify_linting:
          requires:
            - checkout_code
      - verify_formatting:
          requires:
            - checkout_code
      - verify_packages:
          requires:
            - checkout_code
      - publish:
          requires:
            - checkout_code
          filters:
            branches:
              only: master
      - publish_alpha:
          filters:
            branches:
              ignore: master
          requires:
            - checkout_code
