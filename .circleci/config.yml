version: 2.1
orbs:
  queue: eddiewebb/queue@1.5.0

references:
  default_env: &default_env
    docker:
      - image: cimg/node:22.13.1
    working_directory: ~/repo
    environment:
      IGNORE_COMMIT_MESSAGE: 'chore(release): publish'
      NODE_OPTIONS: '--max_old_space_size=8196'
      CIRCLE_TEST_REPORTS: /tmp/test-results
      NX_CLOUD: false

  yarn_cache_key_1: &yarn_cache_key_1 v2-yarn-{{ arch }}-{{ checksum "yarn.lock" }}

  webpack_cache_key_1: &webpack_cache_key_1 v1-webpack-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}-{{ .Revision }}
  webpack_cache_key_2: &webpack_cache_key_2 v1-webpack-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}

  nx_cache_key_1: &nx_cache_key_1 v2-nx-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}-{{ epoch }}
  nx_cache_key_2: &nx_cache_key_2 v2-nx-{{ arch }}-{{ checksum "yarn.lock" }}-{{ .Branch }}
  nx_cache_key_3: &nx_cache_key_3 v2-nx-{{ arch }}-{{ checksum "yarn.lock" }}

  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      keys:
        - *yarn_cache_key_1

  save_yarn_cache: &save_yarn_cache
    save_cache:
      key: *yarn_cache_key_1
      paths:
        - ~/.cache/yarn

  restore_webpack_cache: &restore_webpack_cache
    restore_cache:
      keys:
        - *webpack_cache_key_1
        - *webpack_cache_key_2

  save_webpack_cache: &save_webpack_cache
    save_cache:
      key: *webpack_cache_key_1
      paths:
        - node_modules/.cache
        - packages/styleguide/node_modules/.cache

  save_nx_cache: &save_nx_cache
    save_cache:
      key: *nx_cache_key_1
      paths:
        - node_modules/.cache/nx

  restore_nx_cache: &restore_nx_cache
    restore_cache:
      keys:
        - *nx_cache_key_1
        - *nx_cache_key_2
        - *nx_cache_key_3

  save_node_modules: &save_node_modules
    persist_to_workspace:
      root: ~/repo
      paths:
        - node_modules
        - packages

  restore_node_modules: &restore_node_modules
    attach_workspace: #The attach_workspace copies and re-creates the entire workspace content when it runs.
      at: ~/repo

  build_all_packages: &build_all_packages
    run:
      name: Build All Packages
      command: yarn build

  set_git_user: &set_git_user # move to yarn action maybe
    run:
      name: Set git user
      command: |
        git config --global user.email "dev@codecademy.com"
        git config --global user.name "codecademydev"
        git config --global push.default current

  set_npm_token: &set_npm_token
    run:
      name: Add NPM auth token file
      command: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

  skip_on_automated_commit: &skip_on_automated_commit
    run:
      name: Skip build from automated commit
      command: |
        export COMMIT_MESSAGE=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
        echo "Build started due to commit with message $COMMIT_MESSAGE, blocking builds started by ${IGNORE_COMMIT_MESSAGE}"
        if [[ $COMMIT_MESSAGE == *"${IGNORE_COMMIT_MESSAGE}"* ]] ; then circleci-agent step halt ; fi

  skip_if_not_pr: &skip_if_not_pr
    run:
      name: Ensure workflow is associated with a pull request
      command: |
        prNumber="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"

        if [[ -z "${prNumber}" ]]; then
          echo "This workflow is not associated with a pull request; halting"
          circleci-agent step halt
        fi

jobs:
  checkout_code:
    <<: *default_env
    steps:
      - checkout # circle keyword
      - *set_npm_token
      - *restore_yarn_cache
      - run: yarn --production=false --frozen-lockfile
      - *save_yarn_cache
      - *save_node_modules

  publish:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *set_npm_token
      - *restore_nx_cache
      - *build_all_packages
      - *save_nx_cache
      - run:
          name: Lerna Publish
          command: yarn lerna publish --yes --exact --conventional-commits --changelog-preset conventionalcommits --include-merged-tags --create-release=github

  deploy:
    <<: *default_env
    resource_class: large
    steps:
      - *skip_on_automated_commit
      - *set_git_user
      - checkout
      - *restore_node_modules
      - *restore_nx_cache
      - *restore_webpack_cache
      - *build_all_packages
      - run:
          name: build storybook
          command: yarn nx run styleguide:build-storybook
      - run:
          name: deploy
          command: yarn deploy
      - *save_nx_cache
      - *save_webpack_cache

workflows:
  version: 2
  build-test:
    jobs:
      - queue/block_workflow:
          only-on-branch: main
          time: '10'
      - checkout_code:
          requires:
            - queue/block_workflow
      - publish:
          requires:
            - checkout_code
          filters:
            branches:
              only: main

  deploy:
    jobs:
      - queue/block_workflow:
          only-on-branch: main
          time: '10'
      - checkout_code:
          requires:
            - queue/block_workflow
      - deploy:
          requires:
            - checkout_code
          filters:
            branches:
              only: main
