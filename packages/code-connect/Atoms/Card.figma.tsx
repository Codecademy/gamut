import { Card } from '@codecademy/gamut';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Card,
  'https://www.figma.com/design/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=20111%3A63391',
  {
    props: {
      variant: figma.enum('variant', {
        Default: 'default',
        White: 'white',
        Yellow: 'yellow',
        Beige: 'beige',
        Navy: 'navy',
        Hyper: 'hyper',
      }),
      shadow: figma.enum('shadow', {
        'pattern-right': 'patternRight',
        'pattern-left': 'patternLeft',
        outline: 'outline',
        none: 'none',
      }),
      isInteractive: figma.boolean('isInteractive'),
      // not sure why this isn't working rn, maybe it's not recognizing the nested prop
      // children: figma.nestedProp('.Card Content', {
      //   heading: figma.boolean('heading', {
      //     true: figma.boolean('description', {
      //       true: figma.children(['↳ heading', '↳ description']),
      //       false: figma.children('↳ heading'),
      //     }),
      //     false: figma.boolean('description', {
      //       true: figma.children('↳ description'),
      //       false: undefined,
      //     }),
      //   }),
      // }),
      // simplified version works:
      children: figma.children('.Card Content'),
      // currently errors, but at least shows the `pattern` prop
      pattern: figma.enum('shadow', {
        'pattern-right': figma.instance('Pattern Fills'),
        'pattern-left': figma.instance('Pattern Fills'),
        outline: undefined,
        none: undefined,
      }),
    },
    example: ({ children, ...props }: any) => (
      <Card {...props}>{children}</Card>
    ),
  }
);
