import { Input } from '@codecademy/gamut';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Input,
  'https://www.figma.com/design/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=1189%3A590',
  {
    props: {
      type: figma.enum('type', {
        text: 'text',
        number: 'number',
        file: 'file',
      }),
      size: figma.enum('size', {
        base: 'base',
        small: 'small',
      }),
      error: figma.enum('state', {
        enabled: false,
        hover: false,
        focus: false,
        valid: false,
        'valid+hover': false,
        'valid+focus': false,
        error: true,
        'error+hover': true,
        'error+focus': true,
        disabled: false,
      }),
      valid: figma.enum('state', {
        enabled: false,
        hover: false,
        focus: false,
        valid: true,
        'valid+hover': true,
        'valid+focus': true,
        error: false,
        'error+hover': false,
        'error+focus': false,
        disabled: false,
      }),
      // defaultValue: figma.enum('type', {
      //   text: 'Input text',
      //   number: '0',
      //   file: undefined,
      // }),
      defaultValue: figma.enum('type', {
        text: figma.enum('text', {
          // 'â—‡ .input': figma.string('.input'),
          '.input': 'testtttt',
        }),
        number: '0',
        file: undefined,
      }),
      // inputValueInfo: figma.nestedProps('.input', {
      //   input: figma.enum('text', {
      //     '.input': figma.textContent('input')
      //   }),
      // placeholder: figma.textContent('placeholder'),
      // }),
    },
    example: (props) => (
      <Input
        {...props}
        // defaultValue={inputValueInfo.input}
        // placeholder={inputValueInfo.placeholder}
      />
    ),
  }
);
