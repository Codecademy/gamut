{"version":3,"file":"bundle.js","sources":["../src/main.js"],"sourcesContent":["import React from 'react';\n\nconst testId = (id) => `[data-testid=\"${id}\"]`;\n\nexport const createEnzymeHelpers = ({\n  Component,\n  render,\n  baseProps = {},\n} = {}) => {\n  let wrapper;\n\n  const helpers = {\n    setup(props = {}) {\n      wrapper = render(<Component {...baseProps} {...props} />);\n\n      // sanity checks\n      expect(wrapper).toExist();\n      expect(wrapper.isEmptyRender()).toBeFalsy();\n\n      return { wrapper };\n    },\n\n    debug() {\n      // eslint-disable-next-line no-console\n      console.log(wrapper.debug());\n    },\n\n    // actions\n    click(selector) {\n      wrapper.find(selector).simulate('click');\n    },\n\n    clickTestId(id) {\n      helpers.click(testId(id));\n    },\n\n    // expectations\n    expectCount(selector, n = 1) {\n      expect(wrapper.find(selector).length).toBe(n);\n    },\n\n    expectTestId(id) {\n      expect(wrapper.find(testId(id))).toExist();\n    },\n\n    expectTestIdCount(selector, n = 1) {\n      helpers.expectCount(testId(selector), n);\n    },\n\n    expectAllTestIds(ids) {\n      ids.forEach((id) => helpers.expectTestIdCount(id, 1));\n    },\n  };\n\n  return helpers;\n};\n\nexport const mockStore = (data) => ({\n  getState: () => data,\n  dispatch: jest.fn(),\n  subscribe: jest.fn(),\n});\n"],"names":["testId","id","createEnzymeHelpers","Component","render","baseProps","wrapper","helpers","setup","props","React","expect","toExist","isEmptyRender","toBeFalsy","debug","console","log","click","selector","find","simulate","clickTestId","expectCount","n","length","toBe","expectTestId","expectTestIdCount","expectAllTestIds","ids","forEach","mockStore","data","getState","dispatch","jest","fn","subscribe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD;AAAA,kCAAyBA,EAAzB;AAAA,CAAf;;IAEaC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAIxB;AAAA,iFAAP,EAAO;AAAA,MAHTC,SAGS,QAHTA,SAGS;AAAA,MAFTC,MAES,QAFTA,MAES;AAAA,4BADTC,SACS;AAAA,MADTA,SACS,+BADG,EACH;;AACT,MAAIC,OAAJ;AAEA,MAAMC,OAAO,GAAG;AACdC,IAAAA,KADc,mBACI;AAAA,UAAZC,KAAY,uEAAJ,EAAI;AAChBH,MAAAA,OAAO,GAAGF,MAAM,CAACM,wCAAC,SAAD,eAAeL,SAAf,EAA8BI,KAA9B,EAAD,CAAhB,CADgB;;AAIhBE,MAAAA,MAAM,CAACL,OAAD,CAAN,CAAgBM,OAAhB;AACAD,MAAAA,MAAM,CAACL,OAAO,CAACO,aAAR,EAAD,CAAN,CAAgCC,SAAhC;AAEA,aAAO;AAAER,QAAAA,OAAO,EAAPA;AAAF,OAAP;AACD,KATa;AAWdS,IAAAA,KAXc,mBAWN;AACN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACS,KAAR,EAAZ;AACD,KAda;AAgBd;AACAG,IAAAA,KAjBc,iBAiBRC,QAjBQ,EAiBE;AACdb,MAAAA,OAAO,CAACc,IAAR,CAAaD,QAAb,EAAuBE,QAAvB,CAAgC,OAAhC;AACD,KAnBa;AAqBdC,IAAAA,WArBc,uBAqBFrB,EArBE,EAqBE;AACdM,MAAAA,OAAO,CAACW,KAAR,CAAclB,MAAM,CAACC,EAAD,CAApB;AACD,KAvBa;AAyBd;AACAsB,IAAAA,WA1Bc,uBA0BFJ,QA1BE,EA0Be;AAAA,UAAPK,CAAO,uEAAH,CAAG;AAC3Bb,MAAAA,MAAM,CAACL,OAAO,CAACc,IAAR,CAAaD,QAAb,EAAuBM,MAAxB,CAAN,CAAsCC,IAAtC,CAA2CF,CAA3C;AACD,KA5Ba;AA8BdG,IAAAA,YA9Bc,wBA8BD1B,EA9BC,EA8BG;AACfU,MAAAA,MAAM,CAACL,OAAO,CAACc,IAAR,CAAapB,MAAM,CAACC,EAAD,CAAnB,CAAD,CAAN,CAAiCW,OAAjC;AACD,KAhCa;AAkCdgB,IAAAA,iBAlCc,6BAkCIT,QAlCJ,EAkCqB;AAAA,UAAPK,CAAO,uEAAH,CAAG;AACjCjB,MAAAA,OAAO,CAACgB,WAAR,CAAoBvB,MAAM,CAACmB,QAAD,CAA1B,EAAsCK,CAAtC;AACD,KApCa;AAsCdK,IAAAA,gBAtCc,4BAsCGC,GAtCH,EAsCQ;AACpBA,MAAAA,GAAG,CAACC,OAAJ,CAAY,UAAC9B,EAAD;AAAA,eAAQM,OAAO,CAACqB,iBAAR,CAA0B3B,EAA1B,EAA8B,CAA9B,CAAR;AAAA,OAAZ;AACD;AAxCa,GAAhB;AA2CA,SAAOM,OAAP;AACD;IAEYyB,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,SAAW;AAClCC,IAAAA,QAAQ,EAAE;AAAA,aAAMD,IAAN;AAAA,KADwB;AAElCE,IAAAA,QAAQ,EAAEC,IAAI,CAACC,EAAL,EAFwB;AAGlCC,IAAAA,SAAS,EAAEF,IAAI,CAACC,EAAL;AAHuB,GAAX;AAAA;;;;;"}