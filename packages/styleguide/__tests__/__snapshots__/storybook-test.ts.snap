// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Core|Atoms/Badge Badge 1`] = `
<Badge>
  <span
    className="badge"
  >
    New
  </span>
</Badge>
`;

exports[`Storyshots Core|Atoms/Badge Inline Badge 1`] = `
<Badge>
  <span
    className="badge"
  >
    css
  </span>
</Badge>
`;

exports[`Storyshots Core|Atoms/Button Brand Buttons 1`] = `
<Button
  key="brand-red"
  onClick={[Function]}
  style={
    Object {
      "margin": "1rem",
    }
  }
  theme="brand-red"
>
  <ButtonBase
    className="btn btn-brand-red undefined"
    onClick={[Function]}
    style={
      Object {
        "margin": "1rem",
      }
    }
  >
    <button
      className="basicBtn btn btn-brand-red undefined"
      data-btn={true}
      onClick={[Function]}
      style={
        Object {
          "margin": "1rem",
        }
      }
    >
      brand-red
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Button 1`] = `
<Button
  block={false}
  caps={false}
  go={false}
  link={false}
  onClick={[Function]}
  outline={false}
  theme="brand-blue"
  underline={false}
>
  <ButtonBase
    className="btn btn-brand-blue undefined"
    link={false}
    onClick={[Function]}
  >
    <button
      className="basicBtn btn btn-brand-blue undefined"
      data-btn={true}
      onClick={[Function]}
    >
      Submit
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button ButtonBase 1`] = `
<ButtonBase>
  <button
    className="basicBtn"
    data-btn={true}
  >
    I am basic
  </button>
</ButtonBase>
`;

exports[`Storyshots Core|Atoms/Button ButtonBase Link 1`] = `
<ButtonBase
  href="#"
>
  <a
    className="basicBtn"
    data-btn={true}
    href="#"
  >
    a basic link
  </a>
</ButtonBase>
`;

exports[`Storyshots Core|Atoms/Button ButtonBase Link Style 1`] = `
<ButtonBase
  link={true}
>
  <button
    className="basicBtn basicLink"
    data-btn={true}
  >
    a basic button styled as a link
  </button>
</ButtonBase>
`;

exports[`Storyshots Core|Atoms/Button Caps 1`] = `
<Button
  caps={true}
  href="#"
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined caps"
    href="#"
  >
    <a
      className="basicBtn btn btn-brand-blue undefined caps"
      data-btn={true}
      href="#"
    >
      Caps
    </a>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Deprecated 1`] = `
<Button
  key="secondary"
  onClick={[Function]}
  style={
    Object {
      "margin": "1rem",
    }
  }
  theme="secondary"
>
  <ButtonBase
    className="btn btn-mint undefined"
    onClick={[Function]}
    style={
      Object {
        "margin": "1rem",
      }
    }
  >
    <button
      className="basicBtn btn btn-mint undefined"
      data-btn={true}
      onClick={[Function]}
      style={
        Object {
          "margin": "1rem",
        }
      }
    >
      secondary
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Disabled  1`] = `
<Button
  disabled={true}
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined"
    disabled={true}
  >
    <button
      className="basicBtn btn btn-brand-blue undefined"
      data-btn={true}
      disabled={true}
    >
      Disabled
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Flat 1`] = `
<Button
  flat={true}
  href="#"
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined flat"
    href="#"
  >
    <a
      className="basicBtn btn btn-brand-blue undefined flat"
      data-btn={true}
      href="#"
    >
      Flat
    </a>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Large 1`] = `
<Button
  size="large"
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue large"
  >
    <button
      className="basicBtn btn btn-brand-blue large"
      data-btn={true}
    >
      Large
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Link Button 1`] = `"This is an example of a"`;

exports[`Storyshots Core|Atoms/Button Loading 1`] = `
<Button
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined"
  >
    <button
      className="basicBtn btn btn-brand-blue undefined"
      data-btn={true}
    >
      <Spinner
        size={24}
      >
        <svg
          height={24}
          viewBox="0 0 1000 1000"
          width={24}
        >
          <circle
            cx="937.5"
            cy="500"
            fill="currentColor"
            r="62.5"
          />
          <path
            d="M1000 500H875c0-22.2-1.9-44-5.6-65.1l123.1-21.7h.1c4.8 28.2 7.4 57.2 7.4 86.8z"
            fill="currentColor"
          />
          <path
            d="M992.5 413.2l-123.1 21.7c-3.8-21.8-9.5-42.9-16.9-63.2L969.9 329l.1-.1c9.8 27.1 17.4 55.2 22.5 84.3z"
            fill="currentColor"
            opacity=".96"
          />
          <path
            d="M969.9 328.9l-.1.1-117.3 42.7c-7.5-20.6-16.8-40.4-27.7-59.2L933 249.9l.1-.1a503.3 503.3 0 0 1 36.8 79.1z"
            fill="currentColor"
            opacity=".92"
          />
          <path
            d="M933.1 249.9l-108.2 62.6c-10.9-18.9-23.6-36.9-37.6-53.5l95.7-80.4c18.7 22.2 35.4 46.1 50.1 71.3z"
            fill="currentColor"
            opacity=".88"
          />
          <path
            d="M883 178.6L787.3 259c-14.1-16.7-29.5-32.2-46.2-46.2l80.3-95.8c22.3 18.7 42.9 39.3 61.6 61.6z"
            fill="currentColor"
            opacity=".84"
          />
          <path
            d="M821.4 116.9L741 212.7c-16.7-14-34.6-26.6-53.5-37.6l62.4-108.2.1-.1c25.3 14.8 49.2 31.5 71.4 50.1z"
            fill="currentColor"
            opacity=".8"
          />
          <path
            d="M750.1 66.9l-62.5 108.2c-18.8-10.9-38.6-20.1-59.2-27.7L671 30.1l.1-.1c27.5 10.1 53.9 22.4 79 36.9z"
            fill="currentColor"
            opacity=".76"
          />
          <path
            d="M671.1 30l-.1.1-42.7 117.4c-20.3-7.4-41.4-13.1-63.2-16.9l21.7-123v-.1c29.1 5.1 57.2 12.7 84.3 22.5z"
            fill="currentColor"
            opacity=".72"
          />
          <path
            d="M586.8 7.5l-21.7 123.1c-21.1-3.7-42.9-5.6-65.1-5.6V0c29.6 0 58.6 2.6 86.8 7.5z"
            fill="currentColor"
            opacity=".68"
          />
          <path
            d="M500 0v125c-22.2 0-44 1.9-65.1 5.6l-21.7-123v-.1C441.4 2.6 470.4 0 500 0z"
            fill="currentColor"
            opacity=".64"
          />
          <path
            d="M413.2 7.6l21.7 123.1c-21.8 3.8-42.9 9.5-63.2 16.9L329 30.1l-.1-.1c27.1-9.9 55.2-17.4 84.3-22.4z"
            fill="currentColor"
            opacity=".6"
          />
          <path
            d="M329 30.1l42.7 117.4c-20.6 7.5-40.4 16.8-59.2 27.7L250 67l-.1-.1C275 52.4 301.4 40.1 329 30.1z"
            fill="currentColor"
            opacity=".56"
          />
          <path
            d="M371.7 852.5L329 969.9l-.1.1c-27.6-10-53.9-22.4-79-36.9l.1-.1 62.5-108.2c18.7 10.9 38.6 20.1 59.2 27.7z"
            fill="currentColor"
            opacity=".04"
          />
          <path
            d="M250 67l62.5 108.2c-18.9 11-36.9 23.6-53.5 37.6L178.6 117c22.2-18.7 46.1-35.4 71.4-50z"
            fill="currentColor"
            opacity=".52"
          />
          <path
            d="M312.5 824.8L250 933l-.1.1c-25.2-14.6-49.1-31.4-71.4-50.1l80.4-95.7c16.7 13.9 34.6 26.6 53.6 37.5z"
            fill="currentColor"
            opacity=".08"
          />
          <path
            d="M178.6 117l80.4 95.8c-16.7 14.1-32.2 29.5-46.2 46.2L117 178.6c18.7-22.3 39.3-42.9 61.6-61.6z"
            fill="currentColor"
            opacity=".48"
          />
          <path
            d="M258.9 787.2L178.6 883c-22.3-18.7-42.9-39.3-61.6-61.6l95.8-80.3c14 16.7 29.4 32.1 46.1 46.1z"
            fill="currentColor"
            opacity=".12"
          />
          <path
            d="M117 178.6l95.8 80.4c-14 16.6-26.6 34.5-37.6 53.5L67 250l-.1-.1c14.7-25.2 31.4-49.1 50.1-71.3z"
            fill="currentColor"
            opacity=".44"
          />
          <path
            d="M212.8 741.1L117 821.4c-18.7-22.2-35.4-46.1-50.1-71.4l.1-.1 108.2-62.4c11 19 23.6 36.9 37.6 53.6z"
            fill="currentColor"
            opacity=".16"
          />
          <path
            d="M67 250l108.2 62.5c-10.9 18.8-20.1 38.6-27.7 59.2L30.1 329l-.1-.1c10-27.6 22.4-53.9 36.9-79l.1.1z"
            fill="currentColor"
            opacity=".4"
          />
          <path
            d="M175.2 687.6L67 750l-.1.1C52.4 725 40 698.7 30 671.1l.1-.1 117.4-42.7c7.6 20.6 16.8 40.5 27.7 59.3z"
            fill="currentColor"
            opacity=".2"
          />
          <path
            d="M30.1 329l117.4 42.7c-7.4 20.3-13.1 41.4-16.9 63.2l-123-21.7h-.1c5.1-29 12.6-57.2 22.5-84.2h.1z"
            fill="currentColor"
            opacity=".36"
          />
          <path
            d="M147.5 628.3L30.1 671l-.1.1c-9.9-27.1-17.4-55.2-22.5-84.2h.1l123.1-21.7c3.7 21.7 9.4 42.8 16.8 63.1z"
            fill="currentColor"
            opacity=".24"
          />
          <path
            d="M7.6 413.2l123.1 21.7c-3.7 21.1-5.6 42.9-5.6 65.1H0c0-29.6 2.6-58.6 7.6-86.8z"
            fill="currentColor"
            opacity=".32"
          />
          <path
            d="M130.6 565.1l-123 21.7h-.1A506.7 506.7 0 0 1 0 500h125c0 22.2 1.9 44 5.6 65.1z"
            fill="currentColor"
            opacity=".28"
          />
          <animateTransform
            attributeName="transform"
            begin="0"
            dur="1s"
            from="0"
            repeatCount="indefinite"
            to="360"
            type="rotate"
          />
        </svg>
      </Spinner>
        Loading...
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Outline 1`] = `
<Button
  href="#"
  onClick={[Function]}
  outline={true}
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined outline"
    href="#"
    onClick={[Function]}
  >
    <a
      className="basicBtn btn btn-brand-blue undefined outline"
      data-btn={true}
      href="#"
      onClick={[Function]}
    >
      Outline
    </a>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Processing 1`] = `
<Button
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue undefined"
  >
    <button
      className="basicBtn btn btn-brand-blue undefined"
      data-btn={true}
    >
      <RadialProgress
        duration={5000}
        value={
          Array [
            0,
            100,
          ]
        }
      >
        <svg
          aria-label="8% progress"
          height={24}
          viewBox="0 0 100 100"
          width={24}
        >
          <circle
            cx="50"
            cy="50"
            fill="none"
            opacity=".2"
            r="40"
            stroke="currentColor"
            strokeWidth={10}
          />
          <circle
            cx="50"
            cy="50"
            fill="none"
            opacity="1"
            r="40"
            stroke="currentColor"
            strokeDasharray="260"
            strokeDashoffset={8}
            strokeLinecap="round"
            strokeWidth={10}
            transform="rotate(-90 50 50)"
          >
            <animate
              attributeName="stroke-dashoffset"
              attributeType="CSS"
              begin="0"
              dur="5000ms"
              fill="freeze"
              from={260}
              to={8}
            />
          </circle>
        </svg>
      </RadialProgress>
        Processing...
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Round 1`] = `
<Button
  round={true}
  size="large"
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue large round"
  >
    <button
      className="basicBtn btn btn-brand-blue large round"
      data-btn={true}
    >
      Large
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Small 1`] = `
<Button
  href="#"
  onClick={[Function]}
  size="small"
  theme="brand-blue"
>
  <ButtonBase
    className="btn btn-brand-blue small"
    href="#"
    onClick={[Function]}
  >
    <a
      className="basicBtn btn btn-brand-blue small"
      data-btn={true}
      href="#"
      onClick={[Function]}
    >
      Small
    </a>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Button Status Buttons 1`] = `
<Button
  key="success"
  onClick={[Function]}
  style={
    Object {
      "margin": "1rem",
    }
  }
  theme="success"
>
  <ButtonBase
    className="btn btn-success undefined"
    onClick={[Function]}
    style={
      Object {
        "margin": "1rem",
      }
    }
  >
    <button
      className="basicBtn btn btn-success undefined"
      data-btn={true}
      onClick={[Function]}
      style={
        Object {
          "margin": "1rem",
        }
      }
    >
      success
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Atoms/Form Decorations FormGroupDescription 1`] = `
<FormGroupDescription>
  <div
    className="FormGroupDescription"
  >
    Secure, unique password for your account.
  </div>
</FormGroupDescription>
`;

exports[`Storyshots Core|Atoms/Form Decorations FormGroupLabel 1`] = `
<FormGroupLabel>
  <div
    className="FormGroupLabel"
  >
    Password
  </div>
</FormGroupLabel>
`;

exports[`Storyshots Core|Atoms/Form Inputs Checkbox 1`] = `
<ForwardRef
  htmlFor="html-css"
  label="HTML & CSS"
>
  <div>
    <input
      className="invisible"
      id="html-css"
      type="checkbox"
    />
    <label
      className="checkboxLabel"
      htmlFor="html-css"
    >
      <div
        className="checkbox"
      >
        <svg
          className="checkboxVector"
          height="24px"
          viewBox="0 0 20 20"
          width="24px"
        >
          <path
            className="squareVector"
            d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"
            fill="none"
          />
          <polyline
            className="checkVector"
            points="4 11 8 15 16 6"
          />
        </svg>
      </div>
      <span
        className="checkboxText"
      >
        HTML & CSS
      </span>
    </label>
  </div>
</ForwardRef>
`;

exports[`Storyshots Core|Atoms/Form Inputs Input 1`] = `
<ForwardRef
  defaultValue="Default value"
  error={false}
  htmlFor="name"
  type="text"
>
  <input
    className="Input"
    defaultValue="Default value"
    id="name"
    type="text"
  />
</ForwardRef>
`;

exports[`Storyshots Core|Atoms/Form Inputs RadioGroup 1`] = `
<RadioGroup
  htmlForPrefix="why-are-you-learning"
  name="why-are-you-learning"
>
  <div>
    <ForwardRef
      htmlFor="why-are-you-learning-0"
      key=".0"
      label="Skills to communicate with developers and other technical people"
      name="why-are-you-learning"
      value="skills"
    >
      <div
        className="Radio"
      >
        <input
          className="radioInput"
          id="why-are-you-learning-0"
          name="why-are-you-learning"
          type="radio"
          value="skills"
        />
        <label
          className="radioLabel"
          htmlFor="why-are-you-learning-0"
        >
          Skills to communicate with developers and other technical people
        </label>
      </div>
    </ForwardRef>
    <ForwardRef
      htmlFor="why-are-you-learning-1"
      key=".1"
      label="A better understanding of web development in general"
      name="why-are-you-learning"
      value="understanding"
    >
      <div
        className="Radio"
      >
        <input
          className="radioInput"
          id="why-are-you-learning-1"
          name="why-are-you-learning"
          type="radio"
          value="understanding"
        />
        <label
          className="radioLabel"
          htmlFor="why-are-you-learning-1"
        >
          A better understanding of web development in general
        </label>
      </div>
    </ForwardRef>
  </div>
</RadioGroup>
`;

exports[`Storyshots Core|Atoms/Form Inputs Select 1`] = `
<ForwardRef
  htmlFor="select"
  options={
    Array [
      "Apple",
      "Banana",
      "Cherry",
      "Dragonfruit",
      "Eggplant",
    ]
  }
>
  <div
    className="Select"
  >
    <svg
      className="selectIcon"
    >
      <path
        d="M1.175 0L5 3.825 8.825 0 10 1.183l-5 5-5-5z"
        fill="#3E3E40"
      />
    </svg>
    <select
      className="selectInput"
      defaultValue=""
      htmlFor="select"
      id="select"
    >
      <option
        key="Apple"
        value="Apple"
      >
        Apple
      </option>
      <option
        key="Banana"
        value="Banana"
      >
        Banana
      </option>
      <option
        key="Cherry"
        value="Cherry"
      >
        Cherry
      </option>
      <option
        key="Dragonfruit"
        value="Dragonfruit"
      >
        Dragonfruit
      </option>
      <option
        key="Eggplant"
        value="Eggplant"
      >
        Eggplant
      </option>
    </select>
  </div>
</ForwardRef>
`;

exports[`Storyshots Core|Atoms/Form Inputs TextArea 1`] = `
<ForwardRef
  error={false}
  htmlFor="about"
  rows={8}
>
  <textarea
    className="TextArea"
    id="about"
    rows={8}
  />
</ForwardRef>
`;

exports[`Storyshots Core|Atoms/HighlightedText HighlightedText 1`] = `
<Text
  className="paragraph"
>
  <p
    className="text paragraph fontSize_md__xs fontSize_m__0 fontSize_d__1"
  >
    Would you like to have
    <HighlightedText>
      <em
        className="highlightedText"
      >
        <span
          className="word"
          key="0"
        >
          superpowers
        </span>
      </em>
    </HighlightedText>
    ?
  </p>
</Text>
`;

exports[`Storyshots Core|Atoms/Icons Editable Icon 1`] = `
<ForwardRef
  size={40}
  style={
    Object {
      "backgroundColor": "white",
      "color": "black",
    }
  }
>
  <svg
    aria-labelledby="gamut-icon-U3ZnQWNjZXNzaWJpbGl0eUljb24="
    fill="currentColor"
    height={40}
    role="img"
    style={
      Object {
        "backgroundColor": "white",
        "color": "black",
      }
    }
    viewBox="0 0 24 24"
    width={40}
  >
    <title
      id="gamut-icon-U3ZnQWNjZXNzaWJpbGl0eUljb24="
    >
      Accessibility Icon
    </title>
    <path
      d="M12 21a9 9 0 100-18 9 9 0 000 18zm0 1C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z"
    />
    <path
      d="M11.966 5.81c-.841 0-1.527.68-1.527 1.515 0 .834.686 1.515 1.527 1.515.842 0 1.527-.68 1.527-1.515 0-.835-.685-1.515-1.527-1.515zm4.224 3.232c.266 0 .509.238.554.561.049.347-.146.663-.436.703l-3.398.473v2.113l1.833 4.36a.643.643 0 01-.594.88.649.649 0 01-.6-.394l-1.684-4.006-1.685 4.006a.649.649 0 01-.843.344.637.637 0 01-.35-.83l1.833-4.36V10.78l-3.399-.47c-.289-.04-.486-.357-.435-.704.045-.323.29-.561.554-.561.02 0 .04.002.06.004l3.282.456h1.965l3.282-.456a.282.282 0 01.06-.006z"
    />
  </svg>
</ForwardRef>
`;

exports[`Storyshots Core|Atoms/InputStepper Input Stepper 1`] = `
<InputStepper
  ariaLabel="input stepper"
  label="things"
  max={999}
  min={0}
  onChange={[Function]}
  onStepperButtonClick={[Function]}
  value={99}
>
  <div
    className="stepper"
  >
    <div
      className="column"
    >
      <input
        aria-label="current value of 99"
        aria-labelledby="inputStepperLabel inputStepper"
        aria-live="polite"
        className="input long"
        id="inputStepper"
        max={999}
        min={0}
        name="inputStepper"
        onChange={[Function]}
        type="number"
        value={99}
      />
      <label
        aria-label="input stepper"
        className="label"
        htmlFor="inputStepper"
        id="inputStepperLabel"
      >
        things
      </label>
    </div>
    <div
      className="column"
    >
      <StepButton
        labelledBy="inputStepperLabel inputStepper"
        onClick={[Function]}
        type="up"
      >
        <Button
          aria-label="add one"
          aria-labelledby="inputStepperLabel inputStepper stepbtn-up"
          className="stepButton"
          flat={true}
          id="stepbtn-up"
          onClick={[Function]}
          theme="brand-dark-blue"
          type="button"
        >
          <ButtonBase
            aria-label="add one"
            aria-labelledby="inputStepperLabel inputStepper stepbtn-up"
            className="btn btn-brand-dark-blue undefined flat stepButton"
            id="stepbtn-up"
            onClick={[Function]}
            type="button"
          >
            <button
              aria-label="add one"
              aria-labelledby="inputStepperLabel inputStepper stepbtn-up"
              className="basicBtn btn btn-brand-dark-blue undefined flat stepButton"
              data-btn={true}
              id="stepbtn-up"
              onClick={[Function]}
              type="button"
            >
              <ForwardRef
                className="stepperUp"
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQXJyb3dDaGV2cm9uVXBJY29u"
                  className="stepperUp"
                  fill="currentColor"
                  height="16px"
                  role="img"
                  viewBox="0 0 24 24"
                  width="16px"
                >
                  <title
                    id="gamut-icon-U3ZnQXJyb3dDaGV2cm9uVXBJY29u"
                  >
                    Arrow Chevron Up Icon
                  </title>
                  <path
                    d="M.75 17.189L11.47 6.47a.749.749 0 011.06 0l10.72 10.719"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={1.5}
                  />
                </svg>
              </ForwardRef>
            </button>
          </ButtonBase>
        </Button>
      </StepButton>
      <StepButton
        labelledBy="inputStepperLabel inputStepper"
        onClick={[Function]}
        type="down"
      >
        <Button
          aria-label="subtract one"
          aria-labelledby="inputStepperLabel inputStepper stepbtn-down"
          className="stepButton"
          flat={true}
          id="stepbtn-down"
          onClick={[Function]}
          theme="brand-dark-blue"
          type="button"
        >
          <ButtonBase
            aria-label="subtract one"
            aria-labelledby="inputStepperLabel inputStepper stepbtn-down"
            className="btn btn-brand-dark-blue undefined flat stepButton"
            id="stepbtn-down"
            onClick={[Function]}
            type="button"
          >
            <button
              aria-label="subtract one"
              aria-labelledby="inputStepperLabel inputStepper stepbtn-down"
              className="basicBtn btn btn-brand-dark-blue undefined flat stepButton"
              data-btn={true}
              id="stepbtn-down"
              onClick={[Function]}
              type="button"
            >
              <ForwardRef
                className="stepperDown"
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQXJyb3dDaGV2cm9uRG93bkljb24="
                  className="stepperDown"
                  fill="currentColor"
                  height="16px"
                  role="img"
                  viewBox="0 0 24 24"
                  width="16px"
                >
                  <title
                    id="gamut-icon-U3ZnQXJyb3dDaGV2cm9uRG93bkljb24="
                  >
                    Arrow Chevron Down Icon
                  </title>
                  <path
                    d="M23.25 7.311L12.53 18.03a.749.749 0 01-1.06 0L.75 7.311"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={1.5}
                  />
                </svg>
              </ForwardRef>
            </button>
          </ButtonBase>
        </Button>
      </StepButton>
    </div>
  </div>
</InputStepper>
`;

exports[`Storyshots Core|Atoms/Markdown Basics 1`] = `
<Markdown
  spacing="none"
  text="
## Hello World
This is markdown
    "
>
  <div
    className="spacing-none"
  >
    <h2
      className="h2"
      key="0"
    >
      Hello World
    </h2>
    

    <p
      className="p"
      key="2"
    >
      This is markdown
    </p>
    

  </div>
</Markdown>
`;

exports[`Storyshots Core|Atoms/Markdown Element Overrides 1`] = `
<Markdown
  overrides={
    Object {
      "CodeBlock": Object {
        "component": [Function],
      },
      "CustomElement": Object {
        "allowedAttributes": Array [
          "title",
        ],
        "component": [Function],
      },
    }
  }
  spacing="none"
  text="
## Hello World

This is a custom markdown component

<CodeBlock>Span inside a custom code block element</CodeBlock>
<CustomElement title=\\"A Custom Component\\" />"
>
  <div
    className="spacing-none"
  >
    <h2
      className="h2"
      key="0"
    >
      Hello World
    </h2>
    

    <p
      className="p"
      key="2"
    >
      This is a custom markdown component
    </p>
    

    <p
      className="p"
      key="4"
    >
      <component
        className="codeblock"
        key="0"
      >
        <Text
          className="codeblock"
          style={
            Object {
              "color": "darkblue",
            }
          }
        >
          <p
            className="text codeblock fontSize_md__xs fontSize_m__0 fontSize_d__1"
            style={
              Object {
                "color": "darkblue",
              }
            }
          >
            Span inside a custom code block element
          </p>
        </Text>
      </component>
      

      <component
        className="customelement"
        key="2"
        title="A Custom Component"
      >
        <Heading
          as="h3"
          fontSize="md"
          style={
            Object {
              "color": "rebeccapurple",
            }
          }
        >
          <h3
            className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
            style={
              Object {
                "color": "rebeccapurple",
              }
            }
          >
            A Custom Component
          </h3>
        </Heading>
      </component>
    </p>
    

  </div>
</Markdown>
`;

exports[`Storyshots Core|Atoms/Markdown Full Example 1`] = `
<Markdown
  spacing="none"
  text="file-mock-item"
>
  <div
    className="spacing-none"
  >
    <p
      className="p"
      key="0"
    >
      file-mock-item
    </p>
    

  </div>
</Markdown>
`;

exports[`Storyshots Core|Atoms/Markdown Inline Markdown 1`] = `"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."`;

exports[`Storyshots Core|Atoms/ProgressBar Minimum Percentage 1`] = `
<ProgressBar
  minimumPercent={5}
  percent={0}
  theme="blue"
>
  <div
    aria-label="Progress: 0%"
    aria-live="polite"
    className="progressBar blue"
    style={
      Object {
        "background": undefined,
        "borderRadius": "3px",
        "color": undefined,
        "height": "6px",
      }
    }
  >
    <div
      className="bar"
      data-testid="progress-bar-bar"
      style={
        Object {
          "background": undefined,
          "width": "5%",
        }
      }
    />
  </div>
</ProgressBar>
`;

exports[`Storyshots Core|Atoms/ProgressBar ProgressBar 1`] = `
<LayoutGrid
  columnGap="sm"
  rowGap="sm"
>
  <div
    className="container rowGap_sm__xs rowGap_s__0 rowGap_m__1 columnGap_sm__xs columnGap_s__0 columnGap_m__1"
  >
    <Column
      key="0,false,blue"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={false}
          percent={0}
          theme="blue"
        >
          <div
            aria-label="Progress: 0%"
            aria-live="polite"
            className="progressBar blue"
            style={
              Object {
                "background": undefined,
                "borderRadius": "3px",
                "color": undefined,
                "height": "6px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "width": "0%",
                }
              }
            />
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="0,true,yellow"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={true}
          percent={0}
          theme="yellow"
        >
          <div
            aria-label="Progress: 0%"
            aria-live="polite"
            className="progressBar yellow"
            style={
              Object {
                "background": undefined,
                "borderRadius": "18px",
                "color": undefined,
                "height": "36px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "borderBottomRightRadius": "18px",
                  "borderTopRightRadius": "18px",
                  "width": "0%",
                }
              }
            >
              <span
                className="displayedPercent"
              >
                0
                %
              </span>
            </div>
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="25,false,blue"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={false}
          percent={25}
          theme="blue"
        >
          <div
            aria-label="Progress: 25%"
            aria-live="polite"
            className="progressBar blue"
            style={
              Object {
                "background": undefined,
                "borderRadius": "3px",
                "color": undefined,
                "height": "6px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "width": "25%",
                }
              }
            />
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="25,true,yellow"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={true}
          percent={25}
          theme="yellow"
        >
          <div
            aria-label="Progress: 25%"
            aria-live="polite"
            className="progressBar yellow"
            style={
              Object {
                "background": undefined,
                "borderRadius": "18px",
                "color": undefined,
                "height": "36px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "borderBottomRightRadius": "18px",
                  "borderTopRightRadius": "18px",
                  "width": "25%",
                }
              }
            >
              <span
                className="displayedPercent"
              >
                25
                %
              </span>
            </div>
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="50,false,blue"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={false}
          percent={50}
          theme="blue"
        >
          <div
            aria-label="Progress: 50%"
            aria-live="polite"
            className="progressBar blue"
            style={
              Object {
                "background": undefined,
                "borderRadius": "3px",
                "color": undefined,
                "height": "6px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "width": "50%",
                }
              }
            />
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="50,true,yellow"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={true}
          percent={50}
          theme="yellow"
        >
          <div
            aria-label="Progress: 50%"
            aria-live="polite"
            className="progressBar yellow"
            style={
              Object {
                "background": undefined,
                "borderRadius": "18px",
                "color": undefined,
                "height": "36px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "borderBottomRightRadius": "18px",
                  "borderTopRightRadius": "18px",
                  "width": "50%",
                }
              }
            >
              <span
                className="displayedPercent"
              >
                50
                %
              </span>
            </div>
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="75,false,blue"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={false}
          percent={75}
          theme="blue"
        >
          <div
            aria-label="Progress: 75%"
            aria-live="polite"
            className="progressBar blue"
            style={
              Object {
                "background": undefined,
                "borderRadius": "3px",
                "color": undefined,
                "height": "6px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "width": "75%",
                }
              }
            />
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="75,true,yellow"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={true}
          percent={75}
          theme="yellow"
        >
          <div
            aria-label="Progress: 75%"
            aria-live="polite"
            className="progressBar yellow"
            style={
              Object {
                "background": undefined,
                "borderRadius": "18px",
                "color": undefined,
                "height": "36px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "borderBottomRightRadius": "18px",
                  "borderTopRightRadius": "18px",
                  "width": "75%",
                }
              }
            >
              <span
                className="displayedPercent"
              >
                75
                %
              </span>
            </div>
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="100,false,blue"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={false}
          percent={100}
          theme="blue"
        >
          <div
            aria-label="Progress: 100%"
            aria-live="polite"
            className="progressBar blue"
            style={
              Object {
                "background": undefined,
                "borderRadius": "3px",
                "color": undefined,
                "height": "6px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "width": "100%",
                }
              }
            />
          </div>
        </ProgressBar>
      </div>
    </Column>
    <Column
      key="100,true,yellow"
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <ProgressBar
          large={true}
          percent={100}
          theme="yellow"
        >
          <div
            aria-label="Progress: 100%"
            aria-live="polite"
            className="progressBar yellow"
            style={
              Object {
                "background": undefined,
                "borderRadius": "18px",
                "color": undefined,
                "height": "36px",
              }
            }
          >
            <div
              className="bar"
              data-testid="progress-bar-bar"
              style={
                Object {
                  "background": undefined,
                  "borderBottomRightRadius": "18px",
                  "borderTopRightRadius": "18px",
                  "width": "100%",
                }
              }
            >
              <span
                className="displayedPercent"
              >
                100
                %
              </span>
            </div>
          </div>
        </ProgressBar>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Atoms/ProgressBar Style Overrides 1`] = `
<ProgressBar
  large={true}
  minimumPercent={5}
  percent={0}
  style={
    Object {
      "backgroundColor": "#661917",
      "barColor": "#e53935",
      "fontColor": "#ffffff",
    }
  }
  theme="blue"
>
  <div
    aria-label="Progress: 0%"
    aria-live="polite"
    className="progressBar blue"
    style={
      Object {
        "background": "#661917",
        "borderRadius": "18px",
        "color": "#ffffff",
        "height": "36px",
      }
    }
  >
    <div
      className="bar"
      data-testid="progress-bar-bar"
      style={
        Object {
          "background": "#e53935",
          "borderBottomRightRadius": "18px",
          "borderTopRightRadius": "18px",
          "width": "5%",
        }
      }
    >
      <span
        className="displayedPercent"
      >
        0
        %
      </span>
    </div>
  </div>
</ProgressBar>
`;

exports[`Storyshots Core|Atoms/RadialProgress Animating 1`] = `
<RadialProgress
  size="8rem"
  value={0}
>
  <svg
    aria-label="260% progress"
    height="8rem"
    viewBox="0 0 100 100"
    width="8rem"
  >
    <circle
      cx="50"
      cy="50"
      fill="none"
      opacity=".2"
      r="40"
      stroke="currentColor"
      strokeWidth={10}
    />
    <circle
      cx="50"
      cy="50"
      fill="none"
      opacity="1"
      r="40"
      stroke="currentColor"
      strokeDasharray="260"
      strokeDashoffset={260}
      strokeLinecap="round"
      strokeWidth={10}
      transform="rotate(-90 50 50)"
    />
  </svg>
</RadialProgress>
`;

exports[`Storyshots Core|Atoms/RadialProgress RadialProgress 1`] = `
<RadialProgress
  size="10rem"
  strokeLinecap="round"
  strokeWidth="10"
  style={
    Object {
      "color": "black",
    }
  }
  value={30}
>
  <svg
    aria-label="185% progress"
    height="10rem"
    style={
      Object {
        "color": "black",
      }
    }
    viewBox="0 0 100 100"
    width="10rem"
  >
    <circle
      cx="50"
      cy="50"
      fill="none"
      opacity=".2"
      r="40"
      stroke="currentColor"
      strokeWidth="10"
    />
    <circle
      cx="50"
      cy="50"
      fill="none"
      opacity="1"
      r="40"
      stroke="currentColor"
      strokeDasharray="260"
      strokeDashoffset={185}
      strokeLinecap="round"
      strokeWidth="10"
      transform="rotate(-90 50 50)"
    />
  </svg>
</RadialProgress>
`;

exports[`Storyshots Core|Atoms/SkipToContent Skip To Content 1`] = `
<SkipToContent
  contentId="example"
>
  <a
    className="skipToContent"
    href="#example"
    onClick={[Function]}
    type="button"
  >
    Skip to Content 
    <DownArrowIcon
      className="downArrowIcon"
      fill="currentColor"
      height={24}
      version="1.1"
      viewBox="0 0 24 24"
      width={24}
      xmlns="http://www.w3.org/2000/svg"
    >
      <svg
        className="downArrowIcon"
        fill="currentColor"
        height={24}
        transform="rotate(90)"
        version="1.1"
        viewBox="0 0 24 24"
        width={24}
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          Down Arrow Icon
        </title>
        <path
          d="M4 10.92v2h12l-5.5 5.5 1.42 1.42 7.92-7.92L11.92 4 10.5 5.42l5.5 5.5z"
          fillRule="nonzero"
        />
      </svg>
    </DownArrowIcon>
  </a>
</SkipToContent>
`;

exports[`Storyshots Core|Atoms/Spinner Spinner 1`] = `
<Spinner
  size="5em"
>
  <svg
    height="5em"
    viewBox="0 0 1000 1000"
    width="5em"
  >
    <circle
      cx="937.5"
      cy="500"
      fill="currentColor"
      r="62.5"
    />
    <path
      d="M1000 500H875c0-22.2-1.9-44-5.6-65.1l123.1-21.7h.1c4.8 28.2 7.4 57.2 7.4 86.8z"
      fill="currentColor"
    />
    <path
      d="M992.5 413.2l-123.1 21.7c-3.8-21.8-9.5-42.9-16.9-63.2L969.9 329l.1-.1c9.8 27.1 17.4 55.2 22.5 84.3z"
      fill="currentColor"
      opacity=".96"
    />
    <path
      d="M969.9 328.9l-.1.1-117.3 42.7c-7.5-20.6-16.8-40.4-27.7-59.2L933 249.9l.1-.1a503.3 503.3 0 0 1 36.8 79.1z"
      fill="currentColor"
      opacity=".92"
    />
    <path
      d="M933.1 249.9l-108.2 62.6c-10.9-18.9-23.6-36.9-37.6-53.5l95.7-80.4c18.7 22.2 35.4 46.1 50.1 71.3z"
      fill="currentColor"
      opacity=".88"
    />
    <path
      d="M883 178.6L787.3 259c-14.1-16.7-29.5-32.2-46.2-46.2l80.3-95.8c22.3 18.7 42.9 39.3 61.6 61.6z"
      fill="currentColor"
      opacity=".84"
    />
    <path
      d="M821.4 116.9L741 212.7c-16.7-14-34.6-26.6-53.5-37.6l62.4-108.2.1-.1c25.3 14.8 49.2 31.5 71.4 50.1z"
      fill="currentColor"
      opacity=".8"
    />
    <path
      d="M750.1 66.9l-62.5 108.2c-18.8-10.9-38.6-20.1-59.2-27.7L671 30.1l.1-.1c27.5 10.1 53.9 22.4 79 36.9z"
      fill="currentColor"
      opacity=".76"
    />
    <path
      d="M671.1 30l-.1.1-42.7 117.4c-20.3-7.4-41.4-13.1-63.2-16.9l21.7-123v-.1c29.1 5.1 57.2 12.7 84.3 22.5z"
      fill="currentColor"
      opacity=".72"
    />
    <path
      d="M586.8 7.5l-21.7 123.1c-21.1-3.7-42.9-5.6-65.1-5.6V0c29.6 0 58.6 2.6 86.8 7.5z"
      fill="currentColor"
      opacity=".68"
    />
    <path
      d="M500 0v125c-22.2 0-44 1.9-65.1 5.6l-21.7-123v-.1C441.4 2.6 470.4 0 500 0z"
      fill="currentColor"
      opacity=".64"
    />
    <path
      d="M413.2 7.6l21.7 123.1c-21.8 3.8-42.9 9.5-63.2 16.9L329 30.1l-.1-.1c27.1-9.9 55.2-17.4 84.3-22.4z"
      fill="currentColor"
      opacity=".6"
    />
    <path
      d="M329 30.1l42.7 117.4c-20.6 7.5-40.4 16.8-59.2 27.7L250 67l-.1-.1C275 52.4 301.4 40.1 329 30.1z"
      fill="currentColor"
      opacity=".56"
    />
    <path
      d="M371.7 852.5L329 969.9l-.1.1c-27.6-10-53.9-22.4-79-36.9l.1-.1 62.5-108.2c18.7 10.9 38.6 20.1 59.2 27.7z"
      fill="currentColor"
      opacity=".04"
    />
    <path
      d="M250 67l62.5 108.2c-18.9 11-36.9 23.6-53.5 37.6L178.6 117c22.2-18.7 46.1-35.4 71.4-50z"
      fill="currentColor"
      opacity=".52"
    />
    <path
      d="M312.5 824.8L250 933l-.1.1c-25.2-14.6-49.1-31.4-71.4-50.1l80.4-95.7c16.7 13.9 34.6 26.6 53.6 37.5z"
      fill="currentColor"
      opacity=".08"
    />
    <path
      d="M178.6 117l80.4 95.8c-16.7 14.1-32.2 29.5-46.2 46.2L117 178.6c18.7-22.3 39.3-42.9 61.6-61.6z"
      fill="currentColor"
      opacity=".48"
    />
    <path
      d="M258.9 787.2L178.6 883c-22.3-18.7-42.9-39.3-61.6-61.6l95.8-80.3c14 16.7 29.4 32.1 46.1 46.1z"
      fill="currentColor"
      opacity=".12"
    />
    <path
      d="M117 178.6l95.8 80.4c-14 16.6-26.6 34.5-37.6 53.5L67 250l-.1-.1c14.7-25.2 31.4-49.1 50.1-71.3z"
      fill="currentColor"
      opacity=".44"
    />
    <path
      d="M212.8 741.1L117 821.4c-18.7-22.2-35.4-46.1-50.1-71.4l.1-.1 108.2-62.4c11 19 23.6 36.9 37.6 53.6z"
      fill="currentColor"
      opacity=".16"
    />
    <path
      d="M67 250l108.2 62.5c-10.9 18.8-20.1 38.6-27.7 59.2L30.1 329l-.1-.1c10-27.6 22.4-53.9 36.9-79l.1.1z"
      fill="currentColor"
      opacity=".4"
    />
    <path
      d="M175.2 687.6L67 750l-.1.1C52.4 725 40 698.7 30 671.1l.1-.1 117.4-42.7c7.6 20.6 16.8 40.5 27.7 59.3z"
      fill="currentColor"
      opacity=".2"
    />
    <path
      d="M30.1 329l117.4 42.7c-7.4 20.3-13.1 41.4-16.9 63.2l-123-21.7h-.1c5.1-29 12.6-57.2 22.5-84.2h.1z"
      fill="currentColor"
      opacity=".36"
    />
    <path
      d="M147.5 628.3L30.1 671l-.1.1c-9.9-27.1-17.4-55.2-22.5-84.2h.1l123.1-21.7c3.7 21.7 9.4 42.8 16.8 63.1z"
      fill="currentColor"
      opacity=".24"
    />
    <path
      d="M7.6 413.2l123.1 21.7c-3.7 21.1-5.6 42.9-5.6 65.1H0c0-29.6 2.6-58.6 7.6-86.8z"
      fill="currentColor"
      opacity=".32"
    />
    <path
      d="M130.6 565.1l-123 21.7h-.1A506.7 506.7 0 0 1 0 500h125c0 22.2 1.9 44 5.6 65.1z"
      fill="currentColor"
      opacity=".28"
    />
    <animateTransform
      attributeName="transform"
      begin="0"
      dur="1s"
      from="0"
      repeatCount="indefinite"
      to="360"
      type="rotate"
    />
  </svg>
</Spinner>
`;

exports[`Storyshots Core|Atoms/Toggle Toggle 1`] = `
<Toggle
  checked={false}
  label="Toggle"
  onChange={[Function]}
>
  <label
    arial-label="Toggle"
    className="toggleButton"
    htmlFor="Toggle"
  >
    <input
      checked={false}
      className="invisible"
      id="Toggle"
      onChange={[Function]}
      type="checkbox"
    />
    <span
      className="invisible"
    >
      Toggle
    </span>
    <div
      className="track"
    />
    <div
      className="thumb"
    />
  </label>
</Toggle>
`;

exports[`Storyshots Core|Atoms/ToolTip ToolTip 1`] = `
<ToolTip
  focusable={true}
  id="tooltip"
  position="bottom-right"
  target={
    <Icon
      name="informational"
      size={24}
    />
  }
>
  <div
    className="toolTipWrapper"
  >
    <div
      aria-labelledby="tooltip"
      className="targetContainer"
      tabIndex={0}
    >
      <Icon
        name="informational"
        size={24}
      >
        <InformationalIcon
          fill="currentColor"
          height={24}
          version="1.1"
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>
              Informational Icon
            </title>
            <path
              d="M12.176 4a1.412 1.412 0 1 0 0 2.824 1.412 1.412 0 0 0 0-2.824zm-.338 4.49c-1.12.094-4.18 2.531-4.18 2.531-.187.141-.13.132.02.395.15.255.131.273.31.151.188-.122.5-.32 1.017-.64 1.995-1.28.32 1.675-.537 6.654-.339 2.466 1.883 1.195 2.457.819.564-.367 2.08-1.412 2.23-1.515.207-.141.057-.254-.103-.49-.113-.16-.226-.047-.226-.047-.612.405-1.732 1.252-1.882.716-.18-.537.969-4.217 1.6-6.749.103-.602.385-1.92-.706-1.826z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </InformationalIcon>
      </Icon>
    </div>
    <div
      className="toolTipContainer bottom-right toolTipContainerLight"
      id="tooltip"
      role="tooltip"
    >
      <CardBody
        className="toolTipBody"
        standardPadding={true}
      >
        <div
          className="standardPadding toolTipBody"
        >
          Like the term fortnight, a term for a two week period, antantwig refers to a three week period.
        </div>
      </CardBody>
    </div>
  </div>
</ToolTip>
`;

exports[`Storyshots Core|Foundations/Colors Base 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="black"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-black
              </h2>
            </Heading>
            <Swatch
              hex="#000000"
              name="$color-black"
            >
              <Styled(div)
                hex="#000000"
              >
                <div
                  className="css-rk8psf"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-black
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #000000
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="white"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-white
              </h2>
            </Heading>
            <Swatch
              hex="#ffffff"
              name="$color-white"
            >
              <Styled(div)
                hex="#ffffff"
              >
                <div
                  className="css-1f483ae"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-white
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ffffff
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Colors Brand 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="red"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Red
              </h2>
            </Heading>
            <Swatch
              hex="#fd4d3f"
              name="$color-red"
            >
              <Styled(div)
                hex="#fd4d3f"
              >
                <div
                  className="css-lv1nmo"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-red
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #fd4d3f
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="orange"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Orange
              </h2>
            </Heading>
            <Swatch
              hex="#ff9b2a"
              name="$color-orange"
            >
              <Styled(div)
                hex="#ff9b2a"
              >
                <div
                  className="css-1oocvnq"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-orange
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ff9b2a
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="yellow"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Yellow
              </h2>
            </Heading>
            <Swatch
              hex="#ffc740"
              name="$color-yellow"
            >
              <Styled(div)
                hex="#ffc740"
              >
                <div
                  className="css-6blulx"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-yellow
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ffc740
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="purple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Purple
              </h2>
            </Heading>
            <Swatch
              hex="#6400e4"
              name="$color-purple"
            >
              <Styled(div)
                hex="#6400e4"
              >
                <div
                  className="css-11yjvjw"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-purple
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #6400e4
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="pink"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Pink
              </h2>
            </Heading>
            <Swatch
              hex="#ff8ef5"
              name="$color-pink"
            >
              <Styled(div)
                hex="#ff8ef5"
              >
                <div
                  className="css-tcx1d0"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-pink
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ff8ef5
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="mint"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Mint
              </h2>
            </Heading>
            <Swatch
              hex="#6df0c2"
              name="$color-mint"
            >
              <Styled(div)
                hex="#6df0c2"
              >
                <div
                  className="css-1dj1zpg"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-mint
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #6df0c2
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="beige"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Beige
              </h2>
            </Heading>
            <Swatch
              hex="#efd9ca"
              name="$color-beige"
            >
              <Styled(div)
                hex="#efd9ca"
              >
                <div
                  className="css-1sbz51k"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-beige
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #efd9ca
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="darkBlue"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Brand 
                Dark Blue
              </h2>
            </Heading>
            <Swatch
              hex="#141c3a"
              name="$color-dark-blue"
            >
              <Styled(div)
                hex="#141c3a"
              >
                <div
                  className="css-1qfknc4"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      $color-dark-blue
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #141c3a
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Colors Editor 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="blue"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Blue
              </h2>
            </Heading>
            <Swatch
              hex="#83fff5"
              name="color-editor-blue"
            >
              <Styled(div)
                hex="#83fff5"
              >
                <div
                  className="css-1xj512k"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-blue
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #83fff5
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="deepPurple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Deep Purple
              </h2>
            </Heading>
            <Swatch
              hex="#cc7bc2"
              name="color-editor-deep-purple"
            >
              <Styled(div)
                hex="#cc7bc2"
              >
                <div
                  className="css-dg7axz"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-deep-purple
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #cc7bc2
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="gray"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Gray
              </h2>
            </Heading>
            <Swatch
              hex="#939598"
              name="color-editor-gray"
            >
              <Styled(div)
                hex="#939598"
              >
                <div
                  className="css-i2556n"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-gray
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #939598
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="green"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Green
              </h2>
            </Heading>
            <Swatch
              hex="#b4d353"
              name="color-editor-green"
            >
              <Styled(div)
                hex="#b4d353"
              >
                <div
                  className="css-ho716b"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-green
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #b4d353
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="orange"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Orange
              </h2>
            </Heading>
            <Swatch
              hex="#ff8973"
              name="color-editor-orange"
            >
              <Styled(div)
                hex="#ff8973"
              >
                <div
                  className="css-tyet12"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-orange
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ff8973
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="purple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Purple
              </h2>
            </Heading>
            <Swatch
              hex="#b3ccff"
              name="color-editor-purple"
            >
              <Styled(div)
                hex="#b3ccff"
              >
                <div
                  className="css-14rrdzq"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-purple
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #b3ccff
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="red"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Red
              </h2>
            </Heading>
            <Swatch
              hex="#e85d7f"
              name="color-editor-red"
            >
              <Styled(div)
                hex="#e85d7f"
              >
                <div
                  className="css-1yg2n8k"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-red
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #e85d7f
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="yellow"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Editor 
                Yellow
              </h2>
            </Heading>
            <Swatch
              hex="#ffe083"
              name="color-editor-yellow"
            >
              <Styled(div)
                hex="#ffe083"
              >
                <div
                  className="css-n3t74w"
                >
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      color-editor-yellow
                    </div>
                  </Styled(div)>
                  <Styled(div)>
                    <div
                      className="css-13j5vx5"
                    >
                      #ffe083
                    </div>
                  </Styled(div)>
                </div>
              </Styled(div)>
            </Swatch>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Colors Platform  1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="mint"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Platform 
                Mint
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "500": "#37c3be",
                  "600": "#2c9c98",
                  "700": "#217572",
                }
              }
              variablePrefix="platform-mint"
            >
              <Swatch
                hex="#37c3be"
                key="$platform-mint-500"
                name="$platform-mint-500"
              >
                <Styled(div)
                  hex="#37c3be"
                >
                  <div
                    className="css-1qi47k2"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-mint-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #37c3be
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2c9c98"
                key="$platform-mint-600"
                name="$platform-mint-600"
              >
                <Styled(div)
                  hex="#2c9c98"
                >
                  <div
                    className="css-ss454m"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-mint-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2c9c98
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#217572"
                key="$platform-mint-700"
                name="$platform-mint-700"
              >
                <Styled(div)
                  hex="#217572"
                >
                  <div
                    className="css-1d4adnb"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-mint-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #217572
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="purple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Platform 
                Purple
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "200": "#c3c1d7",
                  "300": "#a5a1c2",
                  "400": "#8782ae",
                  "500": "#69639a",
                  "600": "#544f7b",
                  "700": "#3f3b5c",
                  "800": "#2a283e",
                  "900": "#15141f",
                }
              }
              variablePrefix="platform-purple"
            >
              <Swatch
                hex="#c3c1d7"
                key="$platform-purple-200"
                name="$platform-purple-200"
              >
                <Styled(div)
                  hex="#c3c1d7"
                >
                  <div
                    className="css-vivmo4"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #c3c1d7
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#a5a1c2"
                key="$platform-purple-300"
                name="$platform-purple-300"
              >
                <Styled(div)
                  hex="#a5a1c2"
                >
                  <div
                    className="css-146su6k"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #a5a1c2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#8782ae"
                key="$platform-purple-400"
                name="$platform-purple-400"
              >
                <Styled(div)
                  hex="#8782ae"
                >
                  <div
                    className="css-13hp5nv"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #8782ae
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#69639a"
                key="$platform-purple-500"
                name="$platform-purple-500"
              >
                <Styled(div)
                  hex="#69639a"
                >
                  <div
                    className="css-yzho24"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #69639a
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#544f7b"
                key="$platform-purple-600"
                name="$platform-purple-600"
              >
                <Styled(div)
                  hex="#544f7b"
                >
                  <div
                    className="css-1rb0qlu"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #544f7b
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#3f3b5c"
                key="$platform-purple-700"
                name="$platform-purple-700"
              >
                <Styled(div)
                  hex="#3f3b5c"
                >
                  <div
                    className="css-1srrbio"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #3f3b5c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2a283e"
                key="$platform-purple-800"
                name="$platform-purple-800"
              >
                <Styled(div)
                  hex="#2a283e"
                >
                  <div
                    className="css-6forgp"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2a283e
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#15141f"
                key="$platform-purple-900"
                name="$platform-purple-900"
              >
                <Styled(div)
                  hex="#15141f"
                >
                  <div
                    className="css-1g6qr59"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $platform-purple-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #15141f
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Colors Rest 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="blue"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-blue
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#c8d7fa",
                  "1000": "#10162f",
                  "1100": "#0a0e1d",
                  "200": "#a5befa",
                  "300": "#7da2fa",
                  "400": "#5788fa",
                  "500": "#3069f0",
                  "600": "#2d5dcc",
                  "700": "#2e4a99",
                  "800": "#233466",
                  "900": "#141e3b",
                }
              }
              variablePrefix="color-blue"
            >
              <Swatch
                hex="#c8d7fa"
                key="$color-blue-100"
                name="$color-blue-100"
              >
                <Styled(div)
                  hex="#c8d7fa"
                >
                  <div
                    className="css-nmf1n5"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #c8d7fa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#a5befa"
                key="$color-blue-200"
                name="$color-blue-200"
              >
                <Styled(div)
                  hex="#a5befa"
                >
                  <div
                    className="css-g67qpi"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #a5befa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#7da2fa"
                key="$color-blue-300"
                name="$color-blue-300"
              >
                <Styled(div)
                  hex="#7da2fa"
                >
                  <div
                    className="css-hywl7m"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #7da2fa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#5788fa"
                key="$color-blue-400"
                name="$color-blue-400"
              >
                <Styled(div)
                  hex="#5788fa"
                >
                  <div
                    className="css-1bp602b"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #5788fa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#3069f0"
                key="$color-blue-500"
                name="$color-blue-500"
              >
                <Styled(div)
                  hex="#3069f0"
                >
                  <div
                    className="css-192y10w"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #3069f0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2d5dcc"
                key="$color-blue-600"
                name="$color-blue-600"
              >
                <Styled(div)
                  hex="#2d5dcc"
                >
                  <div
                    className="css-1nd33fo"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2d5dcc
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2e4a99"
                key="$color-blue-700"
                name="$color-blue-700"
              >
                <Styled(div)
                  hex="#2e4a99"
                >
                  <div
                    className="css-jrine8"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2e4a99
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#233466"
                key="$color-blue-800"
                name="$color-blue-800"
              >
                <Styled(div)
                  hex="#233466"
                >
                  <div
                    className="css-c4krhk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #233466
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#141e3b"
                key="$color-blue-900"
                name="$color-blue-900"
              >
                <Styled(div)
                  hex="#141e3b"
                >
                  <div
                    className="css-123h6cq"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #141e3b
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#10162f"
                key="$color-blue-1000"
                name="$color-blue-1000"
              >
                <Styled(div)
                  hex="#10162f"
                >
                  <div
                    className="css-pyv2tb"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-1000
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #10162f
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#0a0e1d"
                key="$color-blue-1100"
                name="$color-blue-1100"
              >
                <Styled(div)
                  hex="#0a0e1d"
                >
                  <div
                    className="css-mzx6xn"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-blue-1100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #0a0e1d
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="pink"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-pink
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#ffd9fc",
                  "200": "#ffbffa",
                  "300": "#ffa6f8",
                  "400": "#f288e9",
                  "500": "#d957d9",
                  "600": "#b035c9",
                  "700": "#9129a6",
                  "800": "#702080",
                  "900": "#43134d",
                }
              }
              variablePrefix="color-pink"
            >
              <Swatch
                hex="#ffd9fc"
                key="$color-pink-100"
                name="$color-pink-100"
              >
                <Styled(div)
                  hex="#ffd9fc"
                >
                  <div
                    className="css-ntakff"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffd9fc
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffbffa"
                key="$color-pink-200"
                name="$color-pink-200"
              >
                <Styled(div)
                  hex="#ffbffa"
                >
                  <div
                    className="css-1wz8udv"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffbffa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffa6f8"
                key="$color-pink-300"
                name="$color-pink-300"
              >
                <Styled(div)
                  hex="#ffa6f8"
                >
                  <div
                    className="css-19kmz7z"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffa6f8
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#f288e9"
                key="$color-pink-400"
                name="$color-pink-400"
              >
                <Styled(div)
                  hex="#f288e9"
                >
                  <div
                    className="css-199seif"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #f288e9
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#d957d9"
                key="$color-pink-500"
                name="$color-pink-500"
              >
                <Styled(div)
                  hex="#d957d9"
                >
                  <div
                    className="css-1rcxrt5"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #d957d9
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#b035c9"
                key="$color-pink-600"
                name="$color-pink-600"
              >
                <Styled(div)
                  hex="#b035c9"
                >
                  <div
                    className="css-gbcxzh"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #b035c9
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#9129a6"
                key="$color-pink-700"
                name="$color-pink-700"
              >
                <Styled(div)
                  hex="#9129a6"
                >
                  <div
                    className="css-x6lsc1"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #9129a6
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#702080"
                key="$color-pink-800"
                name="$color-pink-800"
              >
                <Styled(div)
                  hex="#702080"
                >
                  <div
                    className="css-rq81a1"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #702080
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#43134d"
                key="$color-pink-900"
                name="$color-pink-900"
              >
                <Styled(div)
                  hex="#43134d"
                >
                  <div
                    className="css-12gwm29"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-pink-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #43134d
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="purple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-purple
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#d5ccff",
                  "200": "#c0b6f2",
                  "300": "#ac9df2",
                  "400": "#917ef2",
                  "500": "#7c5ce6",
                  "600": "#6437cc",
                  "700": "#4b2999",
                  "800": "#381f73",
                  "900": "#231347",
                }
              }
              variablePrefix="color-purple"
            >
              <Swatch
                hex="#d5ccff"
                key="$color-purple-100"
                name="$color-purple-100"
              >
                <Styled(div)
                  hex="#d5ccff"
                >
                  <div
                    className="css-1fxyr5"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #d5ccff
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#c0b6f2"
                key="$color-purple-200"
                name="$color-purple-200"
              >
                <Styled(div)
                  hex="#c0b6f2"
                >
                  <div
                    className="css-3wz716"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #c0b6f2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ac9df2"
                key="$color-purple-300"
                name="$color-purple-300"
              >
                <Styled(div)
                  hex="#ac9df2"
                >
                  <div
                    className="css-lwvsi"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ac9df2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#917ef2"
                key="$color-purple-400"
                name="$color-purple-400"
              >
                <Styled(div)
                  hex="#917ef2"
                >
                  <div
                    className="css-yhf4oy"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #917ef2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#7c5ce6"
                key="$color-purple-500"
                name="$color-purple-500"
              >
                <Styled(div)
                  hex="#7c5ce6"
                >
                  <div
                    className="css-psf0yz"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #7c5ce6
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#6437cc"
                key="$color-purple-600"
                name="$color-purple-600"
              >
                <Styled(div)
                  hex="#6437cc"
                >
                  <div
                    className="css-gx7onm"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #6437cc
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#4b2999"
                key="$color-purple-700"
                name="$color-purple-700"
              >
                <Styled(div)
                  hex="#4b2999"
                >
                  <div
                    className="css-25iia2"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #4b2999
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#381f73"
                key="$color-purple-800"
                name="$color-purple-800"
              >
                <Styled(div)
                  hex="#381f73"
                >
                  <div
                    className="css-rr5jen"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #381f73
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#231347"
                key="$color-purple-900"
                name="$color-purple-900"
              >
                <Styled(div)
                  hex="#231347"
                >
                  <div
                    className="css-1i750j6"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-purple-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #231347
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="red"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-red
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#ffd3cc",
                  "200": "#ffb8ad",
                  "300": "#ff988c",
                  "400": "#ff7566",
                  "500": "#fd4d3f",
                  "600": "#e53935",
                  "700": "#bf2e2c",
                  "800": "#992523",
                  "900": "#661917",
                }
              }
              variablePrefix="color-red"
            >
              <Swatch
                hex="#ffd3cc"
                key="$color-red-100"
                name="$color-red-100"
              >
                <Styled(div)
                  hex="#ffd3cc"
                >
                  <div
                    className="css-1947ypo"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffd3cc
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffb8ad"
                key="$color-red-200"
                name="$color-red-200"
              >
                <Styled(div)
                  hex="#ffb8ad"
                >
                  <div
                    className="css-18987zv"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffb8ad
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ff988c"
                key="$color-red-300"
                name="$color-red-300"
              >
                <Styled(div)
                  hex="#ff988c"
                >
                  <div
                    className="css-wx16gk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ff988c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ff7566"
                key="$color-red-400"
                name="$color-red-400"
              >
                <Styled(div)
                  hex="#ff7566"
                >
                  <div
                    className="css-1f9iybq"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ff7566
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#fd4d3f"
                key="$color-red-500"
                name="$color-red-500"
              >
                <Styled(div)
                  hex="#fd4d3f"
                >
                  <div
                    className="css-lv1nmo"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #fd4d3f
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#e53935"
                key="$color-red-600"
                name="$color-red-600"
              >
                <Styled(div)
                  hex="#e53935"
                >
                  <div
                    className="css-e4iz7"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #e53935
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#bf2e2c"
                key="$color-red-700"
                name="$color-red-700"
              >
                <Styled(div)
                  hex="#bf2e2c"
                >
                  <div
                    className="css-9tlnmb"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #bf2e2c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#992523"
                key="$color-red-800"
                name="$color-red-800"
              >
                <Styled(div)
                  hex="#992523"
                >
                  <div
                    className="css-14hpw4e"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #992523
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#661917"
                key="$color-red-900"
                name="$color-red-900"
              >
                <Styled(div)
                  hex="#661917"
                >
                  <div
                    className="css-j1oap0"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-red-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #661917
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="green"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-green
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#bbfae5",
                  "200": "#91f2d2",
                  "300": "#6aebc0",
                  "400": "#4fe0b0",
                  "500": "#47cca0",
                  "600": "#3eb38c",
                  "700": "#318c6e",
                  "800": "#246650",
                  "900": "#164032",
                }
              }
              variablePrefix="color-green"
            >
              <Swatch
                hex="#bbfae5"
                key="$color-green-100"
                name="$color-green-100"
              >
                <Styled(div)
                  hex="#bbfae5"
                >
                  <div
                    className="css-11gx82d"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #bbfae5
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#91f2d2"
                key="$color-green-200"
                name="$color-green-200"
              >
                <Styled(div)
                  hex="#91f2d2"
                >
                  <div
                    className="css-17niv5o"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #91f2d2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#6aebc0"
                key="$color-green-300"
                name="$color-green-300"
              >
                <Styled(div)
                  hex="#6aebc0"
                >
                  <div
                    className="css-1w31i0t"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #6aebc0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#4fe0b0"
                key="$color-green-400"
                name="$color-green-400"
              >
                <Styled(div)
                  hex="#4fe0b0"
                >
                  <div
                    className="css-1sbcrhk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #4fe0b0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#47cca0"
                key="$color-green-500"
                name="$color-green-500"
              >
                <Styled(div)
                  hex="#47cca0"
                >
                  <div
                    className="css-ogi4dk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #47cca0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#3eb38c"
                key="$color-green-600"
                name="$color-green-600"
              >
                <Styled(div)
                  hex="#3eb38c"
                >
                  <div
                    className="css-z5401u"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #3eb38c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#318c6e"
                key="$color-green-700"
                name="$color-green-700"
              >
                <Styled(div)
                  hex="#318c6e"
                >
                  <div
                    className="css-174v44g"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #318c6e
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#246650"
                key="$color-green-800"
                name="$color-green-800"
              >
                <Styled(div)
                  hex="#246650"
                >
                  <div
                    className="css-17r72bu"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #246650
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#164032"
                key="$color-green-900"
                name="$color-green-900"
              >
                <Styled(div)
                  hex="#164032"
                >
                  <div
                    className="css-1qjhg1z"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-green-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #164032
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="orange"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-orange
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#FFE9C8",
                  "200": "#FFD093",
                  "300": "#FFB764",
                  "400": "#FF9F3C",
                  "500": "#FF881D",
                  "600": "#FB7106",
                  "700": "#DC5A03",
                  "800": "#BA4604",
                  "900": "#963606",
                }
              }
              variablePrefix="color-orange"
            >
              <Swatch
                hex="#FFE9C8"
                key="$color-orange-100"
                name="$color-orange-100"
              >
                <Styled(div)
                  hex="#FFE9C8"
                >
                  <div
                    className="css-11n751z"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FFE9C8
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#FFD093"
                key="$color-orange-200"
                name="$color-orange-200"
              >
                <Styled(div)
                  hex="#FFD093"
                >
                  <div
                    className="css-1wbzue"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FFD093
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#FFB764"
                key="$color-orange-300"
                name="$color-orange-300"
              >
                <Styled(div)
                  hex="#FFB764"
                >
                  <div
                    className="css-a7rmsr"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FFB764
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#FF9F3C"
                key="$color-orange-400"
                name="$color-orange-400"
              >
                <Styled(div)
                  hex="#FF9F3C"
                >
                  <div
                    className="css-c97wti"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FF9F3C
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#FF881D"
                key="$color-orange-500"
                name="$color-orange-500"
              >
                <Styled(div)
                  hex="#FF881D"
                >
                  <div
                    className="css-17dcz8o"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FF881D
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#FB7106"
                key="$color-orange-600"
                name="$color-orange-600"
              >
                <Styled(div)
                  hex="#FB7106"
                >
                  <div
                    className="css-1sudick"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #FB7106
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#DC5A03"
                key="$color-orange-700"
                name="$color-orange-700"
              >
                <Styled(div)
                  hex="#DC5A03"
                >
                  <div
                    className="css-fakb12"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #DC5A03
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#BA4604"
                key="$color-orange-800"
                name="$color-orange-800"
              >
                <Styled(div)
                  hex="#BA4604"
                >
                  <div
                    className="css-pgqdr9"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #BA4604
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#963606"
                key="$color-orange-900"
                name="$color-orange-900"
              >
                <Styled(div)
                  hex="#963606"
                >
                  <div
                    className="css-1gbydy9"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-orange-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #963606
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="yellow"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-yellow
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#fff7cc",
                  "200": "#fff2b3",
                  "300": "#ffec8c",
                  "400": "#ffe359",
                  "500": "#ffd500",
                  "600": "#ffb92e",
                  "700": "#e69729",
                  "800": "#b37620",
                  "900": "#805417",
                }
              }
              variablePrefix="color-yellow"
            >
              <Swatch
                hex="#fff7cc"
                key="$color-yellow-100"
                name="$color-yellow-100"
              >
                <Styled(div)
                  hex="#fff7cc"
                >
                  <div
                    className="css-1t6zszy"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #fff7cc
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#fff2b3"
                key="$color-yellow-200"
                name="$color-yellow-200"
              >
                <Styled(div)
                  hex="#fff2b3"
                >
                  <div
                    className="css-1llnqdm"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #fff2b3
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffec8c"
                key="$color-yellow-300"
                name="$color-yellow-300"
              >
                <Styled(div)
                  hex="#ffec8c"
                >
                  <div
                    className="css-ucmorf"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffec8c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffe359"
                key="$color-yellow-400"
                name="$color-yellow-400"
              >
                <Styled(div)
                  hex="#ffe359"
                >
                  <div
                    className="css-607swh"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffe359
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffd500"
                key="$color-yellow-500"
                name="$color-yellow-500"
              >
                <Styled(div)
                  hex="#ffd500"
                >
                  <div
                    className="css-13au6sz"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffd500
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffb92e"
                key="$color-yellow-600"
                name="$color-yellow-600"
              >
                <Styled(div)
                  hex="#ffb92e"
                >
                  <div
                    className="css-1qj2m84"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffb92e
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#e69729"
                key="$color-yellow-700"
                name="$color-yellow-700"
              >
                <Styled(div)
                  hex="#e69729"
                >
                  <div
                    className="css-1qiigty"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #e69729
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#b37620"
                key="$color-yellow-800"
                name="$color-yellow-800"
              >
                <Styled(div)
                  hex="#b37620"
                >
                  <div
                    className="css-atzfcr"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #b37620
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#805417"
                key="$color-yellow-900"
                name="$color-yellow-900"
              >
                <Styled(div)
                  hex="#805417"
                >
                  <div
                    className="css-1ubc3us"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-yellow-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #805417
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="gray"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                color-gray
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#f6f5fa",
                  "200": "#dddce0",
                  "300": "#c4c3c7",
                  "400": "#a2a2a6",
                  "500": "#828285",
                  "600": "#646466",
                  "700": "#4b4b4d",
                  "800": "#323233",
                  "900": "#19191a",
                }
              }
              variablePrefix="color-gray"
            >
              <Swatch
                hex="#f6f5fa"
                key="$color-gray-100"
                name="$color-gray-100"
              >
                <Styled(div)
                  hex="#f6f5fa"
                >
                  <div
                    className="css-ltp2bk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #f6f5fa
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#dddce0"
                key="$color-gray-200"
                name="$color-gray-200"
              >
                <Styled(div)
                  hex="#dddce0"
                >
                  <div
                    className="css-1ob4y6c"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #dddce0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#c4c3c7"
                key="$color-gray-300"
                name="$color-gray-300"
              >
                <Styled(div)
                  hex="#c4c3c7"
                >
                  <div
                    className="css-mpan0y"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #c4c3c7
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#a2a2a6"
                key="$color-gray-400"
                name="$color-gray-400"
              >
                <Styled(div)
                  hex="#a2a2a6"
                >
                  <div
                    className="css-1numdnq"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #a2a2a6
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#828285"
                key="$color-gray-500"
                name="$color-gray-500"
              >
                <Styled(div)
                  hex="#828285"
                >
                  <div
                    className="css-of38i9"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #828285
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#646466"
                key="$color-gray-600"
                name="$color-gray-600"
              >
                <Styled(div)
                  hex="#646466"
                >
                  <div
                    className="css-oh99a"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #646466
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#4b4b4d"
                key="$color-gray-700"
                name="$color-gray-700"
              >
                <Styled(div)
                  hex="#4b4b4d"
                >
                  <div
                    className="css-kvn049"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #4b4b4d
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#323233"
                key="$color-gray-800"
                name="$color-gray-800"
              >
                <Styled(div)
                  hex="#323233"
                >
                  <div
                    className="css-zvzgus"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #323233
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#19191a"
                key="$color-gray-900"
                name="$color-gray-900"
              >
                <Styled(div)
                  hex="#19191a"
                >
                  <div
                    className="css-d2kee9"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $color-gray-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #19191a
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/ContentContainer Content Container 1`] = `
<ContentContainer>
  <div
    className="contentContainer"
  >
    Some random content yo
  </div>
</ContentContainer>
`;

exports[`Storyshots Core|Foundations/Layouts/FlexGrid Centered 1`] = `
<FlexGrid
  fluid={true}
  style={
    Object {
      "backgroundColor": "#c8d7fa",
      "padding": "1rem",
    }
  }
>
  <div
    className="container-fluid"
    style={
      Object {
        "backgroundColor": "#c8d7fa",
        "padding": "1rem",
      }
    }
  >
    <Row>
      <div
        className="row"
      >
        <Col
          xs={12}
        >
          <div
            className="col-xs-12 col"
          >
            <Row
              center="xs"
            >
              <div
                className="row center-xs"
              >
                <Col
                  xs={6}
                >
                  <div
                    className="col-xs-6 col"
                  >
                    <Box>
                      <Item
                        flex={false}
                        style={
                          Object {
                            "backgroundColor": "#3069f0",
                            "height": 30,
                            "marginBottom": "0.5rem",
                          }
                        }
                      >
                        <Container
                          flex={false}
                          inline={false}
                          style={
                            Object {
                              "backgroundColor": "#3069f0",
                              "height": 30,
                              "marginBottom": "0.5rem",
                            }
                          }
                        >
                          <div
                            className=""
                            style={
                              Object {
                                "backgroundColor": "#3069f0",
                                "height": 30,
                                "marginBottom": "0.5rem",
                              }
                            }
                          />
                        </Container>
                      </Item>
                    </Box>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</FlexGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/FlexGrid Column Offsets 1`] = `
<FlexGrid
  fluid={true}
  style={
    Object {
      "backgroundColor": "#c8d7fa",
      "padding": "1rem",
    }
  }
>
  <div
    className="container-fluid"
    style={
      Object {
        "backgroundColor": "#c8d7fa",
        "padding": "1rem",
      }
    }
  >
    <Row>
      <div
        className="row"
      >
        <Col
          xs={1}
          xsOffset={11}
        >
          <div
            className="col-xs-offset-11 col-xs-1 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={2}
          xsOffset={10}
        >
          <div
            className="col-xs-offset-10 col-xs-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={3}
          xsOffset={9}
        >
          <div
            className="col-xs-offset-9 col-xs-3 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={4}
          xsOffset={8}
        >
          <div
            className="col-xs-offset-8 col-xs-4 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={5}
          xsOffset={7}
        >
          <div
            className="col-xs-offset-7 col-xs-5 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={6}
          xsOffset={6}
        >
          <div
            className="col-xs-offset-6 col-xs-6 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={7}
          xsOffset={5}
        >
          <div
            className="col-xs-offset-5 col-xs-7 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={8}
          xsOffset={4}
        >
          <div
            className="col-xs-offset-4 col-xs-8 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={9}
          xsOffset={3}
        >
          <div
            className="col-xs-offset-3 col-xs-9 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={10}
          xsOffset={2}
        >
          <div
            className="col-xs-offset-2 col-xs-10 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          xs={11}
          xsOffset={1}
        >
          <div
            className="col-xs-offset-1 col-xs-11 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</FlexGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/FlexGrid Fixed Grid Default 1`] = `
<FlexGrid
  style={
    Object {
      "backgroundColor": "#c8d7fa",
      "padding": "1rem",
    }
  }
>
  <div
    className="container"
    style={
      Object {
        "backgroundColor": "#c8d7fa",
        "padding": "1rem",
      }
    }
  >
    <Row>
      <div
        className="row"
      >
        <Col
          lg={1}
          md={2}
          sm={3}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-3 col-md-2 col-lg-1 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          lg={10}
          md={8}
          sm={6}
          xs={6}
        >
          <div
            className="col-xs-6 col-sm-6 col-md-8 col-lg-10 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          lg={1}
          md={2}
          sm={3}
          xs={6}
        >
          <div
            className="col-xs-6 col-sm-3 col-md-2 col-lg-1 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
      </div>
    </Row>
    <Row>
      <div
        className="row"
      >
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</FlexGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/FlexGrid Fluid Container 1`] = `
<FlexGrid
  fluid={true}
  style={
    Object {
      "backgroundColor": "#c8d7fa",
      "padding": "1rem",
    }
  }
>
  <div
    className="container-fluid"
    style={
      Object {
        "backgroundColor": "#c8d7fa",
        "padding": "1rem",
      }
    }
  >
    <Row>
      <div
        className="row"
      >
        <Col
          lg={1}
          md={2}
          sm={3}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-3 col-md-2 col-lg-1 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          lg={10}
          md={8}
          sm={6}
          xs={6}
        >
          <div
            className="col-xs-6 col-sm-6 col-md-8 col-lg-10 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          lg={1}
          md={2}
          sm={3}
          xs={6}
        >
          <div
            className="col-xs-6 col-sm-3 col-md-2 col-lg-1 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
      </div>
    </Row>
    <Row>
      <div
        className="row"
      >
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
        <Col
          sm={2}
          xs={12}
        >
          <div
            className="col-xs-12 col-sm-2 col"
          >
            <Box>
              <Item
                flex={false}
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              >
                <Container
                  flex={false}
                  inline={false}
                  style={
                    Object {
                      "backgroundColor": "#3069f0",
                      "height": 30,
                      "marginBottom": "0.5rem",
                    }
                  }
                >
                  <div
                    className=""
                    style={
                      Object {
                        "backgroundColor": "#3069f0",
                        "height": 30,
                        "marginBottom": "0.5rem",
                      }
                    }
                  />
                </Container>
              </Item>
            </Box>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</FlexGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/LayoutGrid Column Offsets 1`] = `
<LayoutGrid
  columnGap="sm"
  rowGap="sm"
>
  <div
    className="container rowGap_sm__xs rowGap_s__0 rowGap_m__1 columnGap_sm__xs columnGap_s__0 columnGap_m__1"
  >
    <Column
      offset={2}
      size={4}
    >
      <div
        className="container size_4__xs offset_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={4}
    >
      <div
        className="container size_4__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={8}
    >
      <div
        className="container size_8__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      offset={
        Object {
          "lg": 2,
          "md": 4,
          "xs": 6,
        }
      }
      size={6}
    >
      <div
        className="container size_6__xs offset_6__xs offset_4__md offset_2__lg"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      offset={
        Object {
          "md": 4,
          "xs": 0,
        }
      }
      size={6}
    >
      <div
        className="container size_6__xs offset_0__xs offset_4__md"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/LayoutGrid Grid Gaps 1`] = `
<LayoutGrid
  columnGap="sm"
  rowGap="sm"
>
  <div
    className="container rowGap_sm__xs rowGap_s__0 rowGap_m__1 columnGap_sm__xs columnGap_s__0 columnGap_m__1"
  >
    <Column
      size={12}
    >
      <div
        className="container size_12__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Layouts/LayoutGrid LayoutGrid 1`] = `
<LayoutGrid
  columnGap={
    Object {
      "lg": "lg",
      "xs": "sm",
    }
  }
  rowGap={
    Object {
      "lg": "lg",
      "xs": "sm",
    }
  }
>
  <div
    className="container rowGap_sm__xs rowGap_lg__lg columnGap_sm__xs columnGap_lg__lg"
  >
    <Column
      size={12}
    >
      <div
        className="container size_12__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={3}
    >
      <div
        className="container size_3__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={2}
    >
      <div
        className="container size_2__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Box>
          <Item
            flex={false}
            style={
              Object {
                "backgroundColor": "#3069f0",
                "height": 30,
                "marginBottom": "0.5rem",
              }
            }
          >
            <Container
              flex={false}
              inline={false}
              style={
                Object {
                  "backgroundColor": "#3069f0",
                  "height": 30,
                  "marginBottom": "0.5rem",
                }
              }
            >
              <div
                className=""
                style={
                  Object {
                    "backgroundColor": "#3069f0",
                    "height": 30,
                    "marginBottom": "0.5rem",
                  }
                }
              />
            </Container>
          </Item>
        </Box>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Typography Custom Colors 1`] = `
<Heading
  as="h3"
  fontSize="md"
  style={
    Object {
      "color": "#6400e4",
    }
  }
>
  <h3
    className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
    style={
      Object {
        "color": "#6400e4",
      }
    }
  >
    Royal Blue
  </h3>
</Heading>
`;

exports[`Storyshots Core|Foundations/Typography Heading 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                xxl
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="xxl"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="xxl"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_xxl__xs fontSize_x__0 fontSize_x__1 fontSize_l__2 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                xl
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="xl"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="xl"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_xl__xs fontSize_x__0 fontSize_l__1 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                lg
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="lg"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="lg"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_lg__xs fontSize_l__0 fontSize_g__1 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                md
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="md"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="md"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                sm
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="sm"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="sm"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                xs
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="xs"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="xs"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                xxs
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Container
          align="center"
          flex={true}
          inline={false}
          key="xxs"
        >
          <div
            className="flex align-center"
          >
            <Heading
              as="h3"
              fontSize="xxs"
              hideMargin={true}
            >
              <h3
                className="heading fontSize_xxs__xs fontSize_x__0 fontSize_x__1 fontSize_s__2 hideMargin"
              >
                Heading
              </h3>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Foundations/Typography No Margin 1`] = `
<Heading
  as="h3"
  fontSize="md"
  hideMargin={true}
>
  <h3
    className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1 hideMargin"
  >
    Without Margin
  </h3>
</Heading>
`;

exports[`Storyshots Core|Foundations/Typography Text 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="start"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-start"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                lg
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Text
          as="p"
          fontSize="lg"
          key="lg"
        >
          <p
            className="text fontSize_lg__xs fontSize_l__0 fontSize_g__1"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          </p>
        </Text>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="start"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-start"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                md
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Text
          as="p"
          fontSize="md"
          key="md"
        >
          <p
            className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          </p>
        </Text>
      </div>
    </Column>
    <Column
      size={1}
    >
      <div
        className="container size_1__xs"
      >
        <Container
          align="start"
          flex={true}
          inline={false}
        >
          <div
            className="flex align-start"
          >
            <Heading
              as="h2"
              fontSize="sm"
              hideMargin={true}
              style={
                Object {
                  "color": "#a2a2a6",
                }
              }
            >
              <h2
                className="heading fontSize_sm__xs fontSize_s__0 fontSize_m__1 hideMargin"
                style={
                  Object {
                    "color": "#a2a2a6",
                  }
                }
              >
                sm
              </h2>
            </Heading>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      size={11}
    >
      <div
        className="container size_11__xs"
      >
        <Text
          as="p"
          fontSize="sm"
          key="sm"
        >
          <p
            className="text fontSize_sm__xs fontSize_s__0 fontSize_m__1"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          </p>
        </Text>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Molecules/Accordion Accordion 1`] = `
<Accordion
  header="Click to Toggle Me!"
  onChange={[Function]}
  theme="yellow"
>
  <div
    className="accordion"
  >
    <AccordionButton
      onClick={[Function]}
      theme="yellow"
    >
      <ButtonBase
        className="accordionButton yellow"
        onClick={[Function]}
      >
        <button
          className="basicBtn accordionButton yellow"
          data-btn={true}
          onClick={[Function]}
        >
          Click to Toggle Me!
          <ChevronDownIcon
            className="expansionIcon"
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              className="expansionIcon"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <title>
                Chevron Down Icon
              </title>
              <path
                d="M20.293 7.293l1.414 1.414L12 18.414 2.293 8.707l1.414-1.414L12 15.586z"
              />
            </svg>
          </ChevronDownIcon>
        </button>
      </ButtonBase>
    </AccordionButton>
    <ForwardRef(MotionComponent)
      animate="folded"
      className="expando"
      initial={false}
      transition={
        Object {
          "duration": 0.2,
          "ease": "easeInOut",
        }
      }
      variants={
        Object {
          "expanded": Object {
            "height": "100%",
          },
          "folded": Object {
            "height": 0,
            "overflow": "hidden",
          },
        }
      }
    >
      <div
        className="expando"
        style={
          Object {
            "height": "0px",
            "overflow": "hidden",
          }
        }
      />
      <Memo(MountComponent)
        innerRef={
          Object {
            "current": <div
              class="expando"
              style="height: 0px; overflow: hidden;"
            />,
          }
        }
        isStatic={false}
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
      />
      <Component
        animate="folded"
        controls={
          ValueAnimationControls {
            "activeOverrides": Set {},
            "baseTarget": Object {
              "height": 0,
              "overflow": "hidden",
            },
            "defaultTransition": Object {
              "duration": 0.2,
              "ease": "easeInOut",
            },
            "hasValue": [Function],
            "isAnimating": Set {
              "height",
              "overflow",
            },
            "makeTargetAnimatable": [Function],
            "overrides": Array [],
            "props": Object {
              "animate": "folded",
              "aria-expanded": undefined,
              "children": undefined,
              "className": "expando",
              "initial": false,
              "transition": Object {
                "duration": 0.2,
                "ease": "easeInOut",
              },
              "variants": Object {
                "expanded": Object {
                  "height": "100%",
                },
                "folded": Object {
                  "height": 0,
                  "overflow": "hidden",
                },
              },
            },
            "readValueFromSource": [Function],
            "resolvedOverrides": Array [],
            "values": MotionValuesMap {
              "hasMounted": true,
              "onUpdate": undefined,
              "output": [Function],
              "unsubscribers": Map {
                "height" => [Function],
                "overflow" => [Function],
              },
              "values": Map {
                "height" => MotionValue {
                  "canTrackVelocity": true,
                  "current": 0,
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": undefined,
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
                "overflow" => MotionValue {
                  "canTrackVelocity": false,
                  "current": "hidden",
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": "hidden",
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
              },
            },
            "variants": Object {
              "expanded": Object {
                "height": "100%",
              },
              "folded": Object {
                "height": 0,
                "overflow": "hidden",
              },
            },
          }
        }
        inherit={false}
        initial={false}
        key="animation"
        transition={
          Object {
            "duration": 0.2,
            "ease": "easeInOut",
          }
        }
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
        variants={
          Object {
            "expanded": Object {
              "height": "100%",
            },
            "folded": Object {
              "height": 0,
              "overflow": "hidden",
            },
          }
        }
      />
    </ForwardRef(MotionComponent)>
  </div>
</Accordion>
`;

exports[`Storyshots Core|Molecules/Accordion Blue 1`] = `
<Accordion
  header="Click to Toggle Me!"
  onChange={[Function]}
  theme="blue"
>
  <div
    className="accordion"
  >
    <AccordionButton
      onClick={[Function]}
      theme="blue"
    >
      <Button
        className="accordionButton blue"
        flat={true}
        onClick={[Function]}
        theme="white"
      >
        <ButtonBase
          className="btn btn-white undefined flat accordionButton blue"
          onClick={[Function]}
        >
          <button
            className="basicBtn btn btn-white undefined flat accordionButton blue"
            data-btn={true}
            onClick={[Function]}
          >
            Click to Toggle Me!
            <ChevronDownIcon
              className="expansionIcon"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <svg
                className="expansionIcon"
                fill="currentColor"
                height={24}
                version="1.1"
                viewBox="0 0 24 24"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <title>
                  Chevron Down Icon
                </title>
                <path
                  d="M20.293 7.293l1.414 1.414L12 18.414 2.293 8.707l1.414-1.414L12 15.586z"
                />
              </svg>
            </ChevronDownIcon>
          </button>
        </ButtonBase>
      </Button>
    </AccordionButton>
    <ForwardRef(MotionComponent)
      animate="folded"
      className="expando"
      initial={false}
      transition={
        Object {
          "duration": 0.2,
          "ease": "easeInOut",
        }
      }
      variants={
        Object {
          "expanded": Object {
            "height": "100%",
          },
          "folded": Object {
            "height": 0,
            "overflow": "hidden",
          },
        }
      }
    >
      <div
        className="expando"
        style={
          Object {
            "height": "0px",
            "overflow": "hidden",
          }
        }
      />
      <Memo(MountComponent)
        innerRef={
          Object {
            "current": <div
              class="expando"
              style="height: 0px; overflow: hidden;"
            />,
          }
        }
        isStatic={false}
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
      />
      <Component
        animate="folded"
        controls={
          ValueAnimationControls {
            "activeOverrides": Set {},
            "baseTarget": Object {
              "height": 0,
              "overflow": "hidden",
            },
            "defaultTransition": Object {
              "duration": 0.2,
              "ease": "easeInOut",
            },
            "hasValue": [Function],
            "isAnimating": Set {
              "height",
              "overflow",
            },
            "makeTargetAnimatable": [Function],
            "overrides": Array [],
            "props": Object {
              "animate": "folded",
              "aria-expanded": undefined,
              "children": undefined,
              "className": "expando",
              "initial": false,
              "transition": Object {
                "duration": 0.2,
                "ease": "easeInOut",
              },
              "variants": Object {
                "expanded": Object {
                  "height": "100%",
                },
                "folded": Object {
                  "height": 0,
                  "overflow": "hidden",
                },
              },
            },
            "readValueFromSource": [Function],
            "resolvedOverrides": Array [],
            "values": MotionValuesMap {
              "hasMounted": true,
              "onUpdate": undefined,
              "output": [Function],
              "unsubscribers": Map {
                "height" => [Function],
                "overflow" => [Function],
              },
              "values": Map {
                "height" => MotionValue {
                  "canTrackVelocity": true,
                  "current": 0,
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": undefined,
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
                "overflow" => MotionValue {
                  "canTrackVelocity": false,
                  "current": "hidden",
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": "hidden",
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
              },
            },
            "variants": Object {
              "expanded": Object {
                "height": "100%",
              },
              "folded": Object {
                "height": 0,
                "overflow": "hidden",
              },
            },
          }
        }
        inherit={false}
        initial={false}
        key="animation"
        transition={
          Object {
            "duration": 0.2,
            "ease": "easeInOut",
          }
        }
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
        variants={
          Object {
            "expanded": Object {
              "height": "100%",
            },
            "folded": Object {
              "height": 0,
              "overflow": "hidden",
            },
          }
        }
      />
    </ForwardRef(MotionComponent)>
  </div>
</Accordion>
`;

exports[`Storyshots Core|Molecules/Accordion Plain 1`] = `
<Accordion
  header="Click to Toggle Me!"
  onChange={[Function]}
  theme="plain"
>
  <div
    className="accordion"
  >
    <AccordionButton
      onClick={[Function]}
      theme="plain"
    >
      <Button
        className="accordionButton plain"
        flat={true}
        onClick={[Function]}
        outline={true}
        theme="brand-dark-blue"
      >
        <ButtonBase
          className="btn btn-brand-dark-blue undefined outline flat accordionButton plain"
          onClick={[Function]}
        >
          <button
            className="basicBtn btn btn-brand-dark-blue undefined outline flat accordionButton plain"
            data-btn={true}
            onClick={[Function]}
          >
            Click to Toggle Me!
            <ChevronDownIcon
              className="expansionIcon"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <svg
                className="expansionIcon"
                fill="currentColor"
                height={24}
                version="1.1"
                viewBox="0 0 24 24"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <title>
                  Chevron Down Icon
                </title>
                <path
                  d="M20.293 7.293l1.414 1.414L12 18.414 2.293 8.707l1.414-1.414L12 15.586z"
                />
              </svg>
            </ChevronDownIcon>
          </button>
        </ButtonBase>
      </Button>
    </AccordionButton>
    <ForwardRef(MotionComponent)
      animate="folded"
      className="expando"
      initial={false}
      transition={
        Object {
          "duration": 0.2,
          "ease": "easeInOut",
        }
      }
      variants={
        Object {
          "expanded": Object {
            "height": "100%",
          },
          "folded": Object {
            "height": 0,
            "overflow": "hidden",
          },
        }
      }
    >
      <div
        className="expando"
        style={
          Object {
            "height": "0px",
            "overflow": "hidden",
          }
        }
      />
      <Memo(MountComponent)
        innerRef={
          Object {
            "current": <div
              class="expando"
              style="height: 0px; overflow: hidden;"
            />,
          }
        }
        isStatic={false}
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
      />
      <Component
        animate="folded"
        controls={
          ValueAnimationControls {
            "activeOverrides": Set {},
            "baseTarget": Object {
              "height": 0,
              "overflow": "hidden",
            },
            "defaultTransition": Object {
              "duration": 0.2,
              "ease": "easeInOut",
            },
            "hasValue": [Function],
            "isAnimating": Set {
              "height",
              "overflow",
            },
            "makeTargetAnimatable": [Function],
            "overrides": Array [],
            "props": Object {
              "animate": "folded",
              "aria-expanded": undefined,
              "children": undefined,
              "className": "expando",
              "initial": false,
              "transition": Object {
                "duration": 0.2,
                "ease": "easeInOut",
              },
              "variants": Object {
                "expanded": Object {
                  "height": "100%",
                },
                "folded": Object {
                  "height": 0,
                  "overflow": "hidden",
                },
              },
            },
            "readValueFromSource": [Function],
            "resolvedOverrides": Array [],
            "values": MotionValuesMap {
              "hasMounted": true,
              "onUpdate": undefined,
              "output": [Function],
              "unsubscribers": Map {
                "height" => [Function],
                "overflow" => [Function],
              },
              "values": Map {
                "height" => MotionValue {
                  "canTrackVelocity": true,
                  "current": 0,
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": undefined,
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
                "overflow" => MotionValue {
                  "canTrackVelocity": false,
                  "current": "hidden",
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": "hidden",
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
              },
            },
            "variants": Object {
              "expanded": Object {
                "height": "100%",
              },
              "folded": Object {
                "height": 0,
                "overflow": "hidden",
              },
            },
          }
        }
        inherit={false}
        initial={false}
        key="animation"
        transition={
          Object {
            "duration": 0.2,
            "ease": "easeInOut",
          }
        }
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
        variants={
          Object {
            "expanded": Object {
              "height": "100%",
            },
            "folded": Object {
              "height": 0,
              "overflow": "hidden",
            },
          }
        }
      />
    </ForwardRef(MotionComponent)>
  </div>
</Accordion>
`;

exports[`Storyshots Core|Molecules/Accordion Yellow 1`] = `
<Accordion
  header="Click to Toggle Me!"
  onChange={[Function]}
  theme="yellow"
>
  <div
    className="accordion"
  >
    <AccordionButton
      onClick={[Function]}
      theme="yellow"
    >
      <ButtonBase
        className="accordionButton yellow"
        onClick={[Function]}
      >
        <button
          className="basicBtn accordionButton yellow"
          data-btn={true}
          onClick={[Function]}
        >
          Click to Toggle Me!
          <ChevronDownIcon
            className="expansionIcon"
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              className="expansionIcon"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <title>
                Chevron Down Icon
              </title>
              <path
                d="M20.293 7.293l1.414 1.414L12 18.414 2.293 8.707l1.414-1.414L12 15.586z"
              />
            </svg>
          </ChevronDownIcon>
        </button>
      </ButtonBase>
    </AccordionButton>
    <ForwardRef(MotionComponent)
      animate="folded"
      className="expando"
      initial={false}
      transition={
        Object {
          "duration": 0.2,
          "ease": "easeInOut",
        }
      }
      variants={
        Object {
          "expanded": Object {
            "height": "100%",
          },
          "folded": Object {
            "height": 0,
            "overflow": "hidden",
          },
        }
      }
    >
      <div
        className="expando"
        style={
          Object {
            "height": "0px",
            "overflow": "hidden",
          }
        }
      />
      <Memo(MountComponent)
        innerRef={
          Object {
            "current": <div
              class="expando"
              style="height: 0px; overflow: hidden;"
            />,
          }
        }
        isStatic={false}
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
      />
      <Component
        animate="folded"
        controls={
          ValueAnimationControls {
            "activeOverrides": Set {},
            "baseTarget": Object {
              "height": 0,
              "overflow": "hidden",
            },
            "defaultTransition": Object {
              "duration": 0.2,
              "ease": "easeInOut",
            },
            "hasValue": [Function],
            "isAnimating": Set {
              "height",
              "overflow",
            },
            "makeTargetAnimatable": [Function],
            "overrides": Array [],
            "props": Object {
              "animate": "folded",
              "aria-expanded": undefined,
              "children": undefined,
              "className": "expando",
              "initial": false,
              "transition": Object {
                "duration": 0.2,
                "ease": "easeInOut",
              },
              "variants": Object {
                "expanded": Object {
                  "height": "100%",
                },
                "folded": Object {
                  "height": 0,
                  "overflow": "hidden",
                },
              },
            },
            "readValueFromSource": [Function],
            "resolvedOverrides": Array [],
            "values": MotionValuesMap {
              "hasMounted": true,
              "onUpdate": undefined,
              "output": [Function],
              "unsubscribers": Map {
                "height" => [Function],
                "overflow" => [Function],
              },
              "values": Map {
                "height" => MotionValue {
                  "canTrackVelocity": true,
                  "current": 0,
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": undefined,
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
                "overflow" => MotionValue {
                  "canTrackVelocity": false,
                  "current": "hidden",
                  "lastUpdated": 0,
                  "notifySubscriber": [Function],
                  "parent": undefined,
                  "prev": "hidden",
                  "renderSubscribers": Set {
                    [Function],
                  },
                  "scheduleVelocityCheck": [Function],
                  "setChild": [Function],
                  "stopAnimation": [Function],
                  "timeDelta": 0,
                  "transformer": undefined,
                  "updateAndNotify": [Function],
                  "updateSubscribers": Set {
                    [Function],
                  },
                  "velocityCheck": [Function],
                },
              },
            },
            "variants": Object {
              "expanded": Object {
                "height": "100%",
              },
              "folded": Object {
                "height": 0,
                "overflow": "hidden",
              },
            },
          }
        }
        inherit={false}
        initial={false}
        key="animation"
        transition={
          Object {
            "duration": 0.2,
            "ease": "easeInOut",
          }
        }
        values={
          MotionValuesMap {
            "hasMounted": true,
            "onUpdate": undefined,
            "output": [Function],
            "unsubscribers": Map {
              "height" => [Function],
              "overflow" => [Function],
            },
            "values": Map {
              "height" => MotionValue {
                "canTrackVelocity": true,
                "current": 0,
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": undefined,
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
              "overflow" => MotionValue {
                "canTrackVelocity": false,
                "current": "hidden",
                "lastUpdated": 0,
                "notifySubscriber": [Function],
                "parent": undefined,
                "prev": "hidden",
                "renderSubscribers": Set {
                  [Function],
                },
                "scheduleVelocityCheck": [Function],
                "setChild": [Function],
                "stopAnimation": [Function],
                "timeDelta": 0,
                "transformer": undefined,
                "updateAndNotify": [Function],
                "updateSubscribers": Set {
                  [Function],
                },
                "velocityCheck": [Function],
              },
            },
          }
        }
        variants={
          Object {
            "expanded": Object {
              "height": "100%",
            },
            "folded": Object {
              "height": 0,
              "overflow": "hidden",
            },
          }
        }
      />
    </ForwardRef(MotionComponent)>
  </div>
</Accordion>
`;

exports[`Storyshots Core|Molecules/Alert Alert 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "Login",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="info"
>
  <CardShell
    className="container container__info"
    hoverShadow={false}
  >
    <div
      className="shell container container__info"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnSW5mb0NpcmNsZUljb24="
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <defs>
                    <style>
                      .info-circle-icon_svg__info-circle-icon_svg__a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
                    </style>
                  </defs>
                  <title
                    id="gamut-icon-U3ZnSW5mb0NpcmNsZUljb24="
                  >
                    Info Circle Icon
                  </title>
                  <path
                    className="info-circle-icon_svg__info-circle-icon_svg__a"
                    d="M14.25 16.5h-.75A1.5 1.5 0 0112 15v-3.75a.75.75 0 00-.75-.75h-.75m1.125-3.75a.375.375 0 10.375.375.375.375 0 00-.375-.375"
                  />
                  <circle
                    className="info-circle-icon_svg__info-circle-icon_svg__a"
                    cx={12}
                    cy={12}
                    r={11.25}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      You have been logged out due to inactivity.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="info"
                  >
                    <ButtonBase
                      className="btn btn-info undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-info undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        Login
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__info"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__info"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert All Options 1`] = `
<Alert
  cta={
    Object {
      "href": "https://google.com",
      "onClick": [Function],
      "text": "Click Me",
    }
  }
  lines={1}
  onClose={[Function]}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQWxlcnRJY29u"
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <title
                    id="gamut-icon-U3ZnQWxlcnRJY29u"
                  >
                    Alert Icon
                  </title>
                  <path
                    d="M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={1.5}
                  />
                  <path
                    d="M12 13.5V5.25"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                  <circle
                    cx={12}
                    cy={12}
                    fill="none"
                    r={11.25}
                    stroke="currentColor"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    lines={1}
                    onTruncate={[Function]}
                  >
                    <Component
                      ellipsis={
                        <span>
                          ...
                        </span>
                      }
                      lines={1}
                      onTruncate={[Function]}
                    >
                      <span
                        className="wrapper"
                      >
                        Lorem ipsum dolor sit amet, blandit detracto vis an, purto latine torquatos eam ut. Dicta dolores adversarium mei in. Ius ei ridens mentitum consequat. Amet intellegam in nec. Pro duis novum ludus ad.
                      </span>
                    </Component>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    href="https://google.com"
                    onClick={[Function]}
                    theme="notice"
                  >
                    <ButtonBase
                      className="btn btn-notice undefined caps actionButton"
                      href="https://google.com"
                      onClick={[Function]}
                    >
                      <a
                        className="basicBtn btn btn-notice undefined caps actionButton"
                        data-btn={true}
                        href="https://google.com"
                        onClick={[Function]}
                      >
                        Click Me
                      </a>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Announcement 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "Learn More",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="announcement"
>
  <CardShell
    className="container container__announcement"
    hoverShadow={false}
  >
    <div
      className="shell container container__announcement"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnUmF0aW5nU3RhckNpcmNsZUljb24="
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <defs>
                    <style>
                      .rating-star-circle-icon_svg__rating-star-circle-icon_svg__a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
                    </style>
                  </defs>
                  <title
                    id="gamut-icon-U3ZnUmF0aW5nU3RhckNpcmNsZUljb24="
                  >
                    Rating Star Circle Icon
                  </title>
                  <path
                    className="rating-star-circle-icon_svg__rating-star-circle-icon_svg__a"
                    d="M12.593 6.8l1.4 2.95h2.377a.651.651 0 01.469 1.114l-2.187 1.946 1.209 2.778a.658.658 0 01-.938.823L12 14.767l-2.923 1.644a.658.658 0 01-.938-.823l1.209-2.778-2.183-1.946a.651.651 0 01.469-1.114h2.377l1.4-2.95a.665.665 0 011.182 0z"
                  />
                  <circle
                    className="rating-star-circle-icon_svg__rating-star-circle-icon_svg__a"
                    cx={12}
                    cy={12}
                    r={11.25}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      You can now do this new thing with this new feature we just added!
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="announcement"
                  >
                    <ButtonBase
                      className="btn btn-announcement undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-announcement undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        Learn More
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__announcement"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__announcement"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Call to Action 1`] = `
<Alert
  cta={
    Object {
      "href": "https://google.com",
      "onClick": [Function],
      "text": "Click Me",
    }
  }
  onClose={[Function]}
  showIcon={false}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Lorem ipsum dolor sit amet, blandit detracto vis an, purto latine torquatos eam ut.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    href="https://google.com"
                    onClick={[Function]}
                    theme="notice"
                  >
                    <ButtonBase
                      className="btn btn-notice undefined caps actionButton"
                      href="https://google.com"
                      onClick={[Function]}
                    >
                      <a
                        className="basicBtn btn btn-notice undefined caps actionButton"
                        data-btn={true}
                        href="https://google.com"
                        onClick={[Function]}
                      >
                        Click Me
                      </a>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Error 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "retry",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="error"
>
  <CardShell
    className="container container__error"
    hoverShadow={false}
  >
    <div
      className="shell container container__error"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQ2xvc2VDaXJjbGVJY29u"
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <defs>
                    <style>
                      .close-circle-icon_svg__close-circle-icon_svg__a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
                    </style>
                  </defs>
                  <title
                    id="gamut-icon-U3ZnQ2xvc2VDaXJjbGVJY29u"
                  >
                    Close Circle Icon
                  </title>
                  <circle
                    className="close-circle-icon_svg__close-circle-icon_svg__a"
                    cx={12}
                    cy={11.999}
                    r={11.25}
                  />
                  <path
                    className="close-circle-icon_svg__close-circle-icon_svg__a"
                    d="M7.5 16.499l9-9m0 9l-9-9"
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Couldn’t save your account changes because a connection to the server can’t be made.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="error"
                  >
                    <ButtonBase
                      className="btn btn-error undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-error undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        retry
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__error"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__error"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Expandable 1`] = `
<Alert
  lines={1}
  onClose={[Function]}
  showIcon={false}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    lines={1}
                    onTruncate={[Function]}
                  >
                    <Component
                      ellipsis={
                        <span>
                          ...
                        </span>
                      }
                      lines={1}
                      onTruncate={[Function]}
                    >
                      <span
                        className="wrapper"
                      >
                        Lorem ipsum dolor sit amet, blandit detracto vis an, purto latine torquatos eam ut. Dicta dolores adversarium mei in. Ius ei ridens mentitum consequat. Amet intellegam in nec. Pro duis novum ludus ad.
                      </span>
                    </Component>
                  </Truncate>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Icon 1`] = `
<Alert
  onClose={[Function]}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQWxlcnRJY29u"
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <title
                    id="gamut-icon-U3ZnQWxlcnRJY29u"
                  >
                    Alert Icon
                  </title>
                  <path
                    d="M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={1.5}
                  />
                  <path
                    d="M12 13.5V5.25"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                  <circle
                    cx={12}
                    cy={12}
                    fill="none"
                    r={11.25}
                    stroke="currentColor"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Lorem ipsum dolor sit amet, blandit detracto vis an, purto latine torquatos eam ut.
                    </span>
                  </Truncate>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Information 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "Login",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="info"
>
  <CardShell
    className="container container__info"
    hoverShadow={false}
  >
    <div
      className="shell container container__info"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnSW5mb0NpcmNsZUljb24="
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <defs>
                    <style>
                      .info-circle-icon_svg__info-circle-icon_svg__a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
                    </style>
                  </defs>
                  <title
                    id="gamut-icon-U3ZnSW5mb0NpcmNsZUljb24="
                  >
                    Info Circle Icon
                  </title>
                  <path
                    className="info-circle-icon_svg__info-circle-icon_svg__a"
                    d="M14.25 16.5h-.75A1.5 1.5 0 0112 15v-3.75a.75.75 0 00-.75-.75h-.75m1.125-3.75a.375.375 0 10.375.375.375.375 0 00-.375-.375"
                  />
                  <circle
                    className="info-circle-icon_svg__info-circle-icon_svg__a"
                    cx={12}
                    cy={12}
                    r={11.25}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      You have been logged out due to inactivity.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="info"
                  >
                    <ButtonBase
                      className="btn btn-info undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-info undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        Login
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__info"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__info"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Notice 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "retry",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQWxlcnRJY29u"
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <title
                    id="gamut-icon-U3ZnQWxlcnRJY29u"
                  >
                    Alert Icon
                  </title>
                  <path
                    d="M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={1.5}
                  />
                  <path
                    d="M12 13.5V5.25"
                    fill="none"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                  <circle
                    cx={12}
                    cy={12}
                    fill="none"
                    r={11.25}
                    stroke="currentColor"
                    strokeMiterlimit={10}
                    strokeWidth={1.5}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Couldn’t save your account changes because a connection to the server can’t be made.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="notice"
                  >
                    <ButtonBase
                      className="btn btn-notice undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-notice undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        retry
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Skeletal 1`] = `
<Alert
  onClose={[Function]}
  showIcon={false}
  type="notice"
>
  <CardShell
    className="container container__notice"
    hoverShadow={false}
  >
    <div
      className="shell container container__notice"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Lorem ipsum dolor sit amet, blandit detracto vis an, purto latine torquatos eam ut.
                    </span>
                  </Truncate>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__notice"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__notice"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/Alert Success 1`] = `
<Alert
  cta={
    Object {
      "onClick": [Function],
      "text": "view account",
    }
  }
  onClose={[Function]}
  showIcon={true}
  type="success"
>
  <CardShell
    className="container container__success"
    hoverShadow={false}
  >
    <div
      className="shell container container__success"
    >
      <Container
        align="start"
        flex={true}
        grow={1}
        inline={false}
        justify="spaceAround"
      >
        <div
          className="flex fld flg-1 align-start justify-spaceAround"
        >
          <Container
            align="center"
            className="section"
            flex={true}
            inline={false}
            justify="center"
          >
            <div
              className="flex align-center justify-center section"
            >
              <ForwardRef
                size={24}
              >
                <svg
                  aria-labelledby="gamut-icon-U3ZnQ2hlY2tDaXJjbGVkSWNvbg=="
                  fill="currentColor"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <defs>
                    <style>
                      .check-circled-icon_svg__check-circled-icon_svg__a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
                    </style>
                  </defs>
                  <title
                    id="gamut-icon-U3ZnQ2hlY2tDaXJjbGVkSWNvbg=="
                  >
                    Check Circled Icon
                  </title>
                  <path
                    className="check-circled-icon_svg__check-circled-icon_svg__a"
                    d="M6 13.223L8.45 16.7a1.049 1.049 0 001.707.051L18 6.828"
                  />
                  <circle
                    className="check-circled-icon_svg__check-circled-icon_svg__a"
                    cx={12}
                    cy={11.999}
                    r={11.25}
                  />
                </svg>
              </ForwardRef>
            </div>
          </Container>
          <Container
            align="start"
            className="section__main"
            flex={true}
            grow={1}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld flg-1 fls-1 align-start section__main"
            >
              <Container
                align="start"
                className="section"
                flex={true}
                grow={1}
                inline={false}
                justify="spaceBetween"
                shrink={1}
              >
                <div
                  className="flex fld flg-1 fls-1 align-start justify-spaceBetween section"
                >
                  <Truncate
                    onTruncate={[Function]}
                  >
                    <span
                      className="wrapper"
                    >
                      Your account changes were saved successfully.
                    </span>
                  </Truncate>
                </div>
              </Container>
              <Container
                className="section"
                flex={true}
                inline={false}
                shrink={1}
              >
                <div
                  className="flex fld fls-1 section"
                >
                  <Button
                    caps={true}
                    className="actionButton"
                    onClick={[Function]}
                    theme="success"
                  >
                    <ButtonBase
                      className="btn btn-success undefined caps actionButton"
                      onClick={[Function]}
                    >
                      <button
                        className="basicBtn btn btn-success undefined caps actionButton"
                        data-btn={true}
                        onClick={[Function]}
                      >
                        view account
                      </button>
                    </ButtonBase>
                  </Button>
                </div>
              </Container>
            </div>
          </Container>
          <Container
            center={true}
            className="section"
            flex={true}
            inline={false}
            shrink={1}
          >
            <div
              className="flex fld fls-1 align-center justify-center section"
            >
              <ButtonBase
                className="iconButton iconButton__success"
                onClick={[Function]}
              >
                <button
                  className="basicBtn iconButton iconButton__success"
                  data-btn={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    size={12}
                  >
                    <svg
                      aria-labelledby="gamut-icon-U3ZnQ2xvc2VJY29u"
                      fill="currentColor"
                      height={12}
                      role="img"
                      viewBox="0 0 24 24"
                      width={12}
                    >
                      <title
                        id="gamut-icon-U3ZnQ2xvc2VJY29u"
                      >
                        Close Icon
                      </title>
                      <path
                        d="M.75 23.249l22.5-22.5m0 22.5L.75.749"
                        fill="none"
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={1.5}
                      />
                    </svg>
                  </ForwardRef>
                </button>
              </ButtonBase>
            </div>
          </Container>
        </div>
      </Container>
    </div>
  </CardShell>
</Alert>
`;

exports[`Storyshots Core|Molecules/AppBar AppBar 1`] = `
<AppBar>
  <div
    className="wrapper"
  >
    <ContentContainer
      className="contentWrapper"
    >
      <div
        className="contentContainer contentWrapper"
      >
        <AppBarSection
          position="left"
        >
          <div
            className="section sectionLeft"
          />
        </AppBarSection>
      </div>
    </ContentContainer>
  </div>
</AppBar>
`;

exports[`Storyshots Core|Molecules/AppBar Header 1`] = `
<AppBar>
  <div
    className="wrapper"
  >
    <ContentContainer
      className="contentWrapper"
    >
      <div
        className="contentContainer contentWrapper"
      >
        <AppBarSection
          position="left"
        >
          <div
            className="section sectionLeft"
          >
            <Logo
              height={32}
              type="default"
            >
              <CodecademyLogo
                height={32}
              >
                <svg
                  height={32}
                  viewBox="0 0 285 60"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <title>
                    Codecademy Logo
                  </title>
                  <g
                    fill="currentColor"
                    fillRule="evenodd"
                  >
                    <path
                      d="M11.778 41.177C11.24 39.624 11 37.652 11 35.024c0-2.63.24-4.6.778-6.154C13.213 24.45 16.98 22 21.945 22c3.708 0 6.58 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.36 1.254-.48 2.688-.48 4.6 0 1.91.12 3.405.54 4.66.72 2.09 2.393 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.792-2.45-10.227-6.93m110.998 0c-.538-1.553-.778-3.525-.778-6.153 0-2.63.24-4.6.778-6.154 1.435-4.42 5.203-6.87 10.167-6.87 3.708 0 6.64 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.417 1.254-.54 2.688-.54 4.6 0 1.91.123 3.405.54 4.66.72 2.09 2.394 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.732-2.45-10.167-6.93m130.14 6.273c-.298 0-.537-.18-.537-.538V32.574c0-3.226-1.615-5.436-4.665-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.18.538-.538.538h-4.725c-.3 0-.538-.18-.538-.538V32.574c0-3.226-1.615-5.436-4.666-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.177.538-.536.538h-4.725c-.3 0-.54-.18-.54-.538V23.075c0-.298.18-.537.54-.537h4.724c.3 0 .538.18.538.537v1.793h.06c1.078-1.553 3.23-2.868 6.52-2.868 2.93 0 5.264 1.195 6.76 3.286h.06c1.912-2.09 4.365-3.286 7.893-3.286 5.742 0 8.972 3.943 8.972 9.26v15.712c0 .3-.18.538-.54.538l-4.604-.06zm11.82 8.782c-.3 0-.54-.18-.54-.538v-4.122c0-.3.18-.537.54-.537h.897c1.974 0 2.93-.897 3.708-2.928l.718-2.09-9.032-23.48c-.117-.298.12-.537.42-.537h5.085c.3 0 .538.18.598.538l5.562 16.25h.12l5.323-16.25c.12-.3.3-.538.597-.538h4.845c.298 0 .538.18.418.538l-9.33 25.987c-2.153 5.914-4.187 7.767-8.313 7.767l-1.615-.06zM49.67 39.622c.42-1.313.538-2.51.538-4.6s-.12-3.225-.538-4.6c-.718-2.09-2.333-3.225-4.605-3.225-2.273 0-3.947 1.195-4.665 3.226-.42 1.314-.54 2.45-.54 4.6 0 2.09.12 3.286.54 4.6.718 2.09 2.333 3.227 4.665 3.227 2.272.06 3.887-1.136 4.605-3.227m-14.832 1.553C34.3 39.444 34 37.772 34 35.023c0-2.748.24-4.36.838-6.153C36.213 24.51 39.98 22 45.005 22c4.964 0 8.732 2.51 10.107 6.87.54 1.732.838 3.405.838 6.153 0 2.75-.24 4.36-.838 6.153-1.375 4.36-5.143 6.87-10.107 6.87-4.964 0-8.732-2.51-10.167-6.87M155.288 22c-4.068 0-6.76.956-8.733 2.45-.18.18-.24.418-.12.656l1.914 3.406c.177.238.477.298.715.12 1.197-.956 2.87-1.733 5.622-1.733 4.008 0 5.384 1.192 5.503 3.88v8.305c0 2.867-1.973 4.24-5.502 4.24-2.75 0-4.245-1.014-4.245-3.105 0-2.33 1.614-3.345 5.322-3.345h1.137c.298 0 .538-.18.538-.537v-3.286c0-.298-.18-.538-.538-.538h-2.034c-6.1 0-9.868 2.51-9.868 7.886 0 5.197 3.768 7.588 8.313 7.588 3.47 0 5.8-1.195 6.938-2.868h.06v1.792c0 .3.18.538.54.538h4.306c.3 0 .54-.18.54-.538v-16.19C165.572 24.63 162.82 22 155.286 22M94.732 32.514c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87C86.3 30.485 86 32.455 86 35.025c0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.99-2.69c-.237-.18-.536-.18-.775.12-1.256 1.373-2.99 2.39-5.802 2.39-2.75 0-4.725-1.316-5.502-3.765-.12-.36-.24-.717-.3-1.076a20.057 20.057 0 0 1-.297-3.585c.06-1.434.12-2.33.3-3.465v-.12c.06-.297.118-.536.178-.775.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.192 4.785 3.224a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM81.232 12h-4.725c-.3 0-.538.18-.538.538v23.478c-.06 1.434-.24 2.39-.48 3.226-.66 2.09-2.273 3.167-4.606 3.167-2.273 0-3.888-1.138-4.545-3.17-.36-1.134-.54-2.39-.54-4.66s.18-3.524.54-4.66c.656-2.03 2.21-3.165 4.425-3.225H72.8c.118 0 .178-.12.178-.238v-4.72c0-.12-.06-.18-.18-.24H69.27c-4.126.06-7.117 2.032-8.373 5.975-.598 1.912-.897 3.644-.897 6.99 0 3.345.24 5.078.897 6.99 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.52-2.928h.06v1.85c0 .3.178.54.537.54h4.725c.3 0 .538-.18.538-.54V12.3c-.06-.12-.3-.298-.598-.298m123.5 20.512c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87-.538 1.615-.837 3.585-.837 6.155 0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.987-2.69c-.24-.18-.54-.18-.778.12-1.256 1.374-2.99 2.39-5.802 2.39-2.75 0-4.725-1.315-5.502-3.764-.12-.36-.24-.717-.3-1.076a20.045 20.045 0 0 1-.297-3.584c.06-1.434.12-2.33.3-3.465v-.12c.06-.296.118-.535.178-.774.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.193 4.785 3.225a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM191.232 12h-4.725c-.3 0-.538.18-.538.538v23.538c-.06 1.433-.24 2.39-.48 3.226-.66 2.09-2.273 3.226-4.606 3.226-2.333 0-3.888-1.136-4.545-3.226-.36-1.135-.54-2.39-.54-4.66s.18-3.525.54-4.66c.656-2.03 2.21-3.167 4.425-3.226h2.033c.298 0 .537-.18.537-.538v-4.122c0-.3-.18-.538-.538-.538h-3.47c-4.127.06-7.177 2.032-8.433 5.974-.598 1.912-.897 3.645-.897 7.05 0 3.346.24 5.138.897 7.05 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.58-2.927h.058v1.85c0 .3.18.537.538.537h4.725c.3 0 .54-.18.54-.538V12.477c-.12-.3-.36-.478-.658-.478M123 55v4c0 .752.175 1 1 1h16c.767 0 1-.186 1-1v-4c0-.752-.175-1-1-1h-17c.175 0 0 .186 0 1"
                    />
                    <path
                      d="M6.99 54H6c.12-.06 0-.238 0 0V6c0 .238.12.06 0 0h107c-.12.06 0 .238 0 0v47c0 .703-.12.88 0 1H6.99zM119 0c-.12.18-.12.12 0 0-.12.12-.12.12 0 0-.24.06-.36 0-1 0H0c.12.12 0 .3 0 1v59c0-.3.06-.18 0 0h118c.64 0 .76-.06 1 0-.06-.24 0-.36 0-1V0z"
                    />
                  </g>
                </svg>
              </CodecademyLogo>
            </Logo>
          </div>
        </AppBarSection>
        <AppBarSection
          position="center"
        >
          <div
            className="section sectionCenter"
          >
            Pricing
          </div>
        </AppBarSection>
        <AppBarSection
          position="right"
        >
          <div
            className="section sectionRight"
          >
            Sign In
          </div>
        </AppBarSection>
      </div>
    </ContentContainer>
  </div>
</AppBar>
`;

exports[`Storyshots Core|Molecules/Banner Banner 1`] = `
<Banner
  onClose={[Function]}
>
  <div
    className="container containerFullWidth"
  >
    <div
      className="content"
    >
      Some Banner content!
    </div>
    <Button
      className="closeButton"
      onClick={[Function]}
    >
      <ButtonBase
        className="btn btn-brand-red undefined closeButton"
        onClick={[Function]}
      >
        <button
          className="basicBtn btn btn-brand-red undefined closeButton"
          data-btn={true}
          onClick={[Function]}
        >
          <CloseIcon
            aria-label="dismiss"
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-label="dismiss"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <g
                fillRule="nonzero"
              >
                <path
                  d="M19.778 18.364l-1.414 1.414L4.222 5.636l1.414-1.414z"
                />
                <path
                  d="M5.636 19.778l-1.414-1.414L18.364 4.222l1.414 1.414z"
                />
              </g>
            </svg>
          </CloseIcon>
        </button>
      </ButtonBase>
    </Button>
  </div>
</Banner>
`;

exports[`Storyshots Core|Molecules/Banner Bordered 1`] = `
<Banner
  displayStyle="border-bottom"
  onClose={[Function]}
>
  <div
    className="container containerBordered"
  >
    <div
      className="content"
    >
      Some Banner content!
    </div>
    <Button
      className="closeButton"
      onClick={[Function]}
    >
      <ButtonBase
        className="btn btn-brand-red undefined closeButton"
        onClick={[Function]}
      >
        <button
          className="basicBtn btn btn-brand-red undefined closeButton"
          data-btn={true}
          onClick={[Function]}
        >
          <CloseIcon
            aria-label="dismiss"
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-label="dismiss"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <g
                fillRule="nonzero"
              >
                <path
                  d="M19.778 18.364l-1.414 1.414L4.222 5.636l1.414-1.414z"
                />
                <path
                  d="M5.636 19.778l-1.414-1.414L18.364 4.222l1.414 1.414z"
                />
              </g>
            </svg>
          </CloseIcon>
        </button>
      </ButtonBase>
    </Button>
  </div>
</Banner>
`;

exports[`Storyshots Core|Molecules/Banner Icon Banner 1`] = `
<Banner
  icon={<ForwardRef />}
  onClose={[Function]}
>
  <div
    className="container containerFullWidth"
  >
    <div
      data-testid="icon-id"
    >
      <ForwardRef>
        <svg
          aria-labelledby="gamut-icon-U3ZnQWxlcnRJY29u"
          fill="currentColor"
          height="16px"
          role="img"
          viewBox="0 0 24 24"
          width="16px"
        >
          <title
            id="gamut-icon-U3ZnQWxlcnRJY29u"
          >
            Alert Icon
          </title>
          <path
            d="M12 16.5a.375.375 0 10.375.375A.375.375 0 0012 16.5h0"
            fill="none"
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={1.5}
          />
          <path
            d="M12 13.5V5.25"
            fill="none"
            stroke="currentColor"
            strokeLinecap="round"
            strokeMiterlimit={10}
            strokeWidth={1.5}
          />
          <circle
            cx={12}
            cy={12}
            fill="none"
            r={11.25}
            stroke="currentColor"
            strokeMiterlimit={10}
            strokeWidth={1.5}
          />
        </svg>
      </ForwardRef>
    </div>
    <div
      className="content"
    >
      Some Banner content!
    </div>
    <Button
      className="closeButton"
      onClick={[Function]}
    >
      <ButtonBase
        className="btn btn-brand-red undefined closeButton"
        onClick={[Function]}
      >
        <button
          className="basicBtn btn btn-brand-red undefined closeButton"
          data-btn={true}
          onClick={[Function]}
        >
          <CloseIcon
            aria-label="dismiss"
            fill="currentColor"
            height={24}
            version="1.1"
            viewBox="0 0 24 24"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-label="dismiss"
              fill="currentColor"
              height={24}
              version="1.1"
              viewBox="0 0 24 24"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <g
                fillRule="nonzero"
              >
                <path
                  d="M19.778 18.364l-1.414 1.414L4.222 5.636l1.414-1.414z"
                />
                <path
                  d="M5.636 19.778l-1.414-1.414L18.364 4.222l1.414 1.414z"
                />
              </g>
            </svg>
          </CloseIcon>
        </button>
      </ButtonBase>
    </Button>
  </div>
</Banner>
`;

exports[`Storyshots Core|Molecules/Card Card 1`] = `
<CardShell
  hoverShadow={false}
>
  <div
    className="shell"
  >
    <CardBody
      standardPadding={true}
    >
      <div
        className="standardPadding"
      >
        <Heading
          as="h3"
        >
          <h3
            className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Card Body
          </h3>
        </Heading>
        <Text>
          <p
            className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            This is some body text
          </p>
        </Text>
        <Text>
          <p
            className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Blah blah blurgha blurgha
          </p>
        </Text>
      </div>
    </CardBody>
    <CardFooter
      align="left"
      border="none"
      flex={true}
      standardHeight={true}
      standardPadding={true}
    >
      <div
        className="footer flex transparentTopBorder leftAlign standardPadding standardHeight"
      >
        Footer Text
      </div>
    </CardFooter>
  </div>
</CardShell>
`;

exports[`Storyshots Core|Molecules/Interstitial Decorated Interstitial 1`] = `
<Interstitial
  buttons={
    Array [
      <Button
        theme="brand-red"
      >
        Red Button
      </Button>,
      <Button
        theme="brand-blue"
      >
        Blue Button
      </Button>,
    ]
  }
  decoration="😍"
  title="Decorations, too!"
>
  <div
    className="Interstitial"
  >
    <div
      className="content"
    >
      <h1
        className="title"
      >
        <div
          className="decoration"
        >
          😍
        </div>
        Decorations, too!
      </h1>
      <div
        className="children"
      >
        I really love emojis. Please confirm you love emojis too!
      </div>
    </div>
    <div
      className="buttons"
    >
      <Button
        key="1"
        theme="brand-red"
      >
        <ButtonBase
          className="btn btn-brand-red undefined"
        >
          <button
            className="basicBtn btn btn-brand-red undefined"
            data-btn={true}
          >
            Red Button
          </button>
        </ButtonBase>
      </Button>
      <Button
        key="2"
        theme="brand-blue"
      >
        <ButtonBase
          className="btn btn-brand-blue undefined"
        >
          <button
            className="basicBtn btn btn-brand-blue undefined"
            data-btn={true}
          >
            Blue Button
          </button>
        </ButtonBase>
      </Button>
    </div>
  </div>
</Interstitial>
`;

exports[`Storyshots Core|Molecules/Interstitial Interstitial 1`] = `
<Interstitial
  buttons={
    Array [
      <Button
        theme="brand-yellow"
      >
        One Button
      </Button>,
      <Button
        outline={true}
        theme="white"
      >
        Two Button
      </Button>,
    ]
  }
  title="What a Glorious Day"
>
  <div
    className="Interstitial"
  >
    <div
      className="content"
    >
      <h1
        className="title"
      >
        What a Glorious Day
      </h1>
      <div
        className="children"
      >
        Place some happy text as the content of this interstitial for the learner to feel good about themselves. Note that the max-width for this content is large but not too large. We want some amount of vertical centering!
      </div>
    </div>
    <div
      className="buttons"
    >
      <Button
        key="1"
        theme="brand-yellow"
      >
        <ButtonBase
          className="btn btn-brand-yellow undefined"
        >
          <button
            className="basicBtn btn btn-brand-yellow undefined"
            data-btn={true}
          >
            One Button
          </button>
        </ButtonBase>
      </Button>
      <Button
        key="2"
        outline={true}
        theme="white"
      >
        <ButtonBase
          className="btn btn-white undefined outline"
        >
          <button
            className="basicBtn btn btn-white undefined outline"
            data-btn={true}
          >
            Two Button
          </button>
        </ButtonBase>
      </Button>
    </div>
  </div>
</Interstitial>
`;

exports[`Storyshots Core|Molecules/Modal Clicking Outside 1`] = `
<Button
  onClick={[Function]}
>
  <ButtonBase
    className="btn btn-brand-red undefined"
    onClick={[Function]}
  >
    <button
      className="basicBtn btn btn-brand-red undefined"
      data-btn={true}
      onClick={[Function]}
    >
      Open
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Molecules/Modal Modal 1`] = `
<Button
  onClick={[Function]}
>
  <ButtonBase
    className="btn btn-brand-red undefined"
    onClick={[Function]}
  >
    <button
      className="basicBtn btn btn-brand-red undefined"
      data-btn={true}
      onClick={[Function]}
    >
      Open
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Molecules/Modal Without Close Default 1`] = `
<Button
  onClick={[Function]}
>
  <ButtonBase
    className="btn btn-brand-red undefined"
    onClick={[Function]}
  >
    <button
      className="basicBtn btn btn-brand-red undefined"
      data-btn={true}
      onClick={[Function]}
    >
      Open
    </button>
  </ButtonBase>
</Button>
`;

exports[`Storyshots Core|Molecules/NotificationList Empty 1`] = `
<NotificationList
  notifications={Array []}
>
  <div
    className="notificationsContainer emptyContainer"
  >
    <button
      className="emptyText"
      type="button"
    >
      No new notifications.
      <br />
      You're all caught up!
    </button>
  </div>
</NotificationList>
`;

exports[`Storyshots Core|Molecules/NotificationList NotificationsList 1`] = `
<NotificationList
  notifications={
    Array [
      Object {
        "campaign": "pro-trial",
        "date": 2,
        "id": "123",
        "imageUrl": "https://bit.ly/2Ckp4eW",
        "link": "https://www.codecademy.com/subscriptions/proSixMonthV2a/checkout",
        "text": "It's your last day of Pro Trial! Sign up with Codecademy Pro to get helpful features like quizzes and projects and practice on the Codecademy Go mobile app!",
      },
      Object {
        "campaign": "python-livestream",
        "date": 1,
        "iconSettings": Object {
          "backgroundColor": "#ffd500",
          "color": "#3069f0",
        },
        "iconSlug": "python",
        "id": "abc",
        "link": "https://www.codecademy.com/courses/livestreams/projects/livestream-intro-to-statistics-in-python",
        "text": "Check out our Python livestream!",
        "unread": true,
      },
    ]
  }
>
  <div
    className="notificationsContainer"
  >
    <NotificationItem
      key="123"
      notification={
        Object {
          "campaign": "pro-trial",
          "date": 2,
          "id": "123",
          "imageUrl": "https://bit.ly/2Ckp4eW",
          "link": "https://www.codecademy.com/subscriptions/proSixMonthV2a/checkout",
          "text": "It's your last day of Pro Trial! Sign up with Codecademy Pro to get helpful features like quizzes and projects and practice on the Codecademy Go mobile app!",
        }
      }
      onClick={[Function]}
    >
      <a
        className="notification"
        href="https://www.codecademy.com/subscriptions/proSixMonthV2a/checkout"
        onClick={[Function]}
        rel="noopener noreferrer"
        target="_blank"
      >
        <NotificationIcon
          imageUrl="https://bit.ly/2Ckp4eW"
        >
          <div
            className="iconContainer"
          >
            <img
              alt=""
              className="icon"
              src="https://bit.ly/2Ckp4eW"
            />
          </div>
        </NotificationIcon>
        <div
          className="body"
        >
          <div
            className="text"
          >
            <Truncate
              lines={3}
            >
              <Component
                ellipsis={
                  <span>
                    ...
                  </span>
                }
                lines={3}
              >
                <span
                  className="wrapper"
                >
                  It's your last day of Pro Trial! Sign up with Codecademy Pro to get helpful features like quizzes and projects and practice on the Codecademy Go mobile app!
                </span>
              </Component>
            </Truncate>
          </div>
          <div
            className="time"
          >
            42 years ago
          </div>
        </div>
      </a>
    </NotificationItem>
    <NotificationItem
      key="abc"
      notification={
        Object {
          "campaign": "python-livestream",
          "date": 1,
          "iconSettings": Object {
            "backgroundColor": "#ffd500",
            "color": "#3069f0",
          },
          "iconSlug": "python",
          "id": "abc",
          "link": "https://www.codecademy.com/courses/livestreams/projects/livestream-intro-to-statistics-in-python",
          "text": "Check out our Python livestream!",
          "unread": true,
        }
      }
      onClick={[Function]}
    >
      <a
        className="notification unread"
        href="https://www.codecademy.com/courses/livestreams/projects/livestream-intro-to-statistics-in-python"
        onClick={[Function]}
        rel="noopener noreferrer"
        target="_blank"
      >
        <NotificationIcon
          iconSettings={
            Object {
              "backgroundColor": "#ffd500",
              "color": "#3069f0",
            }
          }
          iconSlug="python"
        >
          <div
            className="iconContainer"
          >
            <div
              className="iconComponentContainer"
              style={
                Object {
                  "backgroundColor": "#ffd500",
                  "color": "#3069f0",
                }
              }
            >
              <Icon
                className="iconImage"
                name="python"
              >
                <PythonIcon
                  className="iconImage"
                  fill="currentColor"
                  height={24}
                  version="1.1"
                  viewBox="0 0 24 24"
                  width={24}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <svg
                    className="iconImage"
                    fill="currentColor"
                    height={24}
                    version="1.1"
                    viewBox="0 0 24 24"
                    width={24}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <title>
                      Python Icon
                    </title>
                    <path
                      d="M19.782 7.032h-2.815V4.217L14.75 2h-5.5L7.033 4.217v2.815H4.218L2 9.25v5.5l2.218 2.217h2.815v2.816L9.25 22h5.5l2.217-2.218v-2.815h2.816L22 14.75v-5.5l-2.218-2.217zM4.687 15.837l-1.555-1.554V9.718l1.556-1.555H12v-1.13H8.162V4.688l1.555-1.555h4.566l1.555 1.555v4.54l-2.188 2.207H9.88l-2.847 2.848v1.555H4.688zm16.18-1.554l-1.555 1.555H12v1.132h3.838v2.345l-1.555 1.555H9.718l-1.555-1.555V14.75l2.185-2.185h3.775l2.845-2.875V8.162h2.345l1.555 1.555v4.565z"
                    />
                    <path
                      d="M9.547 4.453h1.133V5.71H9.548V4.453zM13.32 18.29h1.133v1.258H13.32V18.29z"
                    />
                  </svg>
                </PythonIcon>
              </Icon>
            </div>
          </div>
        </NotificationIcon>
        <div
          className="body"
        >
          <div
            className="text"
          >
            <Truncate
              lines={3}
            >
              <Component
                ellipsis={
                  <span>
                    ...
                  </span>
                }
                lines={3}
              >
                <span
                  className="wrapper"
                >
                  Check out our Python livestream!
                </span>
              </Component>
            </Truncate>
          </div>
          <div
            className="time"
          >
            42 years ago
          </div>
        </div>
      </a>
    </NotificationItem>
  </div>
</NotificationList>
`;

exports[`Storyshots Core|Molecules/SplitInterstitial Custom Images 1`] = `
<SplitInterstitial
  bottomRightImage={
    Object {
      "src": "file-mock-item",
    }
  }
  left={
    Object {
      "children": <React.Fragment>
        <Heading
          as="h1"
        >
          Important stuff!
        </Heading>
        <Text>
          Some sort of information here, perhaps?
        </Text>
      </React.Fragment>,
    }
  }
  right={
    Object {
      "children": <React.Fragment>
        <Heading
          as="h2"
        >
          Less important...
        </Heading>
        <Text>
          Some more information here, maybe?
        </Text>
      </React.Fragment>,
    }
  }
  topLeftImage={
    Object {
      "src": "file-mock-item",
    }
  }
>
  <div
    className="splitInterstitial"
  >
    <div
      className="side"
    >
      <Heading
        as="h2"
      >
        <h2
          className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          Less important...
        </h2>
      </Heading>
      <Text>
        <p
          className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          Some more information here, maybe?
        </p>
      </Text>
    </div>
    <div
      className="side left"
    >
      <img
        alt=""
        className="topLeftImage"
        src="file-mock-item"
      />
      <img
        alt=""
        className="bottomRightImage"
        src="file-mock-item"
      />
      <div
        className="children"
      >
        <Heading
          as="h1"
        >
          <h1
            className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Important stuff!
          </h1>
        </Heading>
        <Text>
          <p
            className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Some sort of information here, perhaps?
          </p>
        </Text>
      </div>
    </div>
  </div>
</SplitInterstitial>
`;

exports[`Storyshots Core|Molecules/SplitInterstitial SplitInterstitial 1`] = `
<SplitInterstitial
  left={
    Object {
      "children": <React.Fragment>
        <Heading
          as="h1"
        >
          Important stuff!
        </Heading>
        <Text>
          Some sort of information here, perhaps?
        </Text>
      </React.Fragment>,
    }
  }
  right={
    Object {
      "children": <React.Fragment>
        <Heading
          as="h2"
        >
          Less important...
        </Heading>
        <Text>
          Some more information here, maybe?
        </Text>
      </React.Fragment>,
    }
  }
>
  <div
    className="splitInterstitial"
  >
    <div
      className="side"
    >
      <Heading
        as="h2"
      >
        <h2
          className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          Less important...
        </h2>
      </Heading>
      <Text>
        <p
          className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          Some more information here, maybe?
        </p>
      </Text>
    </div>
    <div
      className="side left"
    >
      <img
        alt=""
        className="topLeftImage"
        src="file-mock-item"
      />
      <img
        alt=""
        className="bottomRightImage"
        src="file-mock-item"
      />
      <img
        alt=""
        className="bottomRightImage"
        src="file-mock-item"
      />
      <div
        className="children"
      >
        <Heading
          as="h1"
        >
          <h1
            className="heading fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Important stuff!
          </h1>
        </Heading>
        <Text>
          <p
            className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
          >
            Some sort of information here, perhaps?
          </p>
        </Text>
      </div>
    </div>
  </div>
</SplitInterstitial>
`;

exports[`Storyshots Core|Molecules/Tabs Controlled 1`] = `
<Controlled>
  <Tabs
    activeTabIndex={0}
    onChange={[Function]}
    renderAllPanels={false}
  >
    <div>
      <TabList
        activeTabIndex={0}
        center={false}
        createBaseId={[Function]}
        key=".0"
        onChange={[Function]}
      >
        <div
          className="tabList"
          role="tablist"
          style={
            Object {
              "maxWidth": undefined,
            }
          }
        >
          <Tab
            active={true}
            id="1-0"
            key="1-0"
            onChange={[Function]}
            tabIndex={0}
          >
            <ButtonBase
              aria-controls="1-0-panel"
              aria-selected={true}
              className="tab tab_default active tab_default__active"
              id="1-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="1-0-panel"
                aria-selected={true}
                className="basicBtn tab tab_default active tab_default__active"
                data-btn={true}
                id="1-0"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 1
              </button>
            </ButtonBase>
          </Tab>
          <Tab
            active={false}
            id="1-1"
            key="1-1"
            onChange={[Function]}
            tabIndex={1}
          >
            <ButtonBase
              aria-controls="1-1-panel"
              aria-selected={false}
              className="tab tab_default"
              id="1-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="1-1-panel"
                aria-selected={false}
                className="basicBtn tab tab_default"
                data-btn={true}
                id="1-1"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 2
              </button>
            </ButtonBase>
          </Tab>
          <Tab
            active={false}
            id="1-2"
            key="1-2"
            onChange={[Function]}
            tabIndex={2}
          >
            <ButtonBase
              aria-controls="1-2-panel"
              aria-selected={false}
              className="tab tab_default"
              id="1-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="1-2-panel"
                aria-selected={false}
                className="basicBtn tab tab_default"
                data-btn={true}
                id="1-2"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 3
              </button>
            </ButtonBase>
          </Tab>
        </div>
      </TabList>
      <TabPanel
        active={true}
        id="1-0-panel"
        key="1-0"
        renderAllPanels={false}
      >
        <div
          aria-hidden={false}
          aria-labelledby="1-0"
          className="active"
          id="1-0-panel"
          role="tabpanel"
        >
          <h2>
            Welcome to Tab 1
          </h2>
          <p>
            Hi there! I'm the contents inside Tab 1. Yippee!
          </p>
        </div>
      </TabPanel>
      <TabPanel
        active={false}
        id="1-1-panel"
        key="1-1"
        renderAllPanels={false}
      >
        <div
          aria-hidden={true}
          aria-labelledby="1-1"
          className="hidden"
          id="1-1-panel"
          role="tabpanel"
        />
      </TabPanel>
      <TabPanel
        active={false}
        id="1-2-panel"
        key="1-2"
        renderAllPanels={false}
      >
        <div
          aria-hidden={true}
          aria-labelledby="1-2"
          className="hidden"
          id="1-2-panel"
          role="tabpanel"
        />
      </TabPanel>
    </div>
  </Tabs>
</Controlled>
`;

exports[`Storyshots Core|Molecules/Tabs Tabs 1`] = `
<Uncontrolled>
  <Tabs
    defaultActiveTabIndex={2}
    onChange={[Function]}
    renderAllPanels={false}
  >
    <div>
      <TabList
        activeTabIndex={2}
        center={false}
        createBaseId={[Function]}
        key=".0"
        onChange={[Function]}
      >
        <div
          className="tabList"
          role="tablist"
          style={
            Object {
              "maxWidth": undefined,
            }
          }
        >
          <Tab
            active={false}
            id="0-0"
            key="0-0"
            onChange={[Function]}
            tabIndex={0}
          >
            <ButtonBase
              aria-controls="0-0-panel"
              aria-selected={false}
              className="tab tab_default"
              id="0-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="0-0-panel"
                aria-selected={false}
                className="basicBtn tab tab_default"
                data-btn={true}
                id="0-0"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 1
              </button>
            </ButtonBase>
          </Tab>
          <Tab
            active={false}
            id="0-1"
            key="0-1"
            onChange={[Function]}
            tabIndex={1}
          >
            <ButtonBase
              aria-controls="0-1-panel"
              aria-selected={false}
              className="tab tab_default"
              id="0-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="0-1-panel"
                aria-selected={false}
                className="basicBtn tab tab_default"
                data-btn={true}
                id="0-1"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 2
              </button>
            </ButtonBase>
          </Tab>
          <Tab
            active={true}
            id="0-2"
            key="0-2"
            onChange={[Function]}
            tabIndex={2}
          >
            <ButtonBase
              aria-controls="0-2-panel"
              aria-selected={true}
              className="tab tab_default active tab_default__active"
              id="0-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="tab"
              tabIndex={0}
            >
              <button
                aria-controls="0-2-panel"
                aria-selected={true}
                className="basicBtn tab tab_default active tab_default__active"
                data-btn={true}
                id="0-2"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="tab"
                tabIndex={0}
              >
                Tab 3
              </button>
            </ButtonBase>
          </Tab>
        </div>
      </TabList>
      <TabPanel
        active={false}
        id="0-0-panel"
        key="0-0"
        renderAllPanels={false}
      >
        <div
          aria-hidden={true}
          aria-labelledby="0-0"
          className="hidden"
          id="0-0-panel"
          role="tabpanel"
        />
      </TabPanel>
      <TabPanel
        active={false}
        id="0-1-panel"
        key="0-1"
        renderAllPanels={false}
      >
        <div
          aria-hidden={true}
          aria-labelledby="0-1"
          className="hidden"
          id="0-1-panel"
          role="tabpanel"
        />
      </TabPanel>
      <TabPanel
        active={true}
        id="0-2-panel"
        key="0-2"
        renderAllPanels={false}
      >
        <div
          aria-hidden={false}
          aria-labelledby="0-2"
          className="active"
          id="0-2-panel"
          role="tabpanel"
        >
          <h2>
            Welcome to Tab 3
          </h2>
          <p>
            Hi there! I'm the contents inside Tab 3. Yippee!
          </p>
        </div>
      </TabPanel>
    </div>
  </Tabs>
</Uncontrolled>
`;

exports[`Storyshots Core|Molecules/Truncate Truncate 1`] = `
<Truncate
  lines={2}
  onTruncate={[Function]}
>
  <Component
    ellipsis={
      <span>
        ...
      </span>
    }
    lines={2}
    onTruncate={[Function]}
  >
    <span
      className="wrapper"
    >
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
    </span>
  </Component>
</Truncate>
`;

exports[`Storyshots Core|Molecules/Truncate Truncate Markup 1`] = `
<Truncate
  lines={1}
>
  <Component
    ellipsis={
      <span>
        ...
      </span>
    }
    lines={1}
  >
    <span
      className="wrapper"
    >
      This works with 
      <Text>
        <p
          className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          any
        </p>
      </Text>
       
      <Text>
        <p
          className="text fontSize_md__xs fontSize_m__0 fontSize_d__1"
        >
          random
        </p>
      </Text>
       markup! Try it out.
    </span>
  </Component>
</Truncate>
`;

exports[`Storyshots Core|Organisms/GridForm Custom Inputs 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "label": "Gimme two more swags",
        "name": "custom-input",
        "render": [Function],
        "size": 12,
        "type": "custom",
        "validation": Object {
          "pattern": Object {
            "message": "Still not enough swag, what are you doing... 💢",
            "value": /swag\\(\\.\\*\\)swag/,
          },
          "required": true,
        },
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Submit Me!?",
    }
  }
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "label": "Gimme two more swags",
                "name": "custom-input",
                "render": [Function],
                "size": 12,
                "type": "custom",
                "validation": Object {
                  "pattern": Object {
                    "message": "Still not enough swag, what are you doing... 💢",
                    "value": /swag\\(\\.\\*\\)swag/,
                  },
                  "required": true,
                },
              }
            }
            key="custom-input"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={12}
            >
              <div
                className="container size_12__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="custom-input"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="custom-input"
                      >
                        Gimme two more swags
                      </label>
                    </FormGroupLabel>
                    <GridFormCustomInput
                      className="gridFormInput"
                      field={
                        Object {
                          "label": "Gimme two more swags",
                          "name": "custom-input",
                          "render": [Function],
                          "size": 12,
                          "type": "custom",
                          "validation": Object {
                            "pattern": Object {
                              "message": "Still not enough swag, what are you doing... 💢",
                              "value": /swag\\(\\.\\*\\)swag/,
                            },
                            "required": true,
                          },
                        }
                      }
                      register={[Function]}
                      setValue={[Function]}
                    >
                      <ForwardRef
                        error={false}
                        id="custom-text-input"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input"
                          id="custom-text-input"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                      🕺
                    </GridFormCustomInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Submit Me!?"
            disabled={false}
          >
            <Column
              className="base left"
            >
              <div
                className="container base left"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Submit Me!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Core|Organisms/GridForm GridForm 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "label": "Simple text",
        "name": "simple-text",
        "size": 3,
        "type": "text",
      },
      Object {
        "defaultValue": "yeet",
        "label": "Text with default value",
        "name": "text-with-default",
        "size": 4,
        "type": "text",
      },
      Object {
        "label": "Simple select (required)",
        "name": "simple-select",
        "options": Array [
          "",
          "One fish",
          "Two fish",
          "Red fish",
          "Blue fish",
        ],
        "size": 5,
        "type": "select",
        "validation": Object {
          "required": "Please select an option",
        },
      },
      Object {
        "label": "Upload a cat image (we support pdf, jpeg, or png files)",
        "name": "file-input",
        "size": 6,
        "type": "file",
        "validation": Object {
          "required": true,
          "validate": [Function],
        },
      },
      Object {
        "label": "Write a paragraph about penguins",
        "name": "textarea-input",
        "size": 12,
        "type": "textarea",
        "validation": Object {
          "required": "Please write something about penguins!",
        },
      },
      Object {
        "label": "Validated, required text that must contain the word 'swag' twice",
        "name": "validated-required-text",
        "size": 5,
        "type": "text",
        "validation": Object {
          "pattern": Object {
            "message": "Not enough swag",
            "value": /swag\\(\\.\\*\\)swag/,
          },
          "required": true,
        },
      },
      Object {
        "description": "I have swag",
        "label": "Swag levels",
        "name": "enough-swag",
        "size": 3,
        "type": "checkbox",
      },
      Object {
        "label": "Preferred Modern Artist",
        "name": "artist",
        "options": Array [
          Object {
            "label": "Cardi B",
            "value": "cardi",
          },
          Object {
            "label": "Nicki Minaj",
            "value": "nicki",
          },
        ],
        "size": 4,
        "type": "radio-group",
        "validation": Object {
          "required": "You gotta pick one!",
        },
      },
      Object {
        "description": "I accept the terms and conditions (required or else!!!)",
        "label": "End User License Agreement",
        "name": "eula-checkbox-required",
        "size": 12,
        "type": "checkbox",
        "validation": Object {
          "required": "Please check the box to agree to the terms.",
        },
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Submit Me!?",
      "size": 12,
    }
  }
  validation="onSubmit"
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 3,
                "type": "text",
              }
            }
            key="simple-text"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={3}
            >
              <div
                className="container size_3__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="simple-text"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="simple-text"
                      >
                        Simple text
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Simple text",
                          "name": "simple-text",
                          "size": 3,
                          "type": "text",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="simple-text"
                        name="simple-text"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input gridFormInput"
                          id="simple-text"
                          name="simple-text"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "defaultValue": "yeet",
                "label": "Text with default value",
                "name": "text-with-default",
                "size": 4,
                "type": "text",
              }
            }
            key="text-with-default"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={4}
            >
              <div
                className="container size_4__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="text-with-default"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="text-with-default"
                      >
                        Text with default value
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "defaultValue": "yeet",
                          "label": "Text with default value",
                          "name": "text-with-default",
                          "size": 4,
                          "type": "text",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="text-with-default"
                        name="text-with-default"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input gridFormInput"
                          id="text-with-default"
                          name="text-with-default"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "label": "Simple select (required)",
                "name": "simple-select",
                "options": Array [
                  "",
                  "One fish",
                  "Two fish",
                  "Red fish",
                  "Blue fish",
                ],
                "size": 5,
                "type": "select",
                "validation": Object {
                  "required": "Please select an option",
                },
              }
            }
            key="simple-select"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={5}
            >
              <div
                className="container size_5__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="simple-select"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="simple-select"
                      >
                        Simple select (required)
                      </label>
                    </FormGroupLabel>
                    <GridFormSelectInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Simple select (required)",
                          "name": "simple-select",
                          "options": Array [
                            "",
                            "One fish",
                            "Two fish",
                            "Red fish",
                            "Blue fish",
                          ],
                          "size": 5,
                          "type": "select",
                          "validation": Object {
                            "required": "Please select an option",
                          },
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="simple-select"
                        name="simple-select"
                        onChange={[Function]}
                        options={
                          Array [
                            "",
                            "One fish",
                            "Two fish",
                            "Red fish",
                            "Blue fish",
                          ]
                        }
                      >
                        <div
                          className="Select gridFormInput"
                        >
                          <svg
                            className="selectIcon"
                          >
                            <path
                              d="M1.175 0L5 3.825 8.825 0 10 1.183l-5 5-5-5z"
                              fill="#3E3E40"
                            />
                          </svg>
                          <select
                            className="selectInput"
                            defaultValue=""
                            htmlFor="simple-select"
                            id="simple-select"
                            name="simple-select"
                            onChange={[Function]}
                          >
                            <option
                              key=""
                              value=""
                            />
                            <option
                              key="One fish"
                              value="One fish"
                            >
                              One fish
                            </option>
                            <option
                              key="Two fish"
                              value="Two fish"
                            >
                              Two fish
                            </option>
                            <option
                              key="Red fish"
                              value="Red fish"
                            >
                              Red fish
                            </option>
                            <option
                              key="Blue fish"
                              value="Blue fish"
                            >
                              Blue fish
                            </option>
                          </select>
                        </div>
                      </ForwardRef>
                    </GridFormSelectInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "label": "Upload a cat image (we support pdf, jpeg, or png files)",
                "name": "file-input",
                "size": 6,
                "type": "file",
                "validation": Object {
                  "required": true,
                  "validate": [Function],
                },
              }
            }
            key="file-input"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={6}
            >
              <div
                className="container size_6__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="file-input"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="file-input"
                      >
                        Upload a cat image (we support pdf, jpeg, or png files)
                      </label>
                    </FormGroupLabel>
                    <GridFormFileInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Upload a cat image (we support pdf, jpeg, or png files)",
                          "name": "file-input",
                          "size": 6,
                          "type": "file",
                          "validation": Object {
                            "required": true,
                            "validate": [Function],
                          },
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="file-input"
                        name="file-input"
                        onChange={[Function]}
                        type="file"
                      >
                        <input
                          className="Input fileInput gridFormInput"
                          id="file-input"
                          name="file-input"
                          onChange={[Function]}
                          type="file"
                        />
                      </ForwardRef>
                    </GridFormFileInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "label": "Write a paragraph about penguins",
                "name": "textarea-input",
                "size": 12,
                "type": "textarea",
                "validation": Object {
                  "required": "Please write something about penguins!",
                },
              }
            }
            key="textarea-input"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={12}
            >
              <div
                className="container size_12__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="textarea-input"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="textarea-input"
                      >
                        Write a paragraph about penguins
                      </label>
                    </FormGroupLabel>
                    <GridFormTextArea
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Write a paragraph about penguins",
                          "name": "textarea-input",
                          "size": 12,
                          "type": "textarea",
                          "validation": Object {
                            "required": "Please write something about penguins!",
                          },
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="textarea-input"
                        name="textarea-input"
                        onChange={[Function]}
                      >
                        <textarea
                          className="TextArea gridFormInput"
                          id="textarea-input"
                          name="textarea-input"
                          onChange={[Function]}
                        />
                      </ForwardRef>
                    </GridFormTextArea>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "label": "Validated, required text that must contain the word 'swag' twice",
                "name": "validated-required-text",
                "size": 5,
                "type": "text",
                "validation": Object {
                  "pattern": Object {
                    "message": "Not enough swag",
                    "value": /swag\\(\\.\\*\\)swag/,
                  },
                  "required": true,
                },
              }
            }
            key="validated-required-text"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={5}
            >
              <div
                className="container size_5__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="validated-required-text"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="validated-required-text"
                      >
                        Validated, required text that must contain the word 'swag' twice
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Validated, required text that must contain the word 'swag' twice",
                          "name": "validated-required-text",
                          "size": 5,
                          "type": "text",
                          "validation": Object {
                            "pattern": Object {
                              "message": "Not enough swag",
                              "value": /swag\\(\\.\\*\\)swag/,
                            },
                            "required": true,
                          },
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="validated-required-text"
                        name="validated-required-text"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input gridFormInput"
                          id="validated-required-text"
                          name="validated-required-text"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "description": "I have swag",
                "label": "Swag levels",
                "name": "enough-swag",
                "size": 3,
                "type": "checkbox",
              }
            }
            key="enough-swag"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={3}
            >
              <div
                className="container size_3__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="enough-swag"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="enough-swag"
                      >
                        Swag levels
                      </label>
                    </FormGroupLabel>
                    <GridFormCheckboxInput
                      className="gridFormInput"
                      field={
                        Object {
                          "description": "I have swag",
                          "label": "Swag levels",
                          "name": "enough-swag",
                          "size": 3,
                          "type": "checkbox",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        htmlFor="enough-swag"
                        label="I have swag"
                        name="enough-swag"
                        onChange={[Function]}
                      >
                        <div
                          className="gridFormInput"
                        >
                          <input
                            className="invisible"
                            id="enough-swag"
                            name="enough-swag"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <label
                            className="checkboxLabel"
                            htmlFor="enough-swag"
                          >
                            <div
                              className="checkbox"
                            >
                              <svg
                                className="checkboxVector"
                                height="24px"
                                viewBox="0 0 20 20"
                                width="24px"
                              >
                                <path
                                  className="squareVector"
                                  d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"
                                  fill="none"
                                />
                                <polyline
                                  className="checkVector"
                                  points="4 11 8 15 16 6"
                                />
                              </svg>
                            </div>
                            <span
                              className="checkboxText"
                            >
                              I have swag
                            </span>
                          </label>
                        </div>
                      </ForwardRef>
                    </GridFormCheckboxInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "label": "Preferred Modern Artist",
                "name": "artist",
                "options": Array [
                  Object {
                    "label": "Cardi B",
                    "value": "cardi",
                  },
                  Object {
                    "label": "Nicki Minaj",
                    "value": "nicki",
                  },
                ],
                "size": 4,
                "type": "radio-group",
                "validation": Object {
                  "required": "You gotta pick one!",
                },
              }
            }
            key="artist"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={4}
            >
              <div
                className="container size_4__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="artist"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="artist"
                      >
                        Preferred Modern Artist
                      </label>
                    </FormGroupLabel>
                    <GridFormRadioGroupInput
                      className="gridFormInput"
                      field={
                        Object {
                          "label": "Preferred Modern Artist",
                          "name": "artist",
                          "options": Array [
                            Object {
                              "label": "Cardi B",
                              "value": "cardi",
                            },
                            Object {
                              "label": "Nicki Minaj",
                              "value": "nicki",
                            },
                          ],
                          "size": 4,
                          "type": "radio-group",
                          "validation": Object {
                            "required": "You gotta pick one!",
                          },
                        }
                      }
                      register={[Function]}
                      setValue={[Function]}
                    >
                      <RadioGroup
                        className="gridFormInput"
                        htmlForPrefix="artist"
                        name="artist"
                        onChange={[Function]}
                      >
                        <div
                          className="gridFormInput"
                        >
                          <ForwardRef
                            htmlFor="artist-0"
                            key=".$cardi"
                            label="Cardi B"
                            name="artist"
                            onChange={[Function]}
                            value="cardi"
                          >
                            <div
                              className="Radio"
                            >
                              <input
                                className="radioInput"
                                id="artist-0"
                                name="artist"
                                onChange={[Function]}
                                type="radio"
                                value="cardi"
                              />
                              <label
                                className="radioLabel"
                                htmlFor="artist-0"
                              >
                                Cardi B
                              </label>
                            </div>
                          </ForwardRef>
                          <ForwardRef
                            htmlFor="artist-1"
                            key=".$nicki"
                            label="Nicki Minaj"
                            name="artist"
                            onChange={[Function]}
                            value="nicki"
                          >
                            <div
                              className="Radio"
                            >
                              <input
                                className="radioInput"
                                id="artist-1"
                                name="artist"
                                onChange={[Function]}
                                type="radio"
                                value="nicki"
                              />
                              <label
                                className="radioLabel"
                                htmlFor="artist-1"
                              >
                                Nicki Minaj
                              </label>
                            </div>
                          </ForwardRef>
                        </div>
                      </RadioGroup>
                    </GridFormRadioGroupInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormInputGroup
            field={
              Object {
                "description": "I accept the terms and conditions (required or else!!!)",
                "label": "End User License Agreement",
                "name": "eula-checkbox-required",
                "size": 12,
                "type": "checkbox",
                "validation": Object {
                  "required": "Please check the box to agree to the terms.",
                },
              }
            }
            key="eula-checkbox-required"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={12}
            >
              <div
                className="container size_12__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="eula-checkbox-required"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="eula-checkbox-required"
                      >
                        End User License Agreement
                      </label>
                    </FormGroupLabel>
                    <GridFormCheckboxInput
                      className="gridFormInput"
                      field={
                        Object {
                          "description": "I accept the terms and conditions (required or else!!!)",
                          "label": "End User License Agreement",
                          "name": "eula-checkbox-required",
                          "size": 12,
                          "type": "checkbox",
                          "validation": Object {
                            "required": "Please check the box to agree to the terms.",
                          },
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        htmlFor="eula-checkbox-required"
                        label="I accept the terms and conditions (required or else!!!)"
                        name="eula-checkbox-required"
                        onChange={[Function]}
                      >
                        <div
                          className="gridFormInput"
                        >
                          <input
                            className="invisible"
                            id="eula-checkbox-required"
                            name="eula-checkbox-required"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <label
                            className="checkboxLabel"
                            htmlFor="eula-checkbox-required"
                          >
                            <div
                              className="checkbox"
                            >
                              <svg
                                className="checkboxVector"
                                height="24px"
                                viewBox="0 0 20 20"
                                width="24px"
                              >
                                <path
                                  className="squareVector"
                                  d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"
                                  fill="none"
                                />
                                <polyline
                                  className="checkVector"
                                  points="4 11 8 15 16 6"
                                />
                              </svg>
                            </div>
                            <span
                              className="checkboxText"
                            >
                              I accept the terms and conditions (required or else!!!)
                            </span>
                          </label>
                        </div>
                      </ForwardRef>
                    </GridFormCheckboxInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Submit Me!?"
            disabled={false}
            size={12}
          >
            <Column
              className="base left"
              size={12}
            >
              <div
                className="container base left size_12__xs"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Submit Me!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Core|Organisms/GridForm Inline Submit Button 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "description": "I approve of inline swag",
        "name": "enough-swag",
        "size": 8,
        "type": "checkbox",
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Inline Submit!?",
      "position": "right",
      "size": 4,
    }
  }
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "description": "I approve of inline swag",
                "name": "enough-swag",
                "size": 8,
                "type": "checkbox",
              }
            }
            key="enough-swag"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={8}
            >
              <div
                className="container size_8__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="enough-swag"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="enough-swag"
                      />
                    </FormGroupLabel>
                    <GridFormCheckboxInput
                      className="gridFormInput"
                      field={
                        Object {
                          "description": "I approve of inline swag",
                          "name": "enough-swag",
                          "size": 8,
                          "type": "checkbox",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        htmlFor="enough-swag"
                        label="I approve of inline swag"
                        name="enough-swag"
                        onChange={[Function]}
                      >
                        <div
                          className="gridFormInput"
                        >
                          <input
                            className="invisible"
                            id="enough-swag"
                            name="enough-swag"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <label
                            className="checkboxLabel"
                            htmlFor="enough-swag"
                          >
                            <div
                              className="checkbox"
                            >
                              <svg
                                className="checkboxVector"
                                height="24px"
                                viewBox="0 0 20 20"
                                width="24px"
                              >
                                <path
                                  className="squareVector"
                                  d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"
                                  fill="none"
                                />
                                <polyline
                                  className="checkVector"
                                  points="4 11 8 15 16 6"
                                />
                              </svg>
                            </div>
                            <span
                              className="checkboxText"
                            >
                              I approve of inline swag
                            </span>
                          </label>
                        </div>
                      </ForwardRef>
                    </GridFormCheckboxInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Inline Submit!?"
            disabled={false}
            position="right"
            size={4}
          >
            <Column
              className="base right"
              size={4}
            >
              <div
                className="container base right size_4__xs"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Inline Submit!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Core|Organisms/GridForm No Label Inline 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "label": "Label",
        "name": "email",
        "size": 8,
        "type": "text",
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Inline Submit!?",
      "position": "right",
      "size": 4,
    }
  }
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "label": "Label",
                "name": "email",
                "size": 8,
                "type": "text",
              }
            }
            key="email"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={8}
            >
              <div
                className="container size_8__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="email"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="email"
                      >
                        Label
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Label",
                          "name": "email",
                          "size": 8,
                          "type": "text",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="email"
                        name="email"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input gridFormInput"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Inline Submit!?"
            disabled={false}
            position="right"
            size={4}
          >
            <Column
              className="base right"
              size={4}
            >
              <div
                className="container base right size_4__xs"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Inline Submit!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Core|Organisms/GridForm On Field Update 1`] = `"The text value is: "`;

exports[`Storyshots Core|Organisms/GridForm Placeholder Text 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "label": "Email",
        "name": "custom-input",
        "placeholder": "Your email",
        "size": 12,
        "type": "email",
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Submit Me!?",
    }
  }
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "label": "Email",
                "name": "custom-input",
                "placeholder": "Your email",
                "size": 12,
                "type": "email",
              }
            }
            key="custom-input"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={12}
            >
              <div
                className="container size_12__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="custom-input"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="custom-input"
                      >
                        Email
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Email",
                          "name": "custom-input",
                          "placeholder": "Your email",
                          "size": 12,
                          "type": "email",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="custom-input"
                        name="custom-input"
                        onChange={[Function]}
                        placeholder="Your email"
                        type="email"
                      >
                        <input
                          className="Input gridFormInput"
                          id="custom-input"
                          name="custom-input"
                          onChange={[Function]}
                          placeholder="Your email"
                          type="email"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Submit Me!?"
            disabled={false}
          >
            <Column
              className="base left"
            >
              <div
                className="container base left"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Submit Me!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Core|Organisms/GridForm Submit Button Position 1`] = `
<LayoutGrid>
  <div
    className="container"
  >
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <GridForm
          fields={
            Array [
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 12,
                "type": "text",
              },
            ]
          }
          onSubmit={[Function]}
          submit={
            Object {
              "contents": "Right Submit!?",
              "position": "right",
              "size": 12,
            }
          }
        >
          <Form
            onSubmit={[Function]}
          >
            <form
              className="Form"
              method="post"
              onSubmit={[Function]}
            >
              <LayoutGrid
                columnGap="lg"
                rowGap="md"
              >
                <div
                  className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
                >
                  <GridFormInputGroup
                    field={
                      Object {
                        "label": "Simple text",
                        "name": "simple-text",
                        "size": 12,
                        "type": "text",
                      }
                    }
                    key="simple-text"
                    register={[Function]}
                    setValue={[Function]}
                  >
                    <Column
                      size={12}
                    >
                      <div
                        className="container size_12__xs"
                      >
                        <FormGroup
                          className="formGroup"
                        >
                          <div
                            className="FormGroup formGroup"
                          >
                            <FormGroupLabel
                              className="formGroupLabel"
                              htmlFor="simple-text"
                            >
                              <label
                                className="FormGroupLabel formGroupLabel"
                                htmlFor="simple-text"
                              >
                                Simple text
                              </label>
                            </FormGroupLabel>
                            <GridFormTextInput
                              className="gridFormInput"
                              error={false}
                              field={
                                Object {
                                  "label": "Simple text",
                                  "name": "simple-text",
                                  "size": 12,
                                  "type": "text",
                                }
                              }
                              register={[Function]}
                            >
                              <ForwardRef
                                className="gridFormInput"
                                error={false}
                                htmlFor="simple-text"
                                name="simple-text"
                                onChange={[Function]}
                                type="text"
                              >
                                <input
                                  className="Input gridFormInput"
                                  id="simple-text"
                                  name="simple-text"
                                  onChange={[Function]}
                                  type="text"
                                />
                              </ForwardRef>
                            </GridFormTextInput>
                          </div>
                        </FormGroup>
                      </div>
                    </Column>
                  </GridFormInputGroup>
                  <GridFormSubmit
                    contents="Right Submit!?"
                    disabled={false}
                    position="right"
                    size={12}
                  >
                    <Column
                      className="base right"
                      size={12}
                    >
                      <div
                        className="container base right size_12__xs"
                      >
                        <Button
                          disabled={false}
                          theme="brand-purple"
                          type="submit"
                        >
                          <ButtonBase
                            className="btn btn-brand-purple undefined"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="basicBtn btn btn-brand-purple undefined"
                              data-btn={true}
                              disabled={false}
                              type="submit"
                            >
                              Right Submit!?
                            </button>
                          </ButtonBase>
                        </Button>
                      </div>
                    </Column>
                  </GridFormSubmit>
                </div>
              </LayoutGrid>
            </form>
          </Form>
        </GridForm>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <GridForm
          fields={
            Array [
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 12,
                "type": "text",
              },
            ]
          }
          onSubmit={[Function]}
          submit={
            Object {
              "contents": "Center Submit!?",
              "position": "center",
              "size": 12,
            }
          }
        >
          <Form
            onSubmit={[Function]}
          >
            <form
              className="Form"
              method="post"
              onSubmit={[Function]}
            >
              <LayoutGrid
                columnGap="lg"
                rowGap="md"
              >
                <div
                  className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
                >
                  <GridFormInputGroup
                    field={
                      Object {
                        "label": "Simple text",
                        "name": "simple-text",
                        "size": 12,
                        "type": "text",
                      }
                    }
                    key="simple-text"
                    register={[Function]}
                    setValue={[Function]}
                  >
                    <Column
                      size={12}
                    >
                      <div
                        className="container size_12__xs"
                      >
                        <FormGroup
                          className="formGroup"
                        >
                          <div
                            className="FormGroup formGroup"
                          >
                            <FormGroupLabel
                              className="formGroupLabel"
                              htmlFor="simple-text"
                            >
                              <label
                                className="FormGroupLabel formGroupLabel"
                                htmlFor="simple-text"
                              >
                                Simple text
                              </label>
                            </FormGroupLabel>
                            <GridFormTextInput
                              className="gridFormInput"
                              error={false}
                              field={
                                Object {
                                  "label": "Simple text",
                                  "name": "simple-text",
                                  "size": 12,
                                  "type": "text",
                                }
                              }
                              register={[Function]}
                            >
                              <ForwardRef
                                className="gridFormInput"
                                error={false}
                                htmlFor="simple-text"
                                name="simple-text"
                                onChange={[Function]}
                                type="text"
                              >
                                <input
                                  className="Input gridFormInput"
                                  id="simple-text"
                                  name="simple-text"
                                  onChange={[Function]}
                                  type="text"
                                />
                              </ForwardRef>
                            </GridFormTextInput>
                          </div>
                        </FormGroup>
                      </div>
                    </Column>
                  </GridFormInputGroup>
                  <GridFormSubmit
                    contents="Center Submit!?"
                    disabled={false}
                    position="center"
                    size={12}
                  >
                    <Column
                      className="base center"
                      size={12}
                    >
                      <div
                        className="container base center size_12__xs"
                      >
                        <Button
                          disabled={false}
                          theme="brand-purple"
                          type="submit"
                        >
                          <ButtonBase
                            className="btn btn-brand-purple undefined"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="basicBtn btn btn-brand-purple undefined"
                              data-btn={true}
                              disabled={false}
                              type="submit"
                            >
                              Center Submit!?
                            </button>
                          </ButtonBase>
                        </Button>
                      </div>
                    </Column>
                  </GridFormSubmit>
                </div>
              </LayoutGrid>
            </form>
          </Form>
        </GridForm>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <GridForm
          fields={
            Array [
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 12,
                "type": "text",
              },
            ]
          }
          onSubmit={[Function]}
          submit={
            Object {
              "contents": "Left Submit!?",
              "position": "left",
              "size": 12,
            }
          }
        >
          <Form
            onSubmit={[Function]}
          >
            <form
              className="Form"
              method="post"
              onSubmit={[Function]}
            >
              <LayoutGrid
                columnGap="lg"
                rowGap="md"
              >
                <div
                  className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
                >
                  <GridFormInputGroup
                    field={
                      Object {
                        "label": "Simple text",
                        "name": "simple-text",
                        "size": 12,
                        "type": "text",
                      }
                    }
                    key="simple-text"
                    register={[Function]}
                    setValue={[Function]}
                  >
                    <Column
                      size={12}
                    >
                      <div
                        className="container size_12__xs"
                      >
                        <FormGroup
                          className="formGroup"
                        >
                          <div
                            className="FormGroup formGroup"
                          >
                            <FormGroupLabel
                              className="formGroupLabel"
                              htmlFor="simple-text"
                            >
                              <label
                                className="FormGroupLabel formGroupLabel"
                                htmlFor="simple-text"
                              >
                                Simple text
                              </label>
                            </FormGroupLabel>
                            <GridFormTextInput
                              className="gridFormInput"
                              error={false}
                              field={
                                Object {
                                  "label": "Simple text",
                                  "name": "simple-text",
                                  "size": 12,
                                  "type": "text",
                                }
                              }
                              register={[Function]}
                            >
                              <ForwardRef
                                className="gridFormInput"
                                error={false}
                                htmlFor="simple-text"
                                name="simple-text"
                                onChange={[Function]}
                                type="text"
                              >
                                <input
                                  className="Input gridFormInput"
                                  id="simple-text"
                                  name="simple-text"
                                  onChange={[Function]}
                                  type="text"
                                />
                              </ForwardRef>
                            </GridFormTextInput>
                          </div>
                        </FormGroup>
                      </div>
                    </Column>
                  </GridFormInputGroup>
                  <GridFormSubmit
                    contents="Left Submit!?"
                    disabled={false}
                    position="left"
                    size={12}
                  >
                    <Column
                      className="base left"
                      size={12}
                    >
                      <div
                        className="container base left size_12__xs"
                      >
                        <Button
                          disabled={false}
                          theme="brand-purple"
                          type="submit"
                        >
                          <ButtonBase
                            className="btn btn-brand-purple undefined"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="basicBtn btn btn-brand-purple undefined"
                              data-btn={true}
                              disabled={false}
                              type="submit"
                            >
                              Left Submit!?
                            </button>
                          </ButtonBase>
                        </Button>
                      </div>
                    </Column>
                  </GridFormSubmit>
                </div>
              </LayoutGrid>
            </form>
          </Form>
        </GridForm>
      </div>
    </Column>
    <Column
      size={6}
    >
      <div
        className="container size_6__xs"
      >
        <GridForm
          fields={
            Array [
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 12,
                "type": "text",
              },
            ]
          }
          onSubmit={[Function]}
          submit={
            Object {
              "contents": "Stretch Submit!?",
              "position": "stretch",
              "size": 12,
            }
          }
        >
          <Form
            onSubmit={[Function]}
          >
            <form
              className="Form"
              method="post"
              onSubmit={[Function]}
            >
              <LayoutGrid
                columnGap="lg"
                rowGap="md"
              >
                <div
                  className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
                >
                  <GridFormInputGroup
                    field={
                      Object {
                        "label": "Simple text",
                        "name": "simple-text",
                        "size": 12,
                        "type": "text",
                      }
                    }
                    key="simple-text"
                    register={[Function]}
                    setValue={[Function]}
                  >
                    <Column
                      size={12}
                    >
                      <div
                        className="container size_12__xs"
                      >
                        <FormGroup
                          className="formGroup"
                        >
                          <div
                            className="FormGroup formGroup"
                          >
                            <FormGroupLabel
                              className="formGroupLabel"
                              htmlFor="simple-text"
                            >
                              <label
                                className="FormGroupLabel formGroupLabel"
                                htmlFor="simple-text"
                              >
                                Simple text
                              </label>
                            </FormGroupLabel>
                            <GridFormTextInput
                              className="gridFormInput"
                              error={false}
                              field={
                                Object {
                                  "label": "Simple text",
                                  "name": "simple-text",
                                  "size": 12,
                                  "type": "text",
                                }
                              }
                              register={[Function]}
                            >
                              <ForwardRef
                                className="gridFormInput"
                                error={false}
                                htmlFor="simple-text"
                                name="simple-text"
                                onChange={[Function]}
                                type="text"
                              >
                                <input
                                  className="Input gridFormInput"
                                  id="simple-text"
                                  name="simple-text"
                                  onChange={[Function]}
                                  type="text"
                                />
                              </ForwardRef>
                            </GridFormTextInput>
                          </div>
                        </FormGroup>
                      </div>
                    </Column>
                  </GridFormInputGroup>
                  <GridFormSubmit
                    contents="Stretch Submit!?"
                    disabled={false}
                    position="stretch"
                    size={12}
                  >
                    <Column
                      className="base stretch"
                      size={12}
                    >
                      <div
                        className="container base stretch size_12__xs"
                      >
                        <Button
                          disabled={false}
                          theme="brand-purple"
                          type="submit"
                        >
                          <ButtonBase
                            className="btn btn-brand-purple undefined"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="basicBtn btn btn-brand-purple undefined"
                              data-btn={true}
                              disabled={false}
                              type="submit"
                            >
                              Stretch Submit!?
                            </button>
                          </ButtonBase>
                        </Button>
                      </div>
                    </Column>
                  </GridFormSubmit>
                </div>
              </LayoutGrid>
            </form>
          </Form>
        </GridForm>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Core|Organisms/GridForm Submit button color 1`] = `
<GridForm
  fields={
    Array [
      Object {
        "label": "Simple text",
        "name": "simple-text",
        "size": 12,
        "type": "text",
      },
    ]
  }
  onSubmit={[Function]}
  submit={
    Object {
      "contents": "Default Purple Submit!?",
      "size": 12,
    }
  }
>
  <Form
    onSubmit={[Function]}
  >
    <form
      className="Form"
      method="post"
      onSubmit={[Function]}
    >
      <LayoutGrid
        columnGap="lg"
        rowGap="md"
      >
        <div
          className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_lg__xs columnGap_l__0 columnGap_g__1"
        >
          <GridFormInputGroup
            field={
              Object {
                "label": "Simple text",
                "name": "simple-text",
                "size": 12,
                "type": "text",
              }
            }
            key="simple-text"
            register={[Function]}
            setValue={[Function]}
          >
            <Column
              size={12}
            >
              <div
                className="container size_12__xs"
              >
                <FormGroup
                  className="formGroup"
                >
                  <div
                    className="FormGroup formGroup"
                  >
                    <FormGroupLabel
                      className="formGroupLabel"
                      htmlFor="simple-text"
                    >
                      <label
                        className="FormGroupLabel formGroupLabel"
                        htmlFor="simple-text"
                      >
                        Simple text
                      </label>
                    </FormGroupLabel>
                    <GridFormTextInput
                      className="gridFormInput"
                      error={false}
                      field={
                        Object {
                          "label": "Simple text",
                          "name": "simple-text",
                          "size": 12,
                          "type": "text",
                        }
                      }
                      register={[Function]}
                    >
                      <ForwardRef
                        className="gridFormInput"
                        error={false}
                        htmlFor="simple-text"
                        name="simple-text"
                        onChange={[Function]}
                        type="text"
                      >
                        <input
                          className="Input gridFormInput"
                          id="simple-text"
                          name="simple-text"
                          onChange={[Function]}
                          type="text"
                        />
                      </ForwardRef>
                    </GridFormTextInput>
                  </div>
                </FormGroup>
              </div>
            </Column>
          </GridFormInputGroup>
          <GridFormSubmit
            contents="Default Purple Submit!?"
            disabled={false}
            size={12}
          >
            <Column
              className="base left"
              size={12}
            >
              <div
                className="container base left size_12__xs"
              >
                <Button
                  disabled={false}
                  theme="brand-purple"
                  type="submit"
                >
                  <ButtonBase
                    className="btn btn-brand-purple undefined"
                    disabled={false}
                    type="submit"
                  >
                    <button
                      className="basicBtn btn btn-brand-purple undefined"
                      data-btn={true}
                      disabled={false}
                      type="submit"
                    >
                      Default Purple Submit!?
                    </button>
                  </ButtonBase>
                </Button>
              </div>
            </Column>
          </GridFormSubmit>
        </div>
      </LayoutGrid>
    </form>
  </Form>
</GridForm>
`;

exports[`Storyshots Deprecated|Foundations/Colors Gamut Deprecated All 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="purple"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                deprecated-gamut-purple
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#e1e0eb",
                  "200": "#c3c1d7",
                  "300": "#a5a1c2",
                  "400": "#8782ae",
                  "500": "#69639a",
                  "600": "#544f7b",
                  "700": "#3f3b5c",
                  "800": "#2a283e",
                  "900": "#15141f",
                }
              }
              variablePrefix="deprecated-gamut-purple"
            >
              <Swatch
                hex="#e1e0eb"
                key="$deprecated-gamut-purple-100"
                name="$deprecated-gamut-purple-100"
              >
                <Styled(div)
                  hex="#e1e0eb"
                >
                  <div
                    className="css-17dbh09"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #e1e0eb
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#c3c1d7"
                key="$deprecated-gamut-purple-200"
                name="$deprecated-gamut-purple-200"
              >
                <Styled(div)
                  hex="#c3c1d7"
                >
                  <div
                    className="css-vivmo4"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #c3c1d7
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#a5a1c2"
                key="$deprecated-gamut-purple-300"
                name="$deprecated-gamut-purple-300"
              >
                <Styled(div)
                  hex="#a5a1c2"
                >
                  <div
                    className="css-146su6k"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #a5a1c2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#8782ae"
                key="$deprecated-gamut-purple-400"
                name="$deprecated-gamut-purple-400"
              >
                <Styled(div)
                  hex="#8782ae"
                >
                  <div
                    className="css-13hp5nv"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #8782ae
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#69639a"
                key="$deprecated-gamut-purple-500"
                name="$deprecated-gamut-purple-500"
              >
                <Styled(div)
                  hex="#69639a"
                >
                  <div
                    className="css-yzho24"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #69639a
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#544f7b"
                key="$deprecated-gamut-purple-600"
                name="$deprecated-gamut-purple-600"
              >
                <Styled(div)
                  hex="#544f7b"
                >
                  <div
                    className="css-1rb0qlu"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #544f7b
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#3f3b5c"
                key="$deprecated-gamut-purple-700"
                name="$deprecated-gamut-purple-700"
              >
                <Styled(div)
                  hex="#3f3b5c"
                >
                  <div
                    className="css-1srrbio"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #3f3b5c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2a283e"
                key="$deprecated-gamut-purple-800"
                name="$deprecated-gamut-purple-800"
              >
                <Styled(div)
                  hex="#2a283e"
                >
                  <div
                    className="css-6forgp"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2a283e
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#15141f"
                key="$deprecated-gamut-purple-900"
                name="$deprecated-gamut-purple-900"
              >
                <Styled(div)
                  hex="#15141f"
                >
                  <div
                    className="css-1g6qr59"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #15141f
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="royalBlue"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                deprecated-gamut-royal-blue
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "500": "#4b35ef",
                  "600": "#3c2abf",
                  "700": "#2d208f",
                  "800": "#1e1560",
                }
              }
              variablePrefix="deprecated-gamut-royalBlue"
            >
              <Swatch
                hex="#4b35ef"
                key="$deprecated-gamut-royal-blue-500"
                name="$deprecated-gamut-royal-blue-500"
              >
                <Styled(div)
                  hex="#4b35ef"
                >
                  <div
                    className="css-f96087"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-royal-blue-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #4b35ef
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#3c2abf"
                key="$deprecated-gamut-royal-blue-600"
                name="$deprecated-gamut-royal-blue-600"
              >
                <Styled(div)
                  hex="#3c2abf"
                >
                  <div
                    className="css-13tgmwn"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-royal-blue-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #3c2abf
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2d208f"
                key="$deprecated-gamut-royal-blue-700"
                name="$deprecated-gamut-royal-blue-700"
              >
                <Styled(div)
                  hex="#2d208f"
                >
                  <div
                    className="css-1hyosy8"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-royal-blue-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2d208f
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#1e1560"
                key="$deprecated-gamut-royal-blue-800"
                name="$deprecated-gamut-royal-blue-800"
              >
                <Styled(div)
                  hex="#1e1560"
                >
                  <div
                    className="css-18j90ty"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-royal-blue-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #1e1560
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
    <Column
      key="mint"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                deprecated-gamut-mint
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "100": "#d7f3f2",
                  "200": "#afe7e5",
                  "300": "#87dbd8",
                  "400": "#5fcfcb",
                  "500": "#37c3be",
                  "600": "#2c9c98",
                  "700": "#217572",
                  "800": "#164e4c",
                  "900": "#0b2726",
                }
              }
              variablePrefix="deprecated-gamut-mint"
            >
              <Swatch
                hex="#d7f3f2"
                key="$deprecated-gamut-mint-100"
                name="$deprecated-gamut-mint-100"
              >
                <Styled(div)
                  hex="#d7f3f2"
                >
                  <div
                    className="css-1b8vxch"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-100
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #d7f3f2
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#afe7e5"
                key="$deprecated-gamut-mint-200"
                name="$deprecated-gamut-mint-200"
              >
                <Styled(div)
                  hex="#afe7e5"
                >
                  <div
                    className="css-1bw6amm"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-200
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #afe7e5
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#87dbd8"
                key="$deprecated-gamut-mint-300"
                name="$deprecated-gamut-mint-300"
              >
                <Styled(div)
                  hex="#87dbd8"
                >
                  <div
                    className="css-3da3b"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-300
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #87dbd8
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#5fcfcb"
                key="$deprecated-gamut-mint-400"
                name="$deprecated-gamut-mint-400"
              >
                <Styled(div)
                  hex="#5fcfcb"
                >
                  <div
                    className="css-l428j9"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-400
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #5fcfcb
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#37c3be"
                key="$deprecated-gamut-mint-500"
                name="$deprecated-gamut-mint-500"
              >
                <Styled(div)
                  hex="#37c3be"
                >
                  <div
                    className="css-1qi47k2"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #37c3be
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#2c9c98"
                key="$deprecated-gamut-mint-600"
                name="$deprecated-gamut-mint-600"
              >
                <Styled(div)
                  hex="#2c9c98"
                >
                  <div
                    className="css-ss454m"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-600
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #2c9c98
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#217572"
                key="$deprecated-gamut-mint-700"
                name="$deprecated-gamut-mint-700"
              >
                <Styled(div)
                  hex="#217572"
                >
                  <div
                    className="css-1d4adnb"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #217572
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#164e4c"
                key="$deprecated-gamut-mint-800"
                name="$deprecated-gamut-mint-800"
              >
                <Styled(div)
                  hex="#164e4c"
                >
                  <div
                    className="css-1rcpcaf"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-800
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #164e4c
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#0b2726"
                key="$deprecated-gamut-mint-900"
                name="$deprecated-gamut-mint-900"
              >
                <Styled(div)
                  hex="#0b2726"
                >
                  <div
                    className="css-1ywkvmk"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #0b2726
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Deprecated|Foundations/Colors Gamut Deprecated Base 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Deprecated Gamut Base Colors
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "mint": "#37c3be",
                  "purple": "#69639a",
                  "red": "#fa4359",
                  "royalBlue": "#4b35ef",
                  "yellow": "#ffc107",
                }
              }
              variablePrefix="deprecated-gamut"
            >
              <Swatch
                hex="#69639a"
                key="$deprecated-gamut-purple"
                name="$deprecated-gamut-purple"
              >
                <Styled(div)
                  hex="#69639a"
                >
                  <div
                    className="css-yzho24"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-purple
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #69639a
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#4b35ef"
                key="$deprecated-gamut-royal-blue"
                name="$deprecated-gamut-royal-blue"
              >
                <Styled(div)
                  hex="#4b35ef"
                >
                  <div
                    className="css-f96087"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-royal-blue
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #4b35ef
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#fa4359"
                key="$deprecated-gamut-red"
                name="$deprecated-gamut-red"
              >
                <Styled(div)
                  hex="#fa4359"
                >
                  <div
                    className="css-tu3g7n"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-red
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #fa4359
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#37c3be"
                key="$deprecated-gamut-mint"
                name="$deprecated-gamut-mint"
              >
                <Styled(div)
                  hex="#37c3be"
                >
                  <div
                    className="css-1qi47k2"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-mint
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #37c3be
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#ffc107"
                key="$deprecated-gamut-yellow"
                name="$deprecated-gamut-yellow"
              >
                <Styled(div)
                  hex="#ffc107"
                >
                  <div
                    className="css-1o8my77"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-gamut-yellow
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #ffc107
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Deprecated|Foundations/Colors Portal Deprecated All 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      key="ccblue"
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                ccblue
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "500": "#225470",
                  "700": "#204056",
                  "900": "#0d222d",
                }
              }
              variablePrefix="deprecated-swatches-ccblue"
            >
              <Swatch
                hex="#225470"
                key="$deprecated-swatches-ccblue-500"
                name="$deprecated-swatches-ccblue-500"
              >
                <Styled(div)
                  hex="#225470"
                >
                  <div
                    className="css-lsuixl"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-swatches-ccblue-500
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #225470
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#204056"
                key="$deprecated-swatches-ccblue-700"
                name="$deprecated-swatches-ccblue-700"
              >
                <Styled(div)
                  hex="#204056"
                >
                  <div
                    className="css-1r34d3y"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-swatches-ccblue-700
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #204056
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#0d222d"
                key="$deprecated-swatches-ccblue-900"
                name="$deprecated-swatches-ccblue-900"
              >
                <Styled(div)
                  hex="#0d222d"
                >
                  <div
                    className="css-1x1o1ko"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-swatches-ccblue-900
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #0d222d
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Deprecated|Foundations/Colors Portal Deprecated Base 1`] = `
<LayoutGrid
  columnGap="md"
  rowGap="md"
>
  <div
    className="container rowGap_md__xs rowGap_m__0 rowGap_d__1 columnGap_md__xs columnGap_m__0 columnGap_d__1"
  >
    <Column
      size={
        Object {
          "sm": 3,
          "xs": 6,
        }
      }
    >
      <div
        className="container size_6__xs size_3__sm"
      >
        <Container
          flex={false}
          inline={false}
        >
          <div
            className=""
          >
            <Heading
              as="h2"
              fontSize="xs"
            >
              <h2
                className="heading fontSize_xs__xs fontSize_x__0 fontSize_s__1"
              >
                Deprecated portal base colors
              </h2>
            </Heading>
            <SwatchPalette
              data={
                Object {
                  "blue": "#52b1db",
                  "darkblue": "#204056",
                  "mint": "#34b3a0",
                }
              }
              variablePrefix="deprecated"
            >
              <Swatch
                hex="#52b1db"
                key="$deprecated-blue"
                name="$deprecated-blue"
              >
                <Styled(div)
                  hex="#52b1db"
                >
                  <div
                    className="css-8aem7s"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-blue
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #52b1db
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#204056"
                key="$deprecated-darkblue"
                name="$deprecated-darkblue"
              >
                <Styled(div)
                  hex="#204056"
                >
                  <div
                    className="css-1r34d3y"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-darkblue
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #204056
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
              <Swatch
                hex="#34b3a0"
                key="$deprecated-mint"
                name="$deprecated-mint"
              >
                <Styled(div)
                  hex="#34b3a0"
                >
                  <div
                    className="css-1if9qj1"
                  >
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        $deprecated-mint
                      </div>
                    </Styled(div)>
                    <Styled(div)>
                      <div
                        className="css-13j5vx5"
                      >
                        #34b3a0
                      </div>
                    </Styled(div)>
                  </div>
                </Styled(div)>
              </Swatch>
            </SwatchPalette>
          </div>
        </Container>
      </div>
    </Column>
  </div>
</LayoutGrid>
`;

exports[`Storyshots Labs|Brand/Atoms/Avatar Avatar 1`] = `
<Avatar
  alt="The Codey character drinking Boba tea"
  src="https://content.codecademy.com/courses/free/boba.svg"
>
  <div
    className="container lightContainer"
  >
    <img
      alt="The Codey character drinking Boba tea"
      src="https://content.codecademy.com/courses/free/boba.svg"
    />
  </div>
</Avatar>
`;

exports[`Storyshots Labs|Brand/Atoms/BrandMonospace BrandMonospace 1`] = `
<BrandMonospace>
  <span
    className="font"
  >
    <Heading
      as="h1"
      fontSize="xl"
    >
      <h1
        className="heading fontSize_xl__xs fontSize_x__0 fontSize_l__1"
      >
        Roboto Mono
      </h1>
    </Heading>
    <Heading
      as="h2"
      fontSize="lg"
    >
      <h2
        className="heading fontSize_lg__xs fontSize_l__0 fontSize_g__1"
      >
        The quick brown fox jumps over the lazy dog
      </h2>
    </Heading>
  </span>
</BrandMonospace>
`;

exports[`Storyshots Labs|Brand/Atoms/Loading Loading 1`] = `
<Loading>
  <svg
    className="loading"
    data-testid="loading"
    height="98.7"
    viewBox="0 0 123 98.7"
    width="123"
    xmlns="https://www.w3.org/2000/svg"
  >
    <title>
      Loading Icon
    </title>
    <path
      className="path c"
      d="M18.7 57.6c0 4.2.4 7.4 1.2 9.8 2.3 7.1 8.4 11 16.3 11 5.9 0 10.6-2.4 13.7-6.1.2-.4.3-.8-.1-1.2l-5.2-4.5c-.4-.3-.8-.3-1.2.1-2 2.2-4 3.5-7.3 3.5-3.5 0-6.2-1.7-7.4-5.1-.7-2-.8-4.4-.8-7.4 0-3.1.2-5.4.8-7.4 1.1-3.5 3.9-5.2 7.4-5.2 3.3 0 5.3 1.2 7.3 3.5.3.4.7.5 1.2.2l5.2-4.5c.4-.3.3-.8.1-1.2-3.1-3.8-7.8-6.2-13.7-6.2-7.9 0-14 3.9-16.3 11-.8 2.3-1.2 5.5-1.2 9.7"
      fill="none"
      stroke="#a2a2a6"
      strokeMiterlimit="10"
    />
    <path
      className="path underline"
      d="M120.7 97.2c.5 0 .8-.3.8-.8v-7.5c0-.5-.3-.8-.8-.8h-28c-.5 0-.8.3-.8.8v7.5c0 .5.3.8.8.8h28"
      fill="none"
      stroke="#a2a2a6"
      strokeMiterlimit="10"
    />
    <path
      className="path outer"
      d="M42.7 1.5H2.1 2c-.3.2-.5.5-.5.8v94c0 .3.1.5.3.7.1.1.3.1.5.1h80.8c.3 0 .5-.1.6-.3.1-.1.2-.3.2-.5v-94c0-.2-.1-.4-.2-.6-.1-.1-.3-.2-.6-.2H42.7"
      fill="none"
      stroke="#a2a2a6"
      strokeMiterlimit="10"
    />
    <path
      className="path inner"
      d="M42.7 88H11.3h-.1c-.3-.1-.5-.4-.5-.7V11.5c0-.4.2-.6.5-.8h63.1c.3.1.5.4.5.8v75.7c0 .4-.2.6-.5.7H42.7"
      fill="none"
      stroke="#a2a2a6"
      strokeMiterlimit="10"
    />
    <path
      className="pathTwo c"
      d="M18.7 57.6c0 4.2.4 7.4 1.2 9.8 2.3 7.1 8.4 11 16.3 11 5.9 0 10.6-2.4 13.7-6.1.2-.4.3-.8-.1-1.2l-5.2-4.5c-.4-.3-.8-.3-1.2.1-2 2.2-4 3.5-7.3 3.5-3.5 0-6.2-1.7-7.4-5.1-.7-2-.8-4.4-.8-7.4 0-3.1.2-5.4.8-7.4 1.1-3.5 3.9-5.2 7.4-5.2 3.3 0 5.3 1.2 7.3 3.5.3.4.7.5 1.2.2l5.2-4.5c.4-.3.3-.8.1-1.2-3.1-3.8-7.8-6.2-13.7-6.2-7.9 0-14 3.9-16.3 11-.8 2.3-1.2 5.5-1.2 9.7"
      fill="none"
      stroke="#141e3b"
      strokeMiterlimit="10"
      strokeWidth="3"
    />
    <path
      className="pathTwo underline"
      d="M120.7 97.2c.5 0 .8-.3.8-.8v-7.5c0-.5-.3-.8-.8-.8h-28c-.5 0-.8.3-.8.8v7.5c0 .5.3.8.8.8h28"
      fill="none"
      stroke="#141e3b"
      strokeMiterlimit="10"
      strokeWidth="3"
    />
    <path
      className="pathTwo outer"
      d="M42.7 1.5H2.1 2c-.3.2-.5.5-.5.8v94c0 .3.1.5.3.7.1.1.3.1.5.1h80.8c.3 0 .5-.1.6-.3.1-.1.2-.3.2-.5v-94c0-.2-.1-.4-.2-.6-.1-.1-.3-.2-.6-.2H42.7"
      fill="none"
      stroke="#141e3b"
      strokeMiterlimit="10"
      strokeWidth="3"
    />
    <path
      className="pathTwo inner"
      d="M42.7 88H11.3h-.1c-.3-.1-.5-.4-.5-.7V11.5c0-.4.2-.6.5-.8h63.1c.3.1.5.4.5.8v75.7c0 .4-.2.6-.5.7H42.7"
      fill="none"
      stroke="#141e3b"
      strokeMiterlimit="10"
      strokeWidth="3"
    />
  </svg>
</Loading>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Default 1`] = `
<Logo
  height={256}
  type="default"
  width={256}
>
  <CodecademyLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 285 60"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>
        Codecademy Logo
      </title>
      <g
        fill="currentColor"
        fillRule="evenodd"
      >
        <path
          d="M11.778 41.177C11.24 39.624 11 37.652 11 35.024c0-2.63.24-4.6.778-6.154C13.213 24.45 16.98 22 21.945 22c3.708 0 6.58 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.36 1.254-.48 2.688-.48 4.6 0 1.91.12 3.405.54 4.66.72 2.09 2.393 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.792-2.45-10.227-6.93m110.998 0c-.538-1.553-.778-3.525-.778-6.153 0-2.63.24-4.6.778-6.154 1.435-4.42 5.203-6.87 10.167-6.87 3.708 0 6.64 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.417 1.254-.54 2.688-.54 4.6 0 1.91.123 3.405.54 4.66.72 2.09 2.394 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.732-2.45-10.167-6.93m130.14 6.273c-.298 0-.537-.18-.537-.538V32.574c0-3.226-1.615-5.436-4.665-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.18.538-.538.538h-4.725c-.3 0-.538-.18-.538-.538V32.574c0-3.226-1.615-5.436-4.666-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.177.538-.536.538h-4.725c-.3 0-.54-.18-.54-.538V23.075c0-.298.18-.537.54-.537h4.724c.3 0 .538.18.538.537v1.793h.06c1.078-1.553 3.23-2.868 6.52-2.868 2.93 0 5.264 1.195 6.76 3.286h.06c1.912-2.09 4.365-3.286 7.893-3.286 5.742 0 8.972 3.943 8.972 9.26v15.712c0 .3-.18.538-.54.538l-4.604-.06zm11.82 8.782c-.3 0-.54-.18-.54-.538v-4.122c0-.3.18-.537.54-.537h.897c1.974 0 2.93-.897 3.708-2.928l.718-2.09-9.032-23.48c-.117-.298.12-.537.42-.537h5.085c.3 0 .538.18.598.538l5.562 16.25h.12l5.323-16.25c.12-.3.3-.538.597-.538h4.845c.298 0 .538.18.418.538l-9.33 25.987c-2.153 5.914-4.187 7.767-8.313 7.767l-1.615-.06zM49.67 39.622c.42-1.313.538-2.51.538-4.6s-.12-3.225-.538-4.6c-.718-2.09-2.333-3.225-4.605-3.225-2.273 0-3.947 1.195-4.665 3.226-.42 1.314-.54 2.45-.54 4.6 0 2.09.12 3.286.54 4.6.718 2.09 2.333 3.227 4.665 3.227 2.272.06 3.887-1.136 4.605-3.227m-14.832 1.553C34.3 39.444 34 37.772 34 35.023c0-2.748.24-4.36.838-6.153C36.213 24.51 39.98 22 45.005 22c4.964 0 8.732 2.51 10.107 6.87.54 1.732.838 3.405.838 6.153 0 2.75-.24 4.36-.838 6.153-1.375 4.36-5.143 6.87-10.107 6.87-4.964 0-8.732-2.51-10.167-6.87M155.288 22c-4.068 0-6.76.956-8.733 2.45-.18.18-.24.418-.12.656l1.914 3.406c.177.238.477.298.715.12 1.197-.956 2.87-1.733 5.622-1.733 4.008 0 5.384 1.192 5.503 3.88v8.305c0 2.867-1.973 4.24-5.502 4.24-2.75 0-4.245-1.014-4.245-3.105 0-2.33 1.614-3.345 5.322-3.345h1.137c.298 0 .538-.18.538-.537v-3.286c0-.298-.18-.538-.538-.538h-2.034c-6.1 0-9.868 2.51-9.868 7.886 0 5.197 3.768 7.588 8.313 7.588 3.47 0 5.8-1.195 6.938-2.868h.06v1.792c0 .3.18.538.54.538h4.306c.3 0 .54-.18.54-.538v-16.19C165.572 24.63 162.82 22 155.286 22M94.732 32.514c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87C86.3 30.485 86 32.455 86 35.025c0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.99-2.69c-.237-.18-.536-.18-.775.12-1.256 1.373-2.99 2.39-5.802 2.39-2.75 0-4.725-1.316-5.502-3.765-.12-.36-.24-.717-.3-1.076a20.057 20.057 0 0 1-.297-3.585c.06-1.434.12-2.33.3-3.465v-.12c.06-.297.118-.536.178-.775.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.192 4.785 3.224a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM81.232 12h-4.725c-.3 0-.538.18-.538.538v23.478c-.06 1.434-.24 2.39-.48 3.226-.66 2.09-2.273 3.167-4.606 3.167-2.273 0-3.888-1.138-4.545-3.17-.36-1.134-.54-2.39-.54-4.66s.18-3.524.54-4.66c.656-2.03 2.21-3.165 4.425-3.225H72.8c.118 0 .178-.12.178-.238v-4.72c0-.12-.06-.18-.18-.24H69.27c-4.126.06-7.117 2.032-8.373 5.975-.598 1.912-.897 3.644-.897 6.99 0 3.345.24 5.078.897 6.99 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.52-2.928h.06v1.85c0 .3.178.54.537.54h4.725c.3 0 .538-.18.538-.54V12.3c-.06-.12-.3-.298-.598-.298m123.5 20.512c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87-.538 1.615-.837 3.585-.837 6.155 0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.987-2.69c-.24-.18-.54-.18-.778.12-1.256 1.374-2.99 2.39-5.802 2.39-2.75 0-4.725-1.315-5.502-3.764-.12-.36-.24-.717-.3-1.076a20.045 20.045 0 0 1-.297-3.584c.06-1.434.12-2.33.3-3.465v-.12c.06-.296.118-.535.178-.774.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.193 4.785 3.225a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM191.232 12h-4.725c-.3 0-.538.18-.538.538v23.538c-.06 1.433-.24 2.39-.48 3.226-.66 2.09-2.273 3.226-4.606 3.226-2.333 0-3.888-1.136-4.545-3.226-.36-1.135-.54-2.39-.54-4.66s.18-3.525.54-4.66c.656-2.03 2.21-3.167 4.425-3.226h2.033c.298 0 .537-.18.537-.538v-4.122c0-.3-.18-.538-.538-.538h-3.47c-4.127.06-7.177 2.032-8.433 5.974-.598 1.912-.897 3.645-.897 7.05 0 3.346.24 5.138.897 7.05 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.58-2.927h.058v1.85c0 .3.18.537.538.537h4.725c.3 0 .54-.18.54-.538V12.477c-.12-.3-.36-.478-.658-.478M123 55v4c0 .752.175 1 1 1h16c.767 0 1-.186 1-1v-4c0-.752-.175-1-1-1h-17c.175 0 0 .186 0 1"
        />
        <path
          d="M6.99 54H6c.12-.06 0-.238 0 0V6c0 .238.12.06 0 0h107c-.12.06 0 .238 0 0v47c0 .703-.12.88 0 1H6.99zM119 0c-.12.18-.12.12 0 0-.12.12-.12.12 0 0-.24.06-.36 0-1 0H0c.12.12 0 .3 0 1v59c0-.3.06-.18 0 0h118c.64 0 .76-.06 1 0-.06-.24 0-.36 0-1V0z"
        />
      </g>
    </svg>
  </CodecademyLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Logo 1`] = `
<Logo
  height={32}
  style={
    Object {
      "color": "#000000",
    }
  }
  type="default"
  width={256}
>
  <CodecademyLogo
    height={32}
    style={
      Object {
        "color": "#000000",
      }
    }
    width={256}
  >
    <svg
      height={32}
      style={
        Object {
          "color": "#000000",
        }
      }
      viewBox="0 0 285 60"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>
        Codecademy Logo
      </title>
      <g
        fill="currentColor"
        fillRule="evenodd"
      >
        <path
          d="M11.778 41.177C11.24 39.624 11 37.652 11 35.024c0-2.63.24-4.6.778-6.154C13.213 24.45 16.98 22 21.945 22c3.708 0 6.58 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.36 1.254-.48 2.688-.48 4.6 0 1.91.12 3.405.54 4.66.72 2.09 2.393 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.792-2.45-10.227-6.93m110.998 0c-.538-1.553-.778-3.525-.778-6.153 0-2.63.24-4.6.778-6.154 1.435-4.42 5.203-6.87 10.167-6.87 3.708 0 6.64 1.494 8.553 3.883a.49.49 0 0 1-.06.717l-3.23 2.868c-.24.18-.538.18-.717-.12-1.255-1.374-2.51-2.15-4.544-2.15-2.212 0-3.887 1.075-4.605 3.226-.417 1.254-.54 2.688-.54 4.6 0 1.91.123 3.405.54 4.66.72 2.09 2.394 3.226 4.606 3.226 2.033 0 3.35-.777 4.546-2.15.18-.24.48-.24.718-.06l3.23 2.867c.24.18.18.478.06.717-1.974 2.33-4.845 3.823-8.553 3.823-4.964-.06-8.732-2.45-10.167-6.93m130.14 6.273c-.298 0-.537-.18-.537-.538V32.574c0-3.226-1.615-5.436-4.665-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.18.538-.538.538h-4.725c-.3 0-.538-.18-.538-.538V32.574c0-3.226-1.615-5.436-4.666-5.436-2.99 0-4.725 2.21-4.725 5.436v14.338c0 .3-.177.538-.536.538h-4.725c-.3 0-.54-.18-.54-.538V23.075c0-.298.18-.537.54-.537h4.724c.3 0 .538.18.538.537v1.793h.06c1.078-1.553 3.23-2.868 6.52-2.868 2.93 0 5.264 1.195 6.76 3.286h.06c1.912-2.09 4.365-3.286 7.893-3.286 5.742 0 8.972 3.943 8.972 9.26v15.712c0 .3-.18.538-.54.538l-4.604-.06zm11.82 8.782c-.3 0-.54-.18-.54-.538v-4.122c0-.3.18-.537.54-.537h.897c1.974 0 2.93-.897 3.708-2.928l.718-2.09-9.032-23.48c-.117-.298.12-.537.42-.537h5.085c.3 0 .538.18.598.538l5.562 16.25h.12l5.323-16.25c.12-.3.3-.538.597-.538h4.845c.298 0 .538.18.418.538l-9.33 25.987c-2.153 5.914-4.187 7.767-8.313 7.767l-1.615-.06zM49.67 39.622c.42-1.313.538-2.51.538-4.6s-.12-3.225-.538-4.6c-.718-2.09-2.333-3.225-4.605-3.225-2.273 0-3.947 1.195-4.665 3.226-.42 1.314-.54 2.45-.54 4.6 0 2.09.12 3.286.54 4.6.718 2.09 2.333 3.227 4.665 3.227 2.272.06 3.887-1.136 4.605-3.227m-14.832 1.553C34.3 39.444 34 37.772 34 35.023c0-2.748.24-4.36.838-6.153C36.213 24.51 39.98 22 45.005 22c4.964 0 8.732 2.51 10.107 6.87.54 1.732.838 3.405.838 6.153 0 2.75-.24 4.36-.838 6.153-1.375 4.36-5.143 6.87-10.107 6.87-4.964 0-8.732-2.51-10.167-6.87M155.288 22c-4.068 0-6.76.956-8.733 2.45-.18.18-.24.418-.12.656l1.914 3.406c.177.238.477.298.715.12 1.197-.956 2.87-1.733 5.622-1.733 4.008 0 5.384 1.192 5.503 3.88v8.305c0 2.867-1.973 4.24-5.502 4.24-2.75 0-4.245-1.014-4.245-3.105 0-2.33 1.614-3.345 5.322-3.345h1.137c.298 0 .538-.18.538-.537v-3.286c0-.298-.18-.538-.538-.538h-2.034c-6.1 0-9.868 2.51-9.868 7.886 0 5.197 3.768 7.588 8.313 7.588 3.47 0 5.8-1.195 6.938-2.868h.06v1.792c0 .3.18.538.54.538h4.306c.3 0 .54-.18.54-.538v-16.19C165.572 24.63 162.82 22 155.286 22M94.732 32.514c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87C86.3 30.485 86 32.455 86 35.025c0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.99-2.69c-.237-.18-.536-.18-.775.12-1.256 1.373-2.99 2.39-5.802 2.39-2.75 0-4.725-1.316-5.502-3.765-.12-.36-.24-.717-.3-1.076a20.057 20.057 0 0 1-.297-3.585c.06-1.434.12-2.33.3-3.465v-.12c.06-.297.118-.536.178-.775.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.192 4.785 3.224a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM81.232 12h-4.725c-.3 0-.538.18-.538.538v23.478c-.06 1.434-.24 2.39-.48 3.226-.66 2.09-2.273 3.167-4.606 3.167-2.273 0-3.888-1.138-4.545-3.17-.36-1.134-.54-2.39-.54-4.66s.18-3.524.54-4.66c.656-2.03 2.21-3.165 4.425-3.225H72.8c.118 0 .178-.12.178-.238v-4.72c0-.12-.06-.18-.18-.24H69.27c-4.126.06-7.117 2.032-8.373 5.975-.598 1.912-.897 3.644-.897 6.99 0 3.345.24 5.078.897 6.99 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.52-2.928h.06v1.85c0 .3.178.54.537.54h4.725c.3 0 .538-.18.538-.54V12.3c-.06-.12-.3-.298-.598-.298m123.5 20.512c-.12 0-.24.06-.24.24v3.883c0 .12.06.24.24.24h12.68c.358 0 .538-.18.538-.538 0-4.004-.24-5.736-.838-7.47-1.376-4.24-5.084-6.87-10.168-6.87-4.904 0-8.73 2.51-10.107 6.87-.538 1.615-.837 3.585-.837 6.155 0 2.568.36 4.48.897 6.093 1.376 4.36 5.084 6.93 10.287 6.93 4.545 0 8.014-1.733 10.167-4.24.18-.24.18-.54-.06-.718l-2.987-2.69c-.24-.18-.54-.18-.778.12-1.256 1.374-2.99 2.39-5.802 2.39-2.75 0-4.725-1.315-5.502-3.764-.12-.36-.24-.717-.3-1.076a20.045 20.045 0 0 1-.297-3.584c.06-1.434.12-2.33.3-3.465v-.12c.06-.296.118-.535.178-.774.66-2.032 2.513-3.226 4.845-3.226 2.333 0 4.128 1.193 4.785 3.225a7.01 7.01 0 0 1 .298 2.09c0 .18-.12.3-.3.3h-6.995zM191.232 12h-4.725c-.3 0-.538.18-.538.538v23.538c-.06 1.433-.24 2.39-.48 3.226-.66 2.09-2.273 3.226-4.606 3.226-2.333 0-3.888-1.136-4.545-3.226-.36-1.135-.54-2.39-.54-4.66s.18-3.525.54-4.66c.656-2.03 2.21-3.167 4.425-3.226h2.033c.298 0 .537-.18.537-.538v-4.122c0-.3-.18-.538-.538-.538h-3.47c-4.127.06-7.177 2.032-8.433 5.974-.598 1.912-.897 3.645-.897 7.05 0 3.346.24 5.138.897 7.05 1.256 4.002 4.366 5.974 8.553 5.974 3.35 0 5.382-1.255 6.58-2.927h.058v1.85c0 .3.18.537.538.537h4.725c.3 0 .54-.18.54-.538V12.477c-.12-.3-.36-.478-.658-.478M123 55v4c0 .752.175 1 1 1h16c.767 0 1-.186 1-1v-4c0-.752-.175-1-1-1h-17c.175 0 0 .186 0 1"
        />
        <path
          d="M6.99 54H6c.12-.06 0-.238 0 0V6c0 .238.12.06 0 0h107c-.12.06 0 .238 0 0v47c0 .703-.12.88 0 1H6.99zM119 0c-.12.18-.12.12 0 0-.12.12-.12.12 0 0-.24.06-.36 0-1 0H0c.12.12 0 .3 0 1v59c0-.3.06-.18 0 0h118c.64 0 .76-.06 1 0-.06-.24 0-.36 0-1V0z"
        />
      </g>
    </svg>
  </CodecademyLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Premium 1`] = `
<Logo
  height={256}
  type="premium"
  width={256}
>
  <CodecademyPremiumLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 173 22"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <g
        fill="none"
        fillRule="evenodd"
      >
        <g
          fillRule="nonzero"
        >
          <g
            transform="translate(103.55 7.744)"
          >
            <path
              d="M11.244 9.356V6.275h1.287c2.145 0 3.276-1.391 3.276-3.029 0-1.651-1.131-2.99-3.276-2.99H9.45v9.1h1.794zm1.014-4.628h-1.014V1.816h1.014c.988 0 1.703.416 1.703 1.43s-.715 1.482-1.703 1.482zm7.065 4.628V5.859h1.274l2.015 3.497h2.08l-2.327-3.835c1.378-.546 1.729-1.638 1.729-2.496 0-1.586-1.17-2.769-3.159-2.769h-3.419v9.1h1.807zm1.378-5.07h-1.378v-2.47h1.378c1.001 0 1.586.416 1.586 1.222 0 .78-.585 1.248-1.586 1.248zm12.278 5.07V7.809h-4.966V5.495h2.899V3.948h-2.899V1.816h4.966V.256h-6.773v9.1h6.773zm3.659 0V2.921l1.794 4.485h1.911l1.742-4.485v6.435h1.794v-9.1h-2.431L39.42 5.417 37.431.256h-2.548v9.1h1.755zm11.446 0v-9.1h-1.807v9.1h1.807zm5.713.156c2.249 0 3.406-1.404 3.406-3.172V.256h-1.768v5.915c0 .988-.546 1.677-1.612 1.677s-1.612-.689-1.612-1.677V.256h-1.807V6.34c0 1.768 1.131 3.172 3.393 3.172zm7.481-.156V2.921l1.794 4.485h1.911l1.742-4.485v6.435h1.794v-9.1h-2.431L64.06 5.417 62.071.256h-2.548v9.1h1.755z"
              fill="currentColor"
              id="a"
            />
            <path
              d="M11.244 9.356V6.275h1.287c2.145 0 3.276-1.391 3.276-3.029 0-1.651-1.131-2.99-3.276-2.99H9.45v9.1h1.794zm1.014-4.628h-1.014V1.816h1.014c.988 0 1.703.416 1.703 1.43s-.715 1.482-1.703 1.482zm7.065 4.628V5.859h1.274l2.015 3.497h2.08l-2.327-3.835c1.378-.546 1.729-1.638 1.729-2.496 0-1.586-1.17-2.769-3.159-2.769h-3.419v9.1h1.807zm1.378-5.07h-1.378v-2.47h1.378c1.001 0 1.586.416 1.586 1.222 0 .78-.585 1.248-1.586 1.248zm12.278 5.07V7.809h-4.966V5.495h2.899V3.948h-2.899V1.816h4.966V.256h-6.773v9.1h6.773zm3.659 0V2.921l1.794 4.485h1.911l1.742-4.485v6.435h1.794v-9.1h-2.431L39.42 5.417 37.431.256h-2.548v9.1h1.755zm11.446 0v-9.1h-1.807v9.1h1.807zm5.713.156c2.249 0 3.406-1.404 3.406-3.172V.256h-1.768v5.915c0 .988-.546 1.677-1.612 1.677s-1.612-.689-1.612-1.677V.256h-1.807V6.34c0 1.768 1.131 3.172 3.393 3.172zm7.481-.156V2.921l1.794 4.485h1.911l1.742-4.485v6.435h1.794v-9.1h-2.431L64.06 5.417 62.071.256h-2.548v9.1h1.755z"
              fill="currentColor"
              id="a"
            />
          </g>
          <path
            d="M108.785 7.9L105.61 17h-2.06l3.176-9.1z"
            fill="currentColor"
          />
        </g>
        <path
          d="M4.213 14.896c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.513-1.599 1.86-2.485 3.637-2.485 1.326 0 2.353.54 3.06 1.404a.18.18 0 01-.022.26L9.732 10.66c-.086.066-.192.066-.256-.043-.45-.497-.9-.778-1.626-.778-.792 0-1.39.39-1.648 1.167-.128.454-.17.973-.17 1.664 0 .692.042 1.232.192 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.145-.886-3.658-2.507zm39.704 0c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.514-1.599 1.862-2.485 3.637-2.485 1.326 0 2.375.54 3.06 1.404a.18.18 0 01-.022.26l-1.155 1.037c-.086.066-.193.066-.257-.043-.45-.497-.899-.778-1.626-.778-.791 0-1.39.39-1.647 1.167-.15.454-.193.973-.193 1.664 0 .692.043 1.232.193 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.123-.886-3.637-2.507zm46.552 2.27c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.064.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.063.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195V8.348c0-.108.064-.195.192-.195h1.69c.107 0 .193.065.193.195v.648h.021c.385-.562 1.155-1.037 2.332-1.037 1.048 0 1.883.432 2.418 1.189h.021c.684-.757 1.562-1.19 2.824-1.19 2.054 0 3.209 1.427 3.209 3.35v5.685c0 .108-.064.194-.193.194l-1.647-.021zm4.228 3.177c-.108 0-.193-.066-.193-.195v-1.491c0-.108.064-.194.193-.194h.32c.707 0 1.048-.325 1.327-1.06l.257-.756-3.231-8.494c-.043-.108.043-.194.15-.194h1.818c.107 0 .193.065.214.194l1.99 5.879h.043l1.904-5.879c.043-.108.107-.194.213-.194h1.733c.108 0 .193.065.15.194l-3.337 9.401c-.77 2.14-1.498 2.81-2.974 2.81l-.577-.021zm-76.93-6.009c.15-.475.192-.908.192-1.664 0-.756-.043-1.167-.192-1.664-.257-.757-.835-1.167-1.647-1.167-.813 0-1.412.432-1.669 1.167-.15.475-.193.886-.193 1.664 0 .756.043 1.189.193 1.664.257.757.835 1.167 1.669 1.167.812.022 1.39-.41 1.647-1.167zm-5.306.562c-.192-.627-.3-1.232-.3-2.226s.087-1.578.3-2.226c.492-1.578 1.84-2.485 3.637-2.485 1.776 0 3.124.907 3.615 2.485.193.627.3 1.232.3 2.226s-.086 1.578-.3 2.226c-.491 1.578-1.84 2.485-3.615 2.485-1.775 0-3.123-.907-3.637-2.485zm43.085-6.937c2.695 0 3.68.95 3.722 3.155v5.857c0 .13-.085.195-.192.195h-1.54c-.13 0-.193-.087-.193-.195v-.648h-.022c-.406.605-1.24 1.037-2.481 1.037-1.626 0-2.974-.865-2.974-2.745 0-1.945 1.348-2.853 3.53-2.853h.728c.128 0 .192.087.192.195v1.189c0 .13-.086.194-.192.194h-.407c-1.327 0-1.904.368-1.904 1.21 0 .757.535 1.124 1.519 1.124 1.262 0 1.968-.497 1.968-1.534v-3.004c-.043-.973-.535-1.405-1.968-1.405-.984 0-1.583.281-2.011.627-.086.064-.193.043-.257-.043l-.685-1.233c-.042-.086-.021-.172.043-.237.706-.54 1.67-.886 3.124-.886zm-21.66 3.803h2.502c.065 0 .108-.043.108-.108 0-.302-.043-.54-.108-.756-.235-.735-.877-1.167-1.711-1.167-.834 0-1.498.432-1.733 1.167-.021.087-.043.173-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.107 1.296.021.13.064.26.107.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.086.065.086.173.021.26-.77.907-2.01 1.534-3.636 1.534-1.862 0-3.188-.93-3.68-2.507-.193-.584-.321-1.276-.321-2.205 0-.93.107-1.642.3-2.226.492-1.577 1.86-2.485 3.615-2.485 1.818 0 3.145.95 3.637 2.485.214.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.085-.043-.085-.086v-1.405c0-.065.043-.087.085-.087zm-4.83-7.42c.107 0 .193.064.214.107v12.319c0 .13-.085.195-.192.195h-1.69c-.128 0-.193-.087-.193-.195v-.67h-.021c-.407.605-1.134 1.06-2.332 1.06-1.498 0-2.61-.714-3.06-2.162-.234-.692-.32-1.319-.32-2.529s.107-1.837.32-2.528c.45-1.427 1.52-2.14 2.996-2.161h1.262c.043.02.064.043.064.086v1.707c0 .044-.021.087-.064.087h-.727c-.792.021-1.348.432-1.583 1.167-.129.41-.193.864-.193 1.685 0 .822.064 1.276.193 1.686.235.735.812 1.146 1.625 1.146.835 0 1.412-.39 1.648-1.146a4.85 4.85 0 00.171-1.167V4.536c0-.13.085-.195.192-.195h1.69zm44.176 7.42h2.503c.064 0 .107-.043.107-.108 0-.302-.043-.54-.107-.756-.235-.735-.877-1.167-1.712-1.167-.834 0-1.497.432-1.732 1.167a5.779 5.779 0 00-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.106 1.296.022.13.065.26.108.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.085.065.085.173.021.26-.77.907-2.011 1.534-3.637 1.534-1.86 0-3.187-.93-3.68-2.507-.192-.584-.32-1.276-.32-2.205 0-.93.107-1.642.3-2.226.491-1.577 1.86-2.485 3.614-2.485 1.819 0 3.145.95 3.638 2.485.213.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.086-.043-.086-.086v-1.405c0-.065.043-.087.086-.087zm-4.829-7.42c.107 0 .193.064.236.172v12.319c0 .13-.086.194-.193.194h-1.69c-.128 0-.192-.086-.192-.194v-.67h-.022c-.428.605-1.155 1.059-2.353 1.059-1.498 0-2.61-.713-3.06-2.161-.235-.692-.32-1.34-.32-2.55 0-1.232.107-1.86.32-2.551.45-1.426 1.54-2.14 3.017-2.161h1.24c.129 0 .193.086.193.194v1.492c0 .13-.085.194-.192.194h-.727c-.792.022-1.349.433-1.584 1.167-.128.41-.192.865-.192 1.686s.064 1.275.192 1.686c.235.756.792 1.167 1.626 1.167.835 0 1.412-.41 1.648-1.167.085-.302.15-.649.17-1.167V4.536c0-.13.086-.195.193-.195h1.69zM50.078 19.534c.295 0 .357.09.357.362v1.447c0 .294-.083.362-.357.362h-5.723c-.296 0-.358-.09-.358-.362v-1.447c0-.295.052-.362.358-.362h5.723zM0 .362C0 .109.043.043 0 0h42.208c.23 0 .272.022.358 0v21.344c0 .231-.021.275 0 .362-.086-.022-.129 0-.358 0H0v-.002l.007-.028c.006-.037-.002-.053-.006-.012L0 21.69V.361zm2.146 19.173H40.42c-.043-.043 0-.107 0-.362V2.171H2.146v17.364z"
          fill="currentColor"
          fillRule="nonzero"
          id="b"
        />
      </g>
    </svg>
  </CodecademyPremiumLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Pro 1`] = `
<Logo
  height={256}
  type="pro"
  width={256}
>
  <CodecademyProLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 139 22"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>
        Codecademy Pro Logo
      </title>
      <g
        fill="none"
        fillRule="nonzero"
      >
        <path
          d="M4.213 14.896c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.513-1.599 1.86-2.485 3.637-2.485 1.326 0 2.353.54 3.06 1.404a.18.18 0 01-.022.26L9.732 10.66c-.086.066-.192.066-.256-.043-.45-.497-.9-.778-1.626-.778-.792 0-1.39.39-1.648 1.167-.128.454-.17.973-.17 1.664 0 .692.042 1.232.192 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.145-.886-3.658-2.507zm39.704 0c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.514-1.599 1.862-2.485 3.637-2.485 1.326 0 2.375.54 3.06 1.404a.18.18 0 01-.022.26l-1.155 1.037c-.086.066-.193.066-.257-.043-.45-.497-.899-.778-1.626-.778-.791 0-1.39.39-1.647 1.167-.15.454-.193.973-.193 1.664 0 .692.043 1.232.193 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.123-.886-3.637-2.507zm46.552 2.27c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.064.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.063.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195V8.348c0-.108.064-.195.192-.195h1.69c.107 0 .193.065.193.195v.648h.021c.385-.562 1.155-1.037 2.332-1.037 1.048 0 1.883.432 2.418 1.189h.021c.684-.757 1.562-1.19 2.824-1.19 2.054 0 3.209 1.427 3.209 3.35v5.685c0 .108-.064.194-.193.194l-1.647-.021zm4.228 3.177c-.108 0-.193-.066-.193-.195v-1.491c0-.108.064-.194.193-.194h.32c.707 0 1.048-.325 1.327-1.06l.257-.756-3.231-8.494c-.043-.108.043-.194.15-.194h1.818c.107 0 .193.065.214.194l1.99 5.879h.043l1.904-5.879c.043-.108.107-.194.213-.194h1.733c.108 0 .193.065.15.194l-3.337 9.401c-.77 2.14-1.498 2.81-2.974 2.81l-.577-.021zm-76.93-6.009c.15-.475.192-.908.192-1.664 0-.756-.043-1.167-.192-1.664-.257-.757-.835-1.167-1.647-1.167-.813 0-1.412.432-1.669 1.167-.15.475-.193.886-.193 1.664 0 .756.043 1.189.193 1.664.257.757.835 1.167 1.669 1.167.812.022 1.39-.41 1.647-1.167zm-5.306.562c-.192-.627-.3-1.232-.3-2.226s.087-1.578.3-2.226c.492-1.578 1.84-2.485 3.637-2.485 1.776 0 3.124.907 3.615 2.485.193.627.3 1.232.3 2.226s-.086 1.578-.3 2.226c-.491 1.578-1.84 2.485-3.615 2.485-1.775 0-3.123-.907-3.637-2.485zm43.085-6.937c2.695 0 3.68.95 3.722 3.155v5.857c0 .13-.085.195-.192.195h-1.54c-.13 0-.193-.087-.193-.195v-.648h-.022c-.406.605-1.24 1.037-2.481 1.037-1.626 0-2.974-.865-2.974-2.745 0-1.945 1.348-2.853 3.53-2.853h.728c.128 0 .192.087.192.195v1.189c0 .13-.086.194-.192.194h-.407c-1.327 0-1.904.368-1.904 1.21 0 .757.535 1.124 1.519 1.124 1.262 0 1.968-.497 1.968-1.534v-3.004c-.043-.973-.535-1.405-1.968-1.405-.984 0-1.583.281-2.011.627-.086.064-.193.043-.257-.043l-.685-1.233c-.042-.086-.021-.172.043-.237.706-.54 1.67-.886 3.124-.886zm-21.66 3.803h2.502c.065 0 .108-.043.108-.108 0-.302-.043-.54-.108-.756-.235-.735-.877-1.167-1.711-1.167-.834 0-1.498.432-1.733 1.167-.021.087-.043.173-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.107 1.296.021.13.064.26.107.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.086.065.086.173.021.26-.77.907-2.01 1.534-3.636 1.534-1.862 0-3.188-.93-3.68-2.507-.193-.584-.321-1.276-.321-2.205 0-.93.107-1.642.3-2.226.492-1.577 1.86-2.485 3.615-2.485 1.818 0 3.145.95 3.637 2.485.214.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.085-.043-.085-.086v-1.405c0-.065.043-.087.085-.087zm-4.83-7.42c.107 0 .193.064.214.107v12.319c0 .13-.085.195-.192.195h-1.69c-.128 0-.193-.087-.193-.195v-.67h-.021c-.407.605-1.134 1.06-2.332 1.06-1.498 0-2.61-.714-3.06-2.162-.234-.692-.32-1.319-.32-2.529s.107-1.837.32-2.528c.45-1.427 1.52-2.14 2.996-2.161h1.262c.043.02.064.043.064.086v1.707c0 .044-.021.087-.064.087h-.727c-.792.021-1.348.432-1.583 1.167-.129.41-.193.864-.193 1.685 0 .822.064 1.276.193 1.686.235.735.812 1.146 1.625 1.146.835 0 1.412-.39 1.648-1.146a4.85 4.85 0 00.171-1.167V4.536c0-.13.085-.195.192-.195h1.69zm44.176 7.42h2.503c.064 0 .107-.043.107-.108 0-.302-.043-.54-.107-.756-.235-.735-.877-1.167-1.712-1.167-.834 0-1.497.432-1.732 1.167a5.779 5.779 0 00-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.106 1.296.022.13.065.26.108.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.085.065.085.173.021.26-.77.907-2.011 1.534-3.637 1.534-1.86 0-3.187-.93-3.68-2.507-.192-.584-.32-1.276-.32-2.205 0-.93.107-1.642.3-2.226.491-1.577 1.86-2.485 3.614-2.485 1.819 0 3.145.95 3.638 2.485.213.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.086-.043-.086-.086v-1.405c0-.065.043-.087.086-.087zm-4.829-7.42c.107 0 .193.064.236.172v12.319c0 .13-.086.194-.193.194h-1.69c-.128 0-.192-.086-.192-.194v-.67h-.022c-.428.605-1.155 1.059-2.353 1.059-1.498 0-2.61-.713-3.06-2.161-.235-.692-.32-1.34-.32-2.55 0-1.232.107-1.86.32-2.551.45-1.426 1.54-2.14 3.017-2.161h1.24c.129 0 .193.086.193.194v1.492c0 .13-.085.194-.192.194h-.727c-.792.022-1.349.433-1.584 1.167-.128.41-.192.865-.192 1.686s.064 1.275.192 1.686c.235.756.792 1.167 1.626 1.167.835 0 1.412-.41 1.648-1.167.085-.302.15-.649.17-1.167V4.536c0-.13.086-.195.193-.195h1.69zM50.078 19.534c.295 0 .357.09.357.362v1.447c0 .294-.083.362-.357.362h-5.723c-.296 0-.358-.09-.358-.362v-1.447c0-.295.052-.362.358-.362h5.723zM0 .362C0 .109.043.043 0 0h42.208c.23 0 .272.022.358 0v21.344c0 .231-.021.275 0 .362-.086-.022-.129 0-.358 0H0v-.002l.007-.028c.006-.037-.002-.053-.006-.012L0 21.69V.361zm2.146 19.173H40.42c-.043-.043 0-.107 0-.362V2.171H2.146v17.364z"
          fill="currentColor"
        />
        <path
          d="M133.374 7.744c2.639 0 4.758 1.963 4.758 4.706 0 2.743-2.119 4.706-4.758 4.706s-4.758-1.963-4.758-4.706c0-2.743 2.119-4.706 4.758-4.706zm0 7.748c1.716 0 2.873-1.3 2.873-3.042 0-1.742-1.157-3.042-2.873-3.042-1.716 0-2.873 1.3-2.873 3.042 0 1.742 1.157 3.042 2.873 3.042zM124.168 7.9c1.989 0 3.159 1.183 3.159 2.769 0 .858-.351 1.95-1.729 2.496L127.925 17h-2.08l-2.015-3.497h-1.274V17h-1.807V7.9h3.419zm-15.383 0L105.61 17h-2.06l3.176-9.1h2.06zm6.945 0c2.145 0 3.276 1.339 3.276 2.99 0 1.638-1.131 3.029-3.276 3.029h-1.287V17h-1.794V7.9h3.081zm-.273 1.56h-1.014v2.912h1.014c.988 0 1.703-.468 1.703-1.482s-.715-1.43-1.703-1.43zm8.477 0h-1.378v2.47h1.378c1.001 0 1.586-.468 1.586-1.248 0-.806-.585-1.222-1.586-1.222z"
          fill="#6400E4"
        />
      </g>
    </svg>
  </CodecademyProLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Pro Alt 1`] = `
<Logo
  height={256}
  type="proAlt"
  width={256}
>
  <CodecademyProAltLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 95 40"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <g
        fill="currentColor"
        fillRule="evenodd"
      >
        <path
          d="m0 0h74v40h-74zm78 34h17v6h-17z"
          fill="currentColor"
        />
        <path
          d="m13.971 23.67v6.82h-3.971v-20.145h6.82c4.749 0 7.253 2.965 7.253 6.62 0 3.625-2.504 6.705-7.253 6.705zm2.245-9.871h-2.245v6.446h2.245c2.187 0 3.77-1.036 3.77-3.28 0-2.245-1.583-3.166-3.77-3.166zm21.518 16.691-4.46-7.741h-2.821v7.741h-4v-20.145h7.568c4.404 0 6.994 2.62 6.994 6.13 0 1.9-.777 4.317-3.828 5.526l5.151 8.49h-4.604zm-.72-13.986c0-1.784-1.295-2.705-3.51-2.705h-3.051v5.468h3.05c2.216 0 3.511-1.036 3.511-2.763zm16.453-6.504c5.843 0 10.533 4.346 10.533 10.418s-4.69 10.417-10.533 10.417c-5.842 0-10.533-4.345-10.533-10.417s4.691-10.418 10.533-10.418zm0 17.152c3.799 0 6.36-2.878 6.36-6.734 0-3.857-2.561-6.734-6.36-6.734s-6.36 2.877-6.36 6.734c0 3.856 2.561 6.734 6.36 6.734z"
          fill="#fff"
        />
      </g>
    </svg>
  </CodecademyProAltLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Pro Lockup 1`] = `
<Logo
  height={256}
  type="proLockup"
  width={256}
>
  <CodecademyProLockupLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 62 26"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M62 16H50v4h12v6H7.937v-7.883c.736 1.253 2.464 2.248 4.544 2.248 4.032 0 7.136-3.243 7.136-7.738 0-4.495-3.072-7.738-7.104-7.738-2.208 0-3.936 1.027-4.64 2.28 0-.161.064-.482.064-1.188v-.707h-4.16V26H0V0h62v16zM11.585 8.613c2.208 0 3.744 1.734 3.744 4.014 0 2.248-1.536 4.046-3.744 4.046s-3.744-1.798-3.744-4.046c0-2.28 1.536-4.014 3.744-4.014zm19.71-3.403a4.695 4.695 0 0 0-1.151-.128c-1.824 0-3.232.963-3.808 2.536V5.274h-4.032V19.98h4.16v-7.032c0-2.569.96-3.564 3.072-3.564h1.76V5.21zm9.088 15.155c4.352 0 7.84-3.243 7.84-7.738 0-4.495-3.488-7.738-7.84-7.738s-7.84 3.243-7.84 7.738c0 4.495 3.488 7.738 7.84 7.738zm0-11.752c2.144 0 3.648 1.702 3.648 4.014 0 2.28-1.504 4.013-3.648 4.013-2.176 0-3.68-1.733-3.68-4.013 0-2.312 1.504-4.014 3.68-4.014z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  </CodecademyProLockupLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Pro Mono 1`] = `
<Logo
  height={256}
  type="proMono"
  width={256}
>
  <CodecademyProMonoLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 139 22"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>
        Codecademy Pro Logo
      </title>
      <g
        fill="none"
        fillRule="evenodd"
      >
        <path
          d="M29.824 0c2.639 0 4.758 1.963 4.758 4.706 0 2.743-2.119 4.706-4.758 4.706s-4.758-1.963-4.758-4.706C25.066 1.963 27.185 0 29.824 0zm0 7.748c1.716 0 2.873-1.3 2.873-3.042 0-1.742-1.157-3.042-2.873-3.042-1.716 0-2.873 1.3-2.873 3.042 0 1.742 1.157 3.042 2.873 3.042zM20.618.156c1.989 0 3.159 1.183 3.159 2.769 0 .858-.351 1.95-1.729 2.496l2.327 3.835h-2.08L20.28 5.759h-1.274v3.497h-1.807v-9.1h3.419zm-15.383 0l-3.175 9.1H0l3.176-9.1h2.06zm6.945 0c2.145 0 3.276 1.339 3.276 2.99 0 1.638-1.131 3.029-3.276 3.029h-1.287v3.081H9.099v-9.1h3.081zm-.273 1.56h-1.014v2.912h1.014c.988 0 1.703-.468 1.703-1.482s-.715-1.43-1.703-1.43zm8.477 0h-1.378v2.47h1.378c1.001 0 1.586-.468 1.586-1.248 0-.806-.585-1.222-1.586-1.222z"
          fill="currentColor"
          transform="translate(103.55 7.744)"
        />
        <path
          d="M4.213 14.896c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.513-1.599 1.86-2.485 3.637-2.485 1.326 0 2.353.54 3.06 1.404a.18.18 0 01-.022.26L9.732 10.66c-.086.066-.192.066-.256-.043-.45-.497-.9-.778-1.626-.778-.792 0-1.39.39-1.648 1.167-.128.454-.17.973-.17 1.664 0 .692.042 1.232.192 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.145-.886-3.658-2.507zm39.704 0c-.192-.562-.278-1.275-.278-2.226 0-.95.086-1.664.278-2.226.514-1.599 1.862-2.485 3.637-2.485 1.326 0 2.375.54 3.06 1.404a.18.18 0 01-.022.26l-1.155 1.037c-.086.066-.193.066-.257-.043-.45-.497-.899-.778-1.626-.778-.791 0-1.39.39-1.647 1.167-.15.454-.193.973-.193 1.664 0 .692.043 1.232.193 1.686.257.756.856 1.167 1.647 1.167.727 0 1.198-.28 1.626-.778.064-.086.171-.086.257-.022l1.155 1.038c.086.065.064.173.022.26-.707.842-1.734 1.382-3.06 1.382-1.775-.021-3.123-.886-3.637-2.507zm46.552 2.27c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.064.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195v-5.187c0-1.167-.578-1.967-1.67-1.967-1.069 0-1.69.8-1.69 1.967v5.187c0 .108-.063.195-.192.195h-1.69c-.107 0-.192-.066-.192-.195V8.348c0-.108.064-.195.192-.195h1.69c.107 0 .193.065.193.195v.648h.021c.385-.562 1.155-1.037 2.332-1.037 1.048 0 1.883.432 2.418 1.189h.021c.684-.757 1.562-1.19 2.824-1.19 2.054 0 3.209 1.427 3.209 3.35v5.685c0 .108-.064.194-.193.194l-1.647-.021zm4.228 3.177c-.108 0-.193-.066-.193-.195v-1.491c0-.108.064-.194.193-.194h.32c.707 0 1.048-.325 1.327-1.06l.257-.756-3.231-8.494c-.043-.108.043-.194.15-.194h1.818c.107 0 .193.065.214.194l1.99 5.879h.043l1.904-5.879c.043-.108.107-.194.213-.194h1.733c.108 0 .193.065.15.194l-3.337 9.401c-.77 2.14-1.498 2.81-2.974 2.81l-.577-.021zm-76.93-6.009c.15-.475.192-.908.192-1.664 0-.756-.043-1.167-.192-1.664-.257-.757-.835-1.167-1.647-1.167-.813 0-1.412.432-1.669 1.167-.15.475-.193.886-.193 1.664 0 .756.043 1.189.193 1.664.257.757.835 1.167 1.669 1.167.812.022 1.39-.41 1.647-1.167zm-5.306.562c-.192-.627-.3-1.232-.3-2.226s.087-1.578.3-2.226c.492-1.578 1.84-2.485 3.637-2.485 1.776 0 3.124.907 3.615 2.485.193.627.3 1.232.3 2.226s-.086 1.578-.3 2.226c-.491 1.578-1.84 2.485-3.615 2.485-1.775 0-3.123-.907-3.637-2.485zm43.085-6.937c2.695 0 3.68.95 3.722 3.155v5.857c0 .13-.085.195-.192.195h-1.54c-.13 0-.193-.087-.193-.195v-.648h-.022c-.406.605-1.24 1.037-2.481 1.037-1.626 0-2.974-.865-2.974-2.745 0-1.945 1.348-2.853 3.53-2.853h.728c.128 0 .192.087.192.195v1.189c0 .13-.086.194-.192.194h-.407c-1.327 0-1.904.368-1.904 1.21 0 .757.535 1.124 1.519 1.124 1.262 0 1.968-.497 1.968-1.534v-3.004c-.043-.973-.535-1.405-1.968-1.405-.984 0-1.583.281-2.011.627-.086.064-.193.043-.257-.043l-.685-1.233c-.042-.086-.021-.172.043-.237.706-.54 1.67-.886 3.124-.886zm-21.66 3.803h2.502c.065 0 .108-.043.108-.108 0-.302-.043-.54-.108-.756-.235-.735-.877-1.167-1.711-1.167-.834 0-1.498.432-1.733 1.167-.021.087-.043.173-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.107 1.296.021.13.064.26.107.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.086.065.086.173.021.26-.77.907-2.01 1.534-3.636 1.534-1.862 0-3.188-.93-3.68-2.507-.193-.584-.321-1.276-.321-2.205 0-.93.107-1.642.3-2.226.492-1.577 1.86-2.485 3.615-2.485 1.818 0 3.145.95 3.637 2.485.214.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.085-.043-.085-.086v-1.405c0-.065.043-.087.085-.087zm-4.83-7.42c.107 0 .193.064.214.107v12.319c0 .13-.085.195-.192.195h-1.69c-.128 0-.193-.087-.193-.195v-.67h-.021c-.407.605-1.134 1.06-2.332 1.06-1.498 0-2.61-.714-3.06-2.162-.234-.692-.32-1.319-.32-2.529s.107-1.837.32-2.528c.45-1.427 1.52-2.14 2.996-2.161h1.262c.043.02.064.043.064.086v1.707c0 .044-.021.087-.064.087h-.727c-.792.021-1.348.432-1.583 1.167-.129.41-.193.864-.193 1.685 0 .822.064 1.276.193 1.686.235.735.812 1.146 1.625 1.146.835 0 1.412-.39 1.648-1.146a4.85 4.85 0 00.171-1.167V4.536c0-.13.085-.195.192-.195h1.69zm44.176 7.42h2.503c.064 0 .107-.043.107-.108 0-.302-.043-.54-.107-.756-.235-.735-.877-1.167-1.712-1.167-.834 0-1.497.432-1.732 1.167a5.779 5.779 0 00-.064.28v.044c-.064.41-.086.735-.107 1.254-.003.434.033.868.106 1.296.022.13.065.26.108.39.278.885.984 1.361 1.968 1.361 1.006 0 1.626-.367 2.075-.864.086-.109.193-.109.278-.044l1.07.973c.085.065.085.173.021.26-.77.907-2.011 1.534-3.637 1.534-1.86 0-3.187-.93-3.68-2.507-.192-.584-.32-1.276-.32-2.205 0-.93.107-1.642.3-2.226.491-1.577 1.86-2.485 3.614-2.485 1.819 0 3.145.95 3.638 2.485.213.627.3 1.254.3 2.702 0 .13-.065.194-.193.194h-4.536c-.064 0-.086-.043-.086-.086v-1.405c0-.065.043-.087.086-.087zm-4.829-7.42c.107 0 .193.064.236.172v12.319c0 .13-.086.194-.193.194h-1.69c-.128 0-.192-.086-.192-.194v-.67h-.022c-.428.605-1.155 1.059-2.353 1.059-1.498 0-2.61-.713-3.06-2.161-.235-.692-.32-1.34-.32-2.55 0-1.232.107-1.86.32-2.551.45-1.426 1.54-2.14 3.017-2.161h1.24c.129 0 .193.086.193.194v1.492c0 .13-.085.194-.192.194h-.727c-.792.022-1.349.433-1.584 1.167-.128.41-.192.865-.192 1.686s.064 1.275.192 1.686c.235.756.792 1.167 1.626 1.167.835 0 1.412-.41 1.648-1.167.085-.302.15-.649.17-1.167V4.536c0-.13.086-.195.193-.195h1.69zM50.078 19.534c.295 0 .357.09.357.362v1.447c0 .294-.083.362-.357.362h-5.723c-.296 0-.358-.09-.358-.362v-1.447c0-.295.052-.362.358-.362h5.723zM0 .362C0 .109.043.043 0 0h42.208c.23 0 .272.022.358 0v21.344c0 .231-.021.275 0 .362-.086-.022-.129 0-.358 0H0v-.002l.007-.028c.006-.037-.002-.053-.006-.012L0 21.69V.361zm2.146 19.173H40.42c-.043-.043 0-.107 0-.362V2.171H2.146v17.364z"
          fill="currentColor"
        />
      </g>
    </svg>
  </CodecademyProMonoLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Logo Program 1`] = `
<Logo
  height={256}
  type="program"
  width={256}
>
  <CodecademyProgramLogo
    height={256}
    width={256}
  >
    <svg
      height={256}
      viewBox="0 0 178 31"
      width={256}
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>
        Codecademy Program Logo
      </title>
      <path
        d="M.5 20.295c0 .173.116.289.289.289h3.66c.173 0 .288-.116.288-.289V1.276c0-.173-.115-.288-.288-.288H.789c-.173 0-.288.115-.288.288v19.02zM13.972 20.295c0 .173.115.289.288.289h3.257c.173 0 .288-.116.288-.289V7.991h.144l6.945 12.304c.115.202.26.289.49.289h3.429c.173 0 .288-.116.288-.289V1.276c0-.173-.115-.288-.288-.288h-3.256c-.173 0-.289.115-.289.288V13.61h-.144L18.208 1.276a.535.535 0 0 0-.49-.288H14.26c-.173 0-.288.115-.288.288v19.02zM46.319 20.584c.173 0 .288-.116.288-.289V4.936c0-.115.057-.173.173-.173h4.956c.173 0 .288-.115.288-.288V1.276c0-.173-.115-.288-.288-.288H37.241c-.173 0-.288.115-.288.288v3.199c0 .173.115.288.288.288h4.957c.115 0 .173.058.173.173v15.36c0 .172.115.288.288.288h3.66zM59.876 20.295c0 .173.116.289.289.289h12.564c.173 0 .288-.116.288-.289v-3.083c0-.173-.115-.288-.288-.288h-8.444c-.115 0-.172-.058-.172-.173v-4.063c0-.116.057-.173.172-.173h7.032c.173 0 .288-.115.288-.288V9.172c0-.173-.115-.288-.288-.288h-7.032c-.115 0-.172-.058-.172-.173v-3.89c0-.116.057-.173.172-.173h8.444c.173 0 .288-.115.288-.288V1.276c0-.173-.115-.288-.288-.288H60.165c-.173 0-.289.115-.289.288v19.02zM81.647 20.295c0 .173.115.289.288.289h3.257c.172 0 .288-.116.288-.289V7.991h.144l6.945 12.304c.115.202.26.289.49.289h3.429c.173 0 .288-.116.288-.289V1.276c0-.173-.115-.288-.288-.288h-3.256c-.173 0-.289.115-.289.288V13.61H92.8L85.883 1.276a.535.535 0 0 0-.49-.288h-3.458c-.173 0-.288.115-.288.288v19.02zM112.61 20.9c5.072 0 7.695-2.622 7.695-6.166 0-3.545-2.133-5.389-6.167-5.937l-1.038-.144c-2.247-.317-3.054-1.037-3.054-2.16 0-1.24.893-2.133 2.622-2.133 1.614 0 3.055.518 4.553 1.498.144.087.288.058.404-.086l1.757-2.623c.144-.201.116-.317-.057-.432-1.643-1.268-4.063-2.046-6.657-2.046-4.236 0-6.945 2.392-6.945 5.994 0 3.458 2.219 5.331 6.196 5.879l1.037.144c2.334.317 3.026 1.037 3.026 2.19 0 1.383-1.153 2.334-3.199 2.334-2.075 0-3.832-.98-5.13-2.017-.143-.115-.316-.115-.431.029l-2.19 2.507c-.145.173-.087.374.028.49 1.528 1.47 4.496 2.68 7.55 2.68zM128.646 20.295c0 .173.116.289.289.289h3.66c.172 0 .288-.116.288-.289V1.276c0-.173-.116-.288-.289-.288h-3.66c-.172 0-.288.115-.288.288v19.02zM150.503 20.584c.173 0 .289-.116.346-.289l6.225-18.99c.057-.202-.058-.317-.23-.317h-3.718c-.202 0-.317.086-.375.288l-3.804 12.853h-.086l-3.92-12.853c-.057-.202-.172-.288-.374-.288h-3.746c-.202 0-.317.115-.26.317l6.225 18.99c.058.173.173.289.375.289h3.342zM164.753 20.295c0 .173.115.289.288.289h12.564c.173 0 .288-.116.288-.289v-3.083c0-.173-.115-.288-.288-.288h-8.443c-.115 0-.173-.058-.173-.173v-4.063c0-.116.058-.173.173-.173h7.031c.173 0 .288-.115.288-.288V9.172c0-.173-.115-.288-.288-.288h-7.031c-.115 0-.173-.058-.173-.173v-3.89c0-.116.058-.173.173-.173h8.443c.173 0 .288-.115.288-.288V1.276c0-.173-.115-.288-.288-.288h-12.564c-.173 0-.288.115-.288.288v19.02zM164.67 30.19c0 .516.127.685.73.685h11.68c.56 0 .73-.127.73-.686v-2.744c0-.516-.128-.686-.73-.686H165.4c-.625 0-.73.127-.73.686v2.744z"
        fill="currentColor"
      />
    </svg>
  </CodecademyProgramLogo>
</Logo>
`;

exports[`Storyshots Labs|Brand/Atoms/Quote Quote 1`] = `
<Quote
  text="Codecademy’s small lessons really help a person who has trouble focusing on long lessons."
>
  <div
    className="lightContainer"
  >
    <img
      alt=""
      className="icon"
      src="file-mock-item"
    />
    <q
      className="text"
    >
      Codecademy’s small lessons really help a person who has trouble focusing on long lessons.
    </q>
  </div>
</Quote>
`;

exports[`Storyshots Labs|Brand/Molecules/Byline Byline 1`] = `
<Byline
  firstName="Bill"
  lastName="Murray"
  location="New York, NY"
  occupation="Ghostbuster @ Ghostcademy"
>
  <div
    className="bylineContainer"
  >
    <span
      className="author"
      data-testid="author-container"
    >
      <span
        aria-label="First Name"
      >
        Bill
      </span>
      <span
        aria-label="Last Name"
        className="lastName"
      >
         Murray
      </span>
    </span>
    <div
      data-testid="job-container"
    >
      <span
        aria-label="Occupation"
      >
        Ghostbuster @ Ghostcademy
      </span>
    </div>
    <div
      className="locationContainer"
    >
      <img
        alt="Location pin icon"
        className="networkPin"
        src="file-mock-item"
      />
      <span>
        New York, NY
      </span>
    </div>
  </div>
</Byline>
`;

exports[`Storyshots Labs|Brand/Molecules/EditorialImage EditorialImage 1`] = `
<EditorialImage
  alt="A picture of two Codecademy employees."
  caption="You can remove this caption."
  image="https://images.ctfassets.net/go6kr6r0ykrq/4NI4czS6Y3DeaBBlVAoPTL/5a95deb01518e0cbb27bac8c6e00eaf6/broadway_2_70.jpg"
>
  <div>
    <div
      className="imageContainer"
    >
      <img
        alt="A picture of two Codecademy employees."
        className="image"
        src="https://images.ctfassets.net/go6kr6r0ykrq/4NI4czS6Y3DeaBBlVAoPTL/5a95deb01518e0cbb27bac8c6e00eaf6/broadway_2_70.jpg"
      />
    </div>
    <span
      className="caption"
    >
      You can remove this caption.
    </span>
  </div>
</EditorialImage>
`;

exports[`Storyshots Labs|Brand/Molecules/EditorialQuote EditorialQuote 1`] = `
<EditorialQuote
  quote="In an interstellar burst, I am back to save the universe."
>
  <q
    className="quote"
  >
    In an interstellar burst, I am back to save the universe.
  </q>
</EditorialQuote>
`;

exports[`Storyshots Labs|Brand/Molecules/Testimonial Large 1`] = `
<Testimonial
  size="large"
  testimonial={
    Object {
      "company": "Microsoft",
      "firstName": "Lacey",
      "imageUrl": "https://content.codecademy.com/courses/free/boba.svg",
      "lastName": "Bathala",
      "quote": "Coding aint rocket science, it’s just falsely intimidating.",
    }
  }
  theme="dark-mode"
>
  <div
    className="testimonialWrapper darkWrapper"
  >
    <div
      className="testimonialCardContainer"
    >
      <div
        className="contentContainer largeContainer"
      >
        <div
          className="avatarContainer"
        >
          <Avatar
            alt=""
            className="largeContainerAvatar"
            src="https://content.codecademy.com/courses/free/boba.svg"
            theme="dark-mode"
          >
            <div
              className="container largeContainerAvatar darkContainer"
            >
              <img
                alt=""
                src="https://content.codecademy.com/courses/free/boba.svg"
              />
            </div>
          </Avatar>
        </div>
        <div
          className="bylineContainer"
        >
          <Byline
            company="Microsoft"
            firstName="Lacey"
            lastName="Bathala"
          >
            <div
              className="bylineContainer"
            >
              <span
                className="author"
                data-testid="author-container"
              >
                <span
                  aria-label="First Name"
                >
                  Lacey
                </span>
                <span
                  aria-label="Last Name"
                  className="lastName"
                >
                   Bathala
                </span>
              </span>
              <div
                data-testid="job-container"
              >
                <span
                  aria-label="Occupation"
                />
                <span
                  aria-label="Company"
                  className="company"
                >
                   @ Microsoft
                </span>
              </div>
            </div>
          </Byline>
        </div>
        <div
          className="quoteContainer"
        >
          <Quote
            text="Coding aint rocket science, it’s just falsely intimidating."
            theme="dark-mode"
          >
            <div
              className="darkContainer"
            >
              <img
                alt=""
                className="icon"
                src="file-mock-item"
              />
              <q
                className="text"
              >
                Coding aint rocket science, it’s just falsely intimidating.
              </q>
            </div>
          </Quote>
        </div>
      </div>
    </div>
  </div>
</Testimonial>
`;

exports[`Storyshots Labs|Brand/Molecules/Testimonial Light Theme 1`] = `
<Testimonial
  size="small"
  testimonial={
    Object {
      "company": "Microsoft",
      "firstName": "Lacey",
      "imageUrl": "https://content.codecademy.com/courses/free/boba.svg",
      "lastName": "Bathala",
      "quote": "Coding aint rocket science, it’s just falsely intimidating.",
    }
  }
>
  <div
    className="testimonialWrapper"
  >
    <div
      className="testimonialCardContainer"
    >
      <div
        className="contentContainer smallContainer"
      >
        <div
          className="avatarContainer"
        >
          <Avatar
            alt=""
            className=""
            src="https://content.codecademy.com/courses/free/boba.svg"
          >
            <div
              className="container lightContainer"
            >
              <img
                alt=""
                src="https://content.codecademy.com/courses/free/boba.svg"
              />
            </div>
          </Avatar>
        </div>
        <div
          className="bylineContainer"
        >
          <Byline
            company="Microsoft"
            firstName="Lacey"
            lastName="Bathala"
          >
            <div
              className="bylineContainer"
            >
              <span
                className="author"
                data-testid="author-container"
              >
                <span
                  aria-label="First Name"
                >
                  Lacey
                </span>
                <span
                  aria-label="Last Name"
                  className="lastName"
                >
                   Bathala
                </span>
              </span>
              <div
                data-testid="job-container"
              >
                <span
                  aria-label="Occupation"
                />
                <span
                  aria-label="Company"
                  className="company"
                >
                   @ Microsoft
                </span>
              </div>
            </div>
          </Byline>
        </div>
        <div
          className="quoteContainer"
        >
          <Quote
            text="Coding aint rocket science, it’s just falsely intimidating."
          >
            <div
              className="lightContainer"
            >
              <img
                alt=""
                className="icon"
                src="file-mock-item"
              />
              <q
                className="text"
              >
                Coding aint rocket science, it’s just falsely intimidating.
              </q>
            </div>
          </Quote>
        </div>
      </div>
    </div>
  </div>
</Testimonial>
`;

exports[`Storyshots Labs|Brand/Molecules/Testimonial Medium 1`] = `
<Testimonial
  size="medium"
  testimonial={
    Object {
      "company": "Microsoft",
      "firstName": "Lacey",
      "imageUrl": "https://content.codecademy.com/courses/free/boba.svg",
      "lastName": "Bathala",
      "quote": "Coding aint rocket science, it’s just falsely intimidating.",
    }
  }
  theme="dark-mode"
>
  <div
    className="testimonialWrapper darkWrapper"
  >
    <div
      className="testimonialCardContainer"
    >
      <div
        className="contentContainer mediumContainer"
      >
        <div
          className="avatarContainer"
        >
          <Avatar
            alt=""
            className=""
            src="https://content.codecademy.com/courses/free/boba.svg"
            theme="dark-mode"
          >
            <div
              className="container darkContainer"
            >
              <img
                alt=""
                src="https://content.codecademy.com/courses/free/boba.svg"
              />
            </div>
          </Avatar>
        </div>
        <div
          className="bylineContainer"
        >
          <Byline
            company="Microsoft"
            firstName="Lacey"
            lastName="Bathala"
          >
            <div
              className="bylineContainer"
            >
              <span
                className="author"
                data-testid="author-container"
              >
                <span
                  aria-label="First Name"
                >
                  Lacey
                </span>
                <span
                  aria-label="Last Name"
                  className="lastName"
                >
                   Bathala
                </span>
              </span>
              <div
                data-testid="job-container"
              >
                <span
                  aria-label="Occupation"
                />
                <span
                  aria-label="Company"
                  className="company"
                >
                   @ Microsoft
                </span>
              </div>
            </div>
          </Byline>
        </div>
        <div
          className="quoteContainer"
        >
          <Quote
            text="Coding aint rocket science, it’s just falsely intimidating."
            theme="dark-mode"
          >
            <div
              className="darkContainer"
            >
              <img
                alt=""
                className="icon"
                src="file-mock-item"
              />
              <q
                className="text"
              >
                Coding aint rocket science, it’s just falsely intimidating.
              </q>
            </div>
          </Quote>
        </div>
      </div>
    </div>
  </div>
</Testimonial>
`;

exports[`Storyshots Labs|Brand/Molecules/Testimonial No Avatar 1`] = `
<Testimonial
  size="large"
  testimonial={
    Object {
      "company": "Microsoft",
      "firstName": "Lacey",
      "lastName": "Bathala",
      "quote": "Coding aint rocket science, it’s just falsely intimidating.",
    }
  }
  theme="dark-mode"
>
  <div
    className="testimonialWrapper darkWrapper"
  >
    <div
      className="testimonialCardContainer"
    >
      <div
        className="contentContainer largeContainer"
      >
        <div
          className="bylineContainer"
        >
          <Byline
            company="Microsoft"
            firstName="Lacey"
            lastName="Bathala"
          >
            <div
              className="bylineContainer"
            >
              <span
                className="author"
                data-testid="author-container"
              >
                <span
                  aria-label="First Name"
                >
                  Lacey
                </span>
                <span
                  aria-label="Last Name"
                  className="lastName"
                >
                   Bathala
                </span>
              </span>
              <div
                data-testid="job-container"
              >
                <span
                  aria-label="Occupation"
                />
                <span
                  aria-label="Company"
                  className="company"
                >
                   @ Microsoft
                </span>
              </div>
            </div>
          </Byline>
        </div>
        <div
          className="quoteContainer"
        >
          <Quote
            text="Coding aint rocket science, it’s just falsely intimidating."
            theme="dark-mode"
          >
            <div
              className="darkContainer"
            >
              <img
                alt=""
                className="icon"
                src="file-mock-item"
              />
              <q
                className="text"
              >
                Coding aint rocket science, it’s just falsely intimidating.
              </q>
            </div>
          </Quote>
        </div>
      </div>
    </div>
  </div>
</Testimonial>
`;

exports[`Storyshots Labs|Brand/Molecules/Testimonial Testimonial 1`] = `
<Testimonial
  size="small"
  testimonial={
    Object {
      "company": "Microsoft",
      "firstName": "Lacey",
      "imageUrl": "https://content.codecademy.com/courses/free/boba.svg",
      "lastName": "Bathala",
      "quote": "Coding aint rocket science, it’s just falsely intimidating.",
    }
  }
  theme="dark-mode"
>
  <div
    className="testimonialWrapper darkWrapper"
  >
    <div
      className="testimonialCardContainer"
    >
      <div
        className="contentContainer smallContainer"
      >
        <div
          className="avatarContainer"
        >
          <Avatar
            alt=""
            className=""
            src="https://content.codecademy.com/courses/free/boba.svg"
            theme="dark-mode"
          >
            <div
              className="container darkContainer"
            >
              <img
                alt=""
                src="https://content.codecademy.com/courses/free/boba.svg"
              />
            </div>
          </Avatar>
        </div>
        <div
          className="bylineContainer"
        >
          <Byline
            company="Microsoft"
            firstName="Lacey"
            lastName="Bathala"
          >
            <div
              className="bylineContainer"
            >
              <span
                className="author"
                data-testid="author-container"
              >
                <span
                  aria-label="First Name"
                >
                  Lacey
                </span>
                <span
                  aria-label="Last Name"
                  className="lastName"
                >
                   Bathala
                </span>
              </span>
              <div
                data-testid="job-container"
              >
                <span
                  aria-label="Occupation"
                />
                <span
                  aria-label="Company"
                  className="company"
                >
                   @ Microsoft
                </span>
              </div>
            </div>
          </Byline>
        </div>
        <div
          className="quoteContainer"
        >
          <Quote
            text="Coding aint rocket science, it’s just falsely intimidating."
            theme="dark-mode"
          >
            <div
              className="darkContainer"
            >
              <img
                alt=""
                className="icon"
                src="file-mock-item"
              />
              <q
                className="text"
              >
                Coding aint rocket science, it’s just falsely intimidating.
              </q>
            </div>
          </Quote>
        </div>
      </div>
    </div>
  </div>
</Testimonial>
`;
