
import figma from "@figma/code-connect"

import { FillButton } from "./FillButton"

/**
 * -- This file was auto-generated by `figma connect create` --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */


figma.connect(
  FillButton,
  "https://www.figma.com/design/2cQBxc5JTO0M38mcYARs7O/codeConnect?node-id=1106-7&m=dev",
  {
    props: {
      leadingIcon: figma.instance("↳ leading icon"),
      trailingIcon: figma.instance("↳ trailing icon"),
      hasTrailingIcon: figma.boolean("hasTrailingIcon"),
      hasLeadingIcon: figma.boolean("hasLeadingIcon"),
      label: figma.string("label"),
      variant: figma.enum("variant", {
        primary: "primary",
        secondary: "secondary",
        danger: "danger",
      }),
      size: figma.enum("size", {
        normal: "normal",
        small: "small",
        large: "large",
      }),
      state: figma.enum("state", {
        default: "default",
        hover: "hover",
        active: "active",
        focus: "focus",
        disabled: "disabled",
      }),
    },
    example: (props) => {
      const hasIcon = props.hasLeadingIcon || props.hasTrailingIcon
      const iconPosition = hasIcon ? (props.hasLeadingIcon ? "left" : "right") : undefined;
      const icon = iconPosition ? iconPosition === "left" ? props.leadingIcon : props.trailingIcon : undefined;
      return (
          <FillButton
            icon={icon}
            iconPosition={iconPosition}
            variant={props.variant}
            size={props.size}
            state={props.state}
          >
            {props.label}
          </FillButton>
        )
    },
  },
)
