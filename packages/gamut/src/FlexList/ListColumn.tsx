import React, { useContext } from 'react';
import cx from 'classnames';

import { generateResponsiveClassnames } from '../utils';
import {
  ResponsiveProperty,
  OptionalResponsiveProperty,
} from '../typings/responsive-properties';
import { ListContext } from './ListContext';

import s from './styles/ListColumn.module.scss';

/**
 * These types map to class names generated by our CSS Modules,
 * please refer to values specified in `./styles/variables.scss`
 * as a reference to their function.
 */
export type FlexColumnSizes =
  | 'xs'
  | 'sm'
  | 'md'
  | 'lg'
  | 'xl'
  | 'xxl'
  | 'content'
  | 'fill'
  | 'max';

export type Alignments = 'center' | 'left' | 'right';
export type FlushDirections = 'left' | 'right';
export type PaddingSizes = 'none' | 'sm' | 'md';

export type ListColumnProps = {
  // Specify a flex-basis for for column or a flex grow.
  size?: ResponsiveProperty<FlexColumnSizes>;
  // Align column content
  align?: OptionalResponsiveProperty<Alignments>;
  // Remove padding on the left or right side
  flush?: OptionalResponsiveProperty<FlushDirections>;
  // Set column padding
  padding?: OptionalResponsiveProperty<PaddingSizes>;
};

export const ListColumn: React.FC<ListColumnProps> = ({
  padding = 'sm',
  flush,
  size = 'content',
  align,
  children,
}) => {
  const { bordered } = useContext(ListContext);

  return (
    <div
      className={cx(
        s.listColumn,
        generateResponsiveClassnames({ padding, flush, size, align }, s),
        { [s.bordered]: bordered }
      )}
    >
      {children}
    </div>
  );
};

export default ListColumn;
