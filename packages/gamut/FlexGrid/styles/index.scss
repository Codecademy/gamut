@import "~@codecademy/gamut-styles/utils";

// Overridden by values in global variables
$grid-cols: 12 !default;
$grid-gutter-width: px-rem(16) !default;
$grid-outer-margin: px-rem(16) !default;
$grid-xs-min: px-rem(480) !default;
$grid-sm-min: px-rem(768) !default;
$grid-md-min: px-rem(1024) !default;
$grid-lg-min: px-rem(1200) !default;

$half-gutter-width: $grid-gutter-width * 0.5;
$gutter-compensation: $half-gutter-width * -1;
$container-sm: $grid-sm-min + $grid-gutter-width;
$container-md: $grid-md-min + $grid-gutter-width;
$container-lg: $grid-lg-min + $grid-gutter-width;

.container-fluid,
.container {
  margin-left: auto;
  margin-right: auto;
}

.container {
  padding-left: $grid-gutter-width / 2;
  padding-right: $grid-gutter-width / 2;
}

.container-fluid {
  padding-left: $grid-outer-margin;
  padding-right: $grid-outer-margin;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: $gutter-compensation;
  margin-right: $gutter-compensation;

  &.reverse {
    flex-direction: row-reverse;
  }
}

.col {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding-left: $half-gutter-width;
  padding-right: $half-gutter-width;

  &.reverse {
    flex-direction: column-reverse;
  }
}

@mixin create-cols($v: "xs") {
  .col-#{$v} {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }

  @for $col-index from 1 through $grid-cols {
    $col-width: ((100 / $grid-cols) * $col-index) * 1%;

    .col-#{$v}-#{$col-index} {
      flex-basis: $col-width;
      max-width: $col-width;
    }

    .col-#{$v}-offset-#{$col-index} {
      margin-left: $col-width;
    }
  }

  .start-#{$v} {
    justify-content: flex-start;
  }

  .center-#{$v} {
    justify-content: center;
  }

  .end-#{$v} {
    justify-content: flex-end;
  }

  .top-#{$v} {
    align-items: flex-start;
  }

  .middle-#{$v} {
    align-items: center;
  }

  .bottom-#{$v} {
    align-items: flex-end;
  }

  .around-#{$v} {
    justify-content: space-around;
  }

  .between-#{$v} {
    justify-content: space-between;
  }

  .first-#{$v} {
    order: -1;
  }

  .last-#{$v} {
    order: 1;
  }
}

@include create-cols("xs");

@include sm-viewport {
  @include create-cols("sm");
  .container {
    width: $container-sm;
  }
}

@include md-viewport {
  @include create-cols("md");
  .container {
    width: $container-md;
  }
}

@include lg-viewport {
  @include create-cols("lg");
  .container {
    width: $container-lg;
  }
}
