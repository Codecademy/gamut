function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
import _styled from "@emotion/styled/base";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
import { FlexBox, FormError, Input } from '@codecademy/gamut';
import { pxRem, theme } from '@codecademy/gamut-styles';
import { useCallback, useRef, useState } from 'react';
import * as React from 'react';
import { Avatar } from '..';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var baseSize = 75;
var smBreakpointSize = 120;
var StyledAvatar = /*#__PURE__*/_styled(Avatar, {
  target: "e1puzyt54",
  label: "StyledAvatar"
})("img{width:", pxRem(baseSize), ";height:", pxRem(baseSize), ";}", theme.breakpoints.sm, "{img{width:", pxRem(smBreakpointSize), ";height:", pxRem(smBreakpointSize), ";}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQm1DIiwiZmlsZSI6Ii4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXhCb3gsIEZvcm1FcnJvciwgSW5wdXQgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBweFJlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VGb3JtUmV0dXJuLCBWYWxpZGF0ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uJztcblxudHlwZSBBdmF0YXJDaG9vc2VyUHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICByZWdpc3Rlcj86IFVzZUZvcm1SZXR1cm5bJ3JlZ2lzdGVyJ107XG4gIG9uSW1hZ2VDaGFuZ2VkPzogKGltYWdlRmlsZUxpc3Q6IEZpbGVMaXN0KSA9PiB2b2lkO1xuICB2YWxpZGF0ZT86IFZhbGlkYXRlPEZpbGVMaXN0PiB8IFJlY29yZDxzdHJpbmcsIFZhbGlkYXRlPEZpbGVMaXN0Pj47XG4gIGVycm9yPzogc3RyaW5nO1xufTtcblxuY29uc3QgYmFzZVNpemUgPSA3NTtcbmNvbnN0IHNtQnJlYWtwb2ludFNpemUgPSAxMjA7XG5cbmNvbnN0IFN0eWxlZEF2YXRhciA9IHN0eWxlZChBdmF0YXIpYFxuICBpbWcge1xuICAgIHdpZHRoOiAke3B4UmVtKGJhc2VTaXplKX07XG4gICAgaGVpZ2h0OiAke3B4UmVtKGJhc2VTaXplKX07XG4gIH1cblxuICAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAke3B4UmVtKHNtQnJlYWtwb2ludFNpemUpfTtcbiAgICAgIGhlaWdodDogJHtweFJlbShzbUJyZWFrcG9pbnRTaXplKX07XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBDaG9vc2VQaG90b0xhYmVsID0gc3R5bGVkLmxhYmVsYFxuICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICR7dGhlbWUuYnJlYWtwb2ludHMuc219IHtcbiAgICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzI0XX07XG4gIH1cbmA7XG5cbmNvbnN0IENob29zZVBob3RvU3BhbiA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuaHlwZXJ9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgSGlkZGVuSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuICBkaXNwbGF5OiBub25lO1xuYDtcblxuY29uc3QgU3R5bGVkRm9ybUVycm9yID0gc3R5bGVkKEZvcm1FcnJvcilgXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyQ2hvb3NlcjogUmVhY3QuRkM8QXZhdGFyQ2hvb3NlclByb3BzPiA9ICh7XG4gIHNyYzogZXhpc3RpbmdTcmMsXG4gIG9uSW1hZ2VDaGFuZ2VkLFxuICBlcnJvcixcbiAgcmVnaXN0ZXIsXG4gIHZhbGlkYXRlID0gdmFsaWRhdGVQaG90b1VwbG9hZCxcbiAgbmFtZSA9ICdBdmF0YXIgUGhvdG8nLFxufSkgPT4ge1xuICBjb25zdCBbaW1hZ2VTcmMsIHNldEltYWdlU3JjXSA9IHVzZVN0YXRlPHN0cmluZz4oZXhpc3RpbmdTcmMpO1xuXG4gIGNvbnN0IGNob29zZVBob3RvTGFiZWxSZWYgPSB1c2VSZWY8SFRNTExhYmVsRWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQ/LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgY29uc3QgaW1hZ2VGaWxlbGlzdCA9IHRhcmdldD8uZmlsZXM7XG4gICAgICBjb25zdCBpbWFnZUZpbGUgPSBpbWFnZUZpbGVsaXN0Py5bMF07XG5cbiAgICAgIG9uSW1hZ2VDaGFuZ2VkPy4oaW1hZ2VGaWxlbGlzdCEpO1xuICAgICAgaWYgKGltYWdlRmlsZSkgc2V0SW1hZ2VTcmMoVVJMLmNyZWF0ZU9iamVjdFVSTChpbWFnZUZpbGUpKTtcbiAgICB9LFxuICAgIFtzZXRJbWFnZVNyYywgb25JbWFnZUNoYW5nZWRdXG4gICk7XG5cbiAgLy8gTmVlZCB0byBzaW11bGF0ZSBFbnRlciBhbmQgU3BhY2Uga2V5Ym9hcmQgcHJlc3NlcyB0byBhY3RpdmF0ZSB0aGVcbiAgLy8gZmlsZSB1cGxvYWRlciBoZXJlIHNpbmNlIGl0J3Mgbm90IGEgcmVhbCBidXR0b24uXG4gIGNvbnN0IG9uQ2hvb3NlVXBsb2FkS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpXG4gICAgICAgIGNob29zZVBob3RvTGFiZWxSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgICB9LFxuICAgIFtjaG9vc2VQaG90b0xhYmVsUmVmXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhCb3hcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICB3aWR0aD1cImZpdC1jb250ZW50XCJcbiAgICAgIG1heFdpZHRoPXtweFJlbSgxMjApfVxuICAgICAgYXJpYS1saXZlPVwicG9saXRlXCJcbiAgICA+XG4gICAgICA8U3R5bGVkQXZhdGFyIHNyYz17aW1hZ2VTcmN9IGRpc2FibGVEcm9wc2hhZG93IGFsdD1cIkF2YXRhciBQaG90b1wiIC8+XG4gICAgICA8Q2hvb3NlUGhvdG9MYWJlbCByZWY9e2Nob29zZVBob3RvTGFiZWxSZWZ9IGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiPlxuICAgICAgICA8Q2hvb3NlUGhvdG9TcGFuXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgICAgb25LZXlQcmVzcz17b25DaG9vc2VVcGxvYWRLZXlQcmVzc31cbiAgICAgICAgPlxuICAgICAgICAgIENob29zZSBQaG90b1xuICAgICAgICA8L0Nob29zZVBob3RvU3Bhbj5cbiAgICAgIDwvQ2hvb3NlUGhvdG9MYWJlbD5cbiAgICAgIDxIaWRkZW5JbnB1dFxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiXG4gICAgICAgIGFyaWEtaW52YWxpZD17Qm9vbGVhbihlcnJvcil9XG4gICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgey4uLnJlZ2lzdGVyPy4obmFtZSwge1xuICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgIHZhbGlkYXRlLFxuICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgICAge2Vycm9yICYmIDxTdHlsZWRGb3JtRXJyb3Igcm9sZT1cImFsZXJ0XCI+e2Vycm9yfTwvU3R5bGVkRm9ybUVycm9yPn1cbiAgICA8L0ZsZXhCb3g+XG4gICk7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBob3RvVXBsb2FkID0gKGZpbGVzOiBGaWxlTGlzdCk6IGJvb2xlYW4gfCBzdHJpbmcgPT4ge1xuICBjb25zdCBNQVhfRklMRV9TSVpFID0gNTI0Mjg4MDtcbiAgY29uc3QgTUFYX0ZJTEVfU0laRV9JTl9NQiA9IDU7XG5cbiAgY29uc3QgZmlsZSA9IGZpbGVzPy5pdGVtKDApO1xuICBpZiAoIWZpbGUpIHJldHVybiB0cnVlO1xuXG4gIGNvbnN0IHsgdHlwZSwgc2l6ZSB9ID0gZmlsZTtcbiAgaWYgKCFbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJ10uaW5jbHVkZXModHlwZSkpXG4gICAgcmV0dXJuICdQbGVhc2UgdXBsb2FkIGEganBlZyBvciBwbmcgZmlsZS4nO1xuXG4gIGlmIChzaXplID4gTUFYX0ZJTEVfU0laRSlcbiAgICByZXR1cm4gYFNvcnJ5LCB3ZSBjYW5ub3QgYWNjZXB0IGZpbGVzIGxhcmdlciB0aGFuICR7TUFYX0ZJTEVfU0laRV9JTl9NQn0gTUIuYDtcblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXX0= */"));
var ChoosePhotoLabel = /*#__PURE__*/_styled("label", {
  target: "e1puzyt53",
  label: "ChoosePhotoLabel"
})("padding-top:", theme.spacing[16], ";", theme.breakpoints.sm, "{padding-top:", theme.spacing[24], ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ3FDIiwiZmlsZSI6Ii4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXhCb3gsIEZvcm1FcnJvciwgSW5wdXQgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBweFJlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VGb3JtUmV0dXJuLCBWYWxpZGF0ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uJztcblxudHlwZSBBdmF0YXJDaG9vc2VyUHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICByZWdpc3Rlcj86IFVzZUZvcm1SZXR1cm5bJ3JlZ2lzdGVyJ107XG4gIG9uSW1hZ2VDaGFuZ2VkPzogKGltYWdlRmlsZUxpc3Q6IEZpbGVMaXN0KSA9PiB2b2lkO1xuICB2YWxpZGF0ZT86IFZhbGlkYXRlPEZpbGVMaXN0PiB8IFJlY29yZDxzdHJpbmcsIFZhbGlkYXRlPEZpbGVMaXN0Pj47XG4gIGVycm9yPzogc3RyaW5nO1xufTtcblxuY29uc3QgYmFzZVNpemUgPSA3NTtcbmNvbnN0IHNtQnJlYWtwb2ludFNpemUgPSAxMjA7XG5cbmNvbnN0IFN0eWxlZEF2YXRhciA9IHN0eWxlZChBdmF0YXIpYFxuICBpbWcge1xuICAgIHdpZHRoOiAke3B4UmVtKGJhc2VTaXplKX07XG4gICAgaGVpZ2h0OiAke3B4UmVtKGJhc2VTaXplKX07XG4gIH1cblxuICAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAke3B4UmVtKHNtQnJlYWtwb2ludFNpemUpfTtcbiAgICAgIGhlaWdodDogJHtweFJlbShzbUJyZWFrcG9pbnRTaXplKX07XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBDaG9vc2VQaG90b0xhYmVsID0gc3R5bGVkLmxhYmVsYFxuICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICR7dGhlbWUuYnJlYWtwb2ludHMuc219IHtcbiAgICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzI0XX07XG4gIH1cbmA7XG5cbmNvbnN0IENob29zZVBob3RvU3BhbiA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuaHlwZXJ9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgSGlkZGVuSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuICBkaXNwbGF5OiBub25lO1xuYDtcblxuY29uc3QgU3R5bGVkRm9ybUVycm9yID0gc3R5bGVkKEZvcm1FcnJvcilgXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyQ2hvb3NlcjogUmVhY3QuRkM8QXZhdGFyQ2hvb3NlclByb3BzPiA9ICh7XG4gIHNyYzogZXhpc3RpbmdTcmMsXG4gIG9uSW1hZ2VDaGFuZ2VkLFxuICBlcnJvcixcbiAgcmVnaXN0ZXIsXG4gIHZhbGlkYXRlID0gdmFsaWRhdGVQaG90b1VwbG9hZCxcbiAgbmFtZSA9ICdBdmF0YXIgUGhvdG8nLFxufSkgPT4ge1xuICBjb25zdCBbaW1hZ2VTcmMsIHNldEltYWdlU3JjXSA9IHVzZVN0YXRlPHN0cmluZz4oZXhpc3RpbmdTcmMpO1xuXG4gIGNvbnN0IGNob29zZVBob3RvTGFiZWxSZWYgPSB1c2VSZWY8SFRNTExhYmVsRWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQ/LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgY29uc3QgaW1hZ2VGaWxlbGlzdCA9IHRhcmdldD8uZmlsZXM7XG4gICAgICBjb25zdCBpbWFnZUZpbGUgPSBpbWFnZUZpbGVsaXN0Py5bMF07XG5cbiAgICAgIG9uSW1hZ2VDaGFuZ2VkPy4oaW1hZ2VGaWxlbGlzdCEpO1xuICAgICAgaWYgKGltYWdlRmlsZSkgc2V0SW1hZ2VTcmMoVVJMLmNyZWF0ZU9iamVjdFVSTChpbWFnZUZpbGUpKTtcbiAgICB9LFxuICAgIFtzZXRJbWFnZVNyYywgb25JbWFnZUNoYW5nZWRdXG4gICk7XG5cbiAgLy8gTmVlZCB0byBzaW11bGF0ZSBFbnRlciBhbmQgU3BhY2Uga2V5Ym9hcmQgcHJlc3NlcyB0byBhY3RpdmF0ZSB0aGVcbiAgLy8gZmlsZSB1cGxvYWRlciBoZXJlIHNpbmNlIGl0J3Mgbm90IGEgcmVhbCBidXR0b24uXG4gIGNvbnN0IG9uQ2hvb3NlVXBsb2FkS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpXG4gICAgICAgIGNob29zZVBob3RvTGFiZWxSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgICB9LFxuICAgIFtjaG9vc2VQaG90b0xhYmVsUmVmXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhCb3hcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICB3aWR0aD1cImZpdC1jb250ZW50XCJcbiAgICAgIG1heFdpZHRoPXtweFJlbSgxMjApfVxuICAgICAgYXJpYS1saXZlPVwicG9saXRlXCJcbiAgICA+XG4gICAgICA8U3R5bGVkQXZhdGFyIHNyYz17aW1hZ2VTcmN9IGRpc2FibGVEcm9wc2hhZG93IGFsdD1cIkF2YXRhciBQaG90b1wiIC8+XG4gICAgICA8Q2hvb3NlUGhvdG9MYWJlbCByZWY9e2Nob29zZVBob3RvTGFiZWxSZWZ9IGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiPlxuICAgICAgICA8Q2hvb3NlUGhvdG9TcGFuXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgICAgb25LZXlQcmVzcz17b25DaG9vc2VVcGxvYWRLZXlQcmVzc31cbiAgICAgICAgPlxuICAgICAgICAgIENob29zZSBQaG90b1xuICAgICAgICA8L0Nob29zZVBob3RvU3Bhbj5cbiAgICAgIDwvQ2hvb3NlUGhvdG9MYWJlbD5cbiAgICAgIDxIaWRkZW5JbnB1dFxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiXG4gICAgICAgIGFyaWEtaW52YWxpZD17Qm9vbGVhbihlcnJvcil9XG4gICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgey4uLnJlZ2lzdGVyPy4obmFtZSwge1xuICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgIHZhbGlkYXRlLFxuICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgICAge2Vycm9yICYmIDxTdHlsZWRGb3JtRXJyb3Igcm9sZT1cImFsZXJ0XCI+e2Vycm9yfTwvU3R5bGVkRm9ybUVycm9yPn1cbiAgICA8L0ZsZXhCb3g+XG4gICk7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBob3RvVXBsb2FkID0gKGZpbGVzOiBGaWxlTGlzdCk6IGJvb2xlYW4gfCBzdHJpbmcgPT4ge1xuICBjb25zdCBNQVhfRklMRV9TSVpFID0gNTI0Mjg4MDtcbiAgY29uc3QgTUFYX0ZJTEVfU0laRV9JTl9NQiA9IDU7XG5cbiAgY29uc3QgZmlsZSA9IGZpbGVzPy5pdGVtKDApO1xuICBpZiAoIWZpbGUpIHJldHVybiB0cnVlO1xuXG4gIGNvbnN0IHsgdHlwZSwgc2l6ZSB9ID0gZmlsZTtcbiAgaWYgKCFbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJ10uaW5jbHVkZXModHlwZSkpXG4gICAgcmV0dXJuICdQbGVhc2UgdXBsb2FkIGEganBlZyBvciBwbmcgZmlsZS4nO1xuXG4gIGlmIChzaXplID4gTUFYX0ZJTEVfU0laRSlcbiAgICByZXR1cm4gYFNvcnJ5LCB3ZSBjYW5ub3QgYWNjZXB0IGZpbGVzIGxhcmdlciB0aGFuICR7TUFYX0ZJTEVfU0laRV9JTl9NQn0gTUIuYDtcblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXX0= */"));
var ChoosePhotoSpan = /*#__PURE__*/_styled("span", {
  target: "e1puzyt52",
  label: "ChoosePhotoSpan"
})("color:", theme.colors.hyper, ";font-weight:", theme.fontWeight.title, ";cursor:pointer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ21DIiwiZmlsZSI6Ii4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXhCb3gsIEZvcm1FcnJvciwgSW5wdXQgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBweFJlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VGb3JtUmV0dXJuLCBWYWxpZGF0ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uJztcblxudHlwZSBBdmF0YXJDaG9vc2VyUHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICByZWdpc3Rlcj86IFVzZUZvcm1SZXR1cm5bJ3JlZ2lzdGVyJ107XG4gIG9uSW1hZ2VDaGFuZ2VkPzogKGltYWdlRmlsZUxpc3Q6IEZpbGVMaXN0KSA9PiB2b2lkO1xuICB2YWxpZGF0ZT86IFZhbGlkYXRlPEZpbGVMaXN0PiB8IFJlY29yZDxzdHJpbmcsIFZhbGlkYXRlPEZpbGVMaXN0Pj47XG4gIGVycm9yPzogc3RyaW5nO1xufTtcblxuY29uc3QgYmFzZVNpemUgPSA3NTtcbmNvbnN0IHNtQnJlYWtwb2ludFNpemUgPSAxMjA7XG5cbmNvbnN0IFN0eWxlZEF2YXRhciA9IHN0eWxlZChBdmF0YXIpYFxuICBpbWcge1xuICAgIHdpZHRoOiAke3B4UmVtKGJhc2VTaXplKX07XG4gICAgaGVpZ2h0OiAke3B4UmVtKGJhc2VTaXplKX07XG4gIH1cblxuICAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAke3B4UmVtKHNtQnJlYWtwb2ludFNpemUpfTtcbiAgICAgIGhlaWdodDogJHtweFJlbShzbUJyZWFrcG9pbnRTaXplKX07XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBDaG9vc2VQaG90b0xhYmVsID0gc3R5bGVkLmxhYmVsYFxuICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICR7dGhlbWUuYnJlYWtwb2ludHMuc219IHtcbiAgICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzI0XX07XG4gIH1cbmA7XG5cbmNvbnN0IENob29zZVBob3RvU3BhbiA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuaHlwZXJ9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgSGlkZGVuSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuICBkaXNwbGF5OiBub25lO1xuYDtcblxuY29uc3QgU3R5bGVkRm9ybUVycm9yID0gc3R5bGVkKEZvcm1FcnJvcilgXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyQ2hvb3NlcjogUmVhY3QuRkM8QXZhdGFyQ2hvb3NlclByb3BzPiA9ICh7XG4gIHNyYzogZXhpc3RpbmdTcmMsXG4gIG9uSW1hZ2VDaGFuZ2VkLFxuICBlcnJvcixcbiAgcmVnaXN0ZXIsXG4gIHZhbGlkYXRlID0gdmFsaWRhdGVQaG90b1VwbG9hZCxcbiAgbmFtZSA9ICdBdmF0YXIgUGhvdG8nLFxufSkgPT4ge1xuICBjb25zdCBbaW1hZ2VTcmMsIHNldEltYWdlU3JjXSA9IHVzZVN0YXRlPHN0cmluZz4oZXhpc3RpbmdTcmMpO1xuXG4gIGNvbnN0IGNob29zZVBob3RvTGFiZWxSZWYgPSB1c2VSZWY8SFRNTExhYmVsRWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQ/LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgY29uc3QgaW1hZ2VGaWxlbGlzdCA9IHRhcmdldD8uZmlsZXM7XG4gICAgICBjb25zdCBpbWFnZUZpbGUgPSBpbWFnZUZpbGVsaXN0Py5bMF07XG5cbiAgICAgIG9uSW1hZ2VDaGFuZ2VkPy4oaW1hZ2VGaWxlbGlzdCEpO1xuICAgICAgaWYgKGltYWdlRmlsZSkgc2V0SW1hZ2VTcmMoVVJMLmNyZWF0ZU9iamVjdFVSTChpbWFnZUZpbGUpKTtcbiAgICB9LFxuICAgIFtzZXRJbWFnZVNyYywgb25JbWFnZUNoYW5nZWRdXG4gICk7XG5cbiAgLy8gTmVlZCB0byBzaW11bGF0ZSBFbnRlciBhbmQgU3BhY2Uga2V5Ym9hcmQgcHJlc3NlcyB0byBhY3RpdmF0ZSB0aGVcbiAgLy8gZmlsZSB1cGxvYWRlciBoZXJlIHNpbmNlIGl0J3Mgbm90IGEgcmVhbCBidXR0b24uXG4gIGNvbnN0IG9uQ2hvb3NlVXBsb2FkS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpXG4gICAgICAgIGNob29zZVBob3RvTGFiZWxSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgICB9LFxuICAgIFtjaG9vc2VQaG90b0xhYmVsUmVmXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhCb3hcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICB3aWR0aD1cImZpdC1jb250ZW50XCJcbiAgICAgIG1heFdpZHRoPXtweFJlbSgxMjApfVxuICAgICAgYXJpYS1saXZlPVwicG9saXRlXCJcbiAgICA+XG4gICAgICA8U3R5bGVkQXZhdGFyIHNyYz17aW1hZ2VTcmN9IGRpc2FibGVEcm9wc2hhZG93IGFsdD1cIkF2YXRhciBQaG90b1wiIC8+XG4gICAgICA8Q2hvb3NlUGhvdG9MYWJlbCByZWY9e2Nob29zZVBob3RvTGFiZWxSZWZ9IGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiPlxuICAgICAgICA8Q2hvb3NlUGhvdG9TcGFuXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgICAgb25LZXlQcmVzcz17b25DaG9vc2VVcGxvYWRLZXlQcmVzc31cbiAgICAgICAgPlxuICAgICAgICAgIENob29zZSBQaG90b1xuICAgICAgICA8L0Nob29zZVBob3RvU3Bhbj5cbiAgICAgIDwvQ2hvb3NlUGhvdG9MYWJlbD5cbiAgICAgIDxIaWRkZW5JbnB1dFxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiXG4gICAgICAgIGFyaWEtaW52YWxpZD17Qm9vbGVhbihlcnJvcil9XG4gICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgey4uLnJlZ2lzdGVyPy4obmFtZSwge1xuICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgIHZhbGlkYXRlLFxuICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgICAge2Vycm9yICYmIDxTdHlsZWRGb3JtRXJyb3Igcm9sZT1cImFsZXJ0XCI+e2Vycm9yfTwvU3R5bGVkRm9ybUVycm9yPn1cbiAgICA8L0ZsZXhCb3g+XG4gICk7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBob3RvVXBsb2FkID0gKGZpbGVzOiBGaWxlTGlzdCk6IGJvb2xlYW4gfCBzdHJpbmcgPT4ge1xuICBjb25zdCBNQVhfRklMRV9TSVpFID0gNTI0Mjg4MDtcbiAgY29uc3QgTUFYX0ZJTEVfU0laRV9JTl9NQiA9IDU7XG5cbiAgY29uc3QgZmlsZSA9IGZpbGVzPy5pdGVtKDApO1xuICBpZiAoIWZpbGUpIHJldHVybiB0cnVlO1xuXG4gIGNvbnN0IHsgdHlwZSwgc2l6ZSB9ID0gZmlsZTtcbiAgaWYgKCFbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJ10uaW5jbHVkZXModHlwZSkpXG4gICAgcmV0dXJuICdQbGVhc2UgdXBsb2FkIGEganBlZyBvciBwbmcgZmlsZS4nO1xuXG4gIGlmIChzaXplID4gTUFYX0ZJTEVfU0laRSlcbiAgICByZXR1cm4gYFNvcnJ5LCB3ZSBjYW5ub3QgYWNjZXB0IGZpbGVzIGxhcmdlciB0aGFuICR7TUFYX0ZJTEVfU0laRV9JTl9NQn0gTUIuYDtcblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXX0= */"));
var HiddenInput = /*#__PURE__*/_styled(Input, {
  target: "e1puzyt51",
  label: "HiddenInput"
})(process.env.NODE_ENV === "production" ? {
  name: "eivff4",
  styles: "display:none"
} : {
  name: "eivff4",
  styles: "display:none",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRGlDIiwiZmlsZSI6Ii4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXhCb3gsIEZvcm1FcnJvciwgSW5wdXQgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBweFJlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VGb3JtUmV0dXJuLCBWYWxpZGF0ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uJztcblxudHlwZSBBdmF0YXJDaG9vc2VyUHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICByZWdpc3Rlcj86IFVzZUZvcm1SZXR1cm5bJ3JlZ2lzdGVyJ107XG4gIG9uSW1hZ2VDaGFuZ2VkPzogKGltYWdlRmlsZUxpc3Q6IEZpbGVMaXN0KSA9PiB2b2lkO1xuICB2YWxpZGF0ZT86IFZhbGlkYXRlPEZpbGVMaXN0PiB8IFJlY29yZDxzdHJpbmcsIFZhbGlkYXRlPEZpbGVMaXN0Pj47XG4gIGVycm9yPzogc3RyaW5nO1xufTtcblxuY29uc3QgYmFzZVNpemUgPSA3NTtcbmNvbnN0IHNtQnJlYWtwb2ludFNpemUgPSAxMjA7XG5cbmNvbnN0IFN0eWxlZEF2YXRhciA9IHN0eWxlZChBdmF0YXIpYFxuICBpbWcge1xuICAgIHdpZHRoOiAke3B4UmVtKGJhc2VTaXplKX07XG4gICAgaGVpZ2h0OiAke3B4UmVtKGJhc2VTaXplKX07XG4gIH1cblxuICAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAke3B4UmVtKHNtQnJlYWtwb2ludFNpemUpfTtcbiAgICAgIGhlaWdodDogJHtweFJlbShzbUJyZWFrcG9pbnRTaXplKX07XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBDaG9vc2VQaG90b0xhYmVsID0gc3R5bGVkLmxhYmVsYFxuICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICR7dGhlbWUuYnJlYWtwb2ludHMuc219IHtcbiAgICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzI0XX07XG4gIH1cbmA7XG5cbmNvbnN0IENob29zZVBob3RvU3BhbiA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuaHlwZXJ9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgSGlkZGVuSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuICBkaXNwbGF5OiBub25lO1xuYDtcblxuY29uc3QgU3R5bGVkRm9ybUVycm9yID0gc3R5bGVkKEZvcm1FcnJvcilgXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyQ2hvb3NlcjogUmVhY3QuRkM8QXZhdGFyQ2hvb3NlclByb3BzPiA9ICh7XG4gIHNyYzogZXhpc3RpbmdTcmMsXG4gIG9uSW1hZ2VDaGFuZ2VkLFxuICBlcnJvcixcbiAgcmVnaXN0ZXIsXG4gIHZhbGlkYXRlID0gdmFsaWRhdGVQaG90b1VwbG9hZCxcbiAgbmFtZSA9ICdBdmF0YXIgUGhvdG8nLFxufSkgPT4ge1xuICBjb25zdCBbaW1hZ2VTcmMsIHNldEltYWdlU3JjXSA9IHVzZVN0YXRlPHN0cmluZz4oZXhpc3RpbmdTcmMpO1xuXG4gIGNvbnN0IGNob29zZVBob3RvTGFiZWxSZWYgPSB1c2VSZWY8SFRNTExhYmVsRWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQ/LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgY29uc3QgaW1hZ2VGaWxlbGlzdCA9IHRhcmdldD8uZmlsZXM7XG4gICAgICBjb25zdCBpbWFnZUZpbGUgPSBpbWFnZUZpbGVsaXN0Py5bMF07XG5cbiAgICAgIG9uSW1hZ2VDaGFuZ2VkPy4oaW1hZ2VGaWxlbGlzdCEpO1xuICAgICAgaWYgKGltYWdlRmlsZSkgc2V0SW1hZ2VTcmMoVVJMLmNyZWF0ZU9iamVjdFVSTChpbWFnZUZpbGUpKTtcbiAgICB9LFxuICAgIFtzZXRJbWFnZVNyYywgb25JbWFnZUNoYW5nZWRdXG4gICk7XG5cbiAgLy8gTmVlZCB0byBzaW11bGF0ZSBFbnRlciBhbmQgU3BhY2Uga2V5Ym9hcmQgcHJlc3NlcyB0byBhY3RpdmF0ZSB0aGVcbiAgLy8gZmlsZSB1cGxvYWRlciBoZXJlIHNpbmNlIGl0J3Mgbm90IGEgcmVhbCBidXR0b24uXG4gIGNvbnN0IG9uQ2hvb3NlVXBsb2FkS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpXG4gICAgICAgIGNob29zZVBob3RvTGFiZWxSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgICB9LFxuICAgIFtjaG9vc2VQaG90b0xhYmVsUmVmXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhCb3hcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICB3aWR0aD1cImZpdC1jb250ZW50XCJcbiAgICAgIG1heFdpZHRoPXtweFJlbSgxMjApfVxuICAgICAgYXJpYS1saXZlPVwicG9saXRlXCJcbiAgICA+XG4gICAgICA8U3R5bGVkQXZhdGFyIHNyYz17aW1hZ2VTcmN9IGRpc2FibGVEcm9wc2hhZG93IGFsdD1cIkF2YXRhciBQaG90b1wiIC8+XG4gICAgICA8Q2hvb3NlUGhvdG9MYWJlbCByZWY9e2Nob29zZVBob3RvTGFiZWxSZWZ9IGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiPlxuICAgICAgICA8Q2hvb3NlUGhvdG9TcGFuXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgICAgb25LZXlQcmVzcz17b25DaG9vc2VVcGxvYWRLZXlQcmVzc31cbiAgICAgICAgPlxuICAgICAgICAgIENob29zZSBQaG90b1xuICAgICAgICA8L0Nob29zZVBob3RvU3Bhbj5cbiAgICAgIDwvQ2hvb3NlUGhvdG9MYWJlbD5cbiAgICAgIDxIaWRkZW5JbnB1dFxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiXG4gICAgICAgIGFyaWEtaW52YWxpZD17Qm9vbGVhbihlcnJvcil9XG4gICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgey4uLnJlZ2lzdGVyPy4obmFtZSwge1xuICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgIHZhbGlkYXRlLFxuICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgICAge2Vycm9yICYmIDxTdHlsZWRGb3JtRXJyb3Igcm9sZT1cImFsZXJ0XCI+e2Vycm9yfTwvU3R5bGVkRm9ybUVycm9yPn1cbiAgICA8L0ZsZXhCb3g+XG4gICk7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBob3RvVXBsb2FkID0gKGZpbGVzOiBGaWxlTGlzdCk6IGJvb2xlYW4gfCBzdHJpbmcgPT4ge1xuICBjb25zdCBNQVhfRklMRV9TSVpFID0gNTI0Mjg4MDtcbiAgY29uc3QgTUFYX0ZJTEVfU0laRV9JTl9NQiA9IDU7XG5cbiAgY29uc3QgZmlsZSA9IGZpbGVzPy5pdGVtKDApO1xuICBpZiAoIWZpbGUpIHJldHVybiB0cnVlO1xuXG4gIGNvbnN0IHsgdHlwZSwgc2l6ZSB9ID0gZmlsZTtcbiAgaWYgKCFbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJ10uaW5jbHVkZXModHlwZSkpXG4gICAgcmV0dXJuICdQbGVhc2UgdXBsb2FkIGEganBlZyBvciBwbmcgZmlsZS4nO1xuXG4gIGlmIChzaXplID4gTUFYX0ZJTEVfU0laRSlcbiAgICByZXR1cm4gYFNvcnJ5LCB3ZSBjYW5ub3QgYWNjZXB0IGZpbGVzIGxhcmdlciB0aGFuICR7TUFYX0ZJTEVfU0laRV9JTl9NQn0gTUIuYDtcblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
var StyledFormError = /*#__PURE__*/_styled(FormError, {
  target: "e1puzyt50",
  label: "StyledFormError"
})(process.env.NODE_ENV === "production" ? {
  name: "1l8affw",
  styles: "position:initial;text-align:center"
} : {
  name: "1l8affw",
  styles: "position:initial;text-align:center",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRHlDIiwiZmlsZSI6Ii4uLy4uL3NyYy9BdmF0YXJDaG9vc2VyL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXhCb3gsIEZvcm1FcnJvciwgSW5wdXQgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBweFJlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VGb3JtUmV0dXJuLCBWYWxpZGF0ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5cbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uJztcblxudHlwZSBBdmF0YXJDaG9vc2VyUHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICByZWdpc3Rlcj86IFVzZUZvcm1SZXR1cm5bJ3JlZ2lzdGVyJ107XG4gIG9uSW1hZ2VDaGFuZ2VkPzogKGltYWdlRmlsZUxpc3Q6IEZpbGVMaXN0KSA9PiB2b2lkO1xuICB2YWxpZGF0ZT86IFZhbGlkYXRlPEZpbGVMaXN0PiB8IFJlY29yZDxzdHJpbmcsIFZhbGlkYXRlPEZpbGVMaXN0Pj47XG4gIGVycm9yPzogc3RyaW5nO1xufTtcblxuY29uc3QgYmFzZVNpemUgPSA3NTtcbmNvbnN0IHNtQnJlYWtwb2ludFNpemUgPSAxMjA7XG5cbmNvbnN0IFN0eWxlZEF2YXRhciA9IHN0eWxlZChBdmF0YXIpYFxuICBpbWcge1xuICAgIHdpZHRoOiAke3B4UmVtKGJhc2VTaXplKX07XG4gICAgaGVpZ2h0OiAke3B4UmVtKGJhc2VTaXplKX07XG4gIH1cblxuICAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAke3B4UmVtKHNtQnJlYWtwb2ludFNpemUpfTtcbiAgICAgIGhlaWdodDogJHtweFJlbShzbUJyZWFrcG9pbnRTaXplKX07XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBDaG9vc2VQaG90b0xhYmVsID0gc3R5bGVkLmxhYmVsYFxuICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICR7dGhlbWUuYnJlYWtwb2ludHMuc219IHtcbiAgICBwYWRkaW5nLXRvcDogJHt0aGVtZS5zcGFjaW5nWzI0XX07XG4gIH1cbmA7XG5cbmNvbnN0IENob29zZVBob3RvU3BhbiA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuaHlwZXJ9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgSGlkZGVuSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuICBkaXNwbGF5OiBub25lO1xuYDtcblxuY29uc3QgU3R5bGVkRm9ybUVycm9yID0gc3R5bGVkKEZvcm1FcnJvcilgXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyQ2hvb3NlcjogUmVhY3QuRkM8QXZhdGFyQ2hvb3NlclByb3BzPiA9ICh7XG4gIHNyYzogZXhpc3RpbmdTcmMsXG4gIG9uSW1hZ2VDaGFuZ2VkLFxuICBlcnJvcixcbiAgcmVnaXN0ZXIsXG4gIHZhbGlkYXRlID0gdmFsaWRhdGVQaG90b1VwbG9hZCxcbiAgbmFtZSA9ICdBdmF0YXIgUGhvdG8nLFxufSkgPT4ge1xuICBjb25zdCBbaW1hZ2VTcmMsIHNldEltYWdlU3JjXSA9IHVzZVN0YXRlPHN0cmluZz4oZXhpc3RpbmdTcmMpO1xuXG4gIGNvbnN0IGNob29zZVBob3RvTGFiZWxSZWYgPSB1c2VSZWY8SFRNTExhYmVsRWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQ/LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgY29uc3QgaW1hZ2VGaWxlbGlzdCA9IHRhcmdldD8uZmlsZXM7XG4gICAgICBjb25zdCBpbWFnZUZpbGUgPSBpbWFnZUZpbGVsaXN0Py5bMF07XG5cbiAgICAgIG9uSW1hZ2VDaGFuZ2VkPy4oaW1hZ2VGaWxlbGlzdCEpO1xuICAgICAgaWYgKGltYWdlRmlsZSkgc2V0SW1hZ2VTcmMoVVJMLmNyZWF0ZU9iamVjdFVSTChpbWFnZUZpbGUpKTtcbiAgICB9LFxuICAgIFtzZXRJbWFnZVNyYywgb25JbWFnZUNoYW5nZWRdXG4gICk7XG5cbiAgLy8gTmVlZCB0byBzaW11bGF0ZSBFbnRlciBhbmQgU3BhY2Uga2V5Ym9hcmQgcHJlc3NlcyB0byBhY3RpdmF0ZSB0aGVcbiAgLy8gZmlsZSB1cGxvYWRlciBoZXJlIHNpbmNlIGl0J3Mgbm90IGEgcmVhbCBidXR0b24uXG4gIGNvbnN0IG9uQ2hvb3NlVXBsb2FkS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgfHwgZXZlbnQua2V5ID09PSAnICcpXG4gICAgICAgIGNob29zZVBob3RvTGFiZWxSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgICB9LFxuICAgIFtjaG9vc2VQaG90b0xhYmVsUmVmXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhCb3hcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICB3aWR0aD1cImZpdC1jb250ZW50XCJcbiAgICAgIG1heFdpZHRoPXtweFJlbSgxMjApfVxuICAgICAgYXJpYS1saXZlPVwicG9saXRlXCJcbiAgICA+XG4gICAgICA8U3R5bGVkQXZhdGFyIHNyYz17aW1hZ2VTcmN9IGRpc2FibGVEcm9wc2hhZG93IGFsdD1cIkF2YXRhciBQaG90b1wiIC8+XG4gICAgICA8Q2hvb3NlUGhvdG9MYWJlbCByZWY9e2Nob29zZVBob3RvTGFiZWxSZWZ9IGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiPlxuICAgICAgICA8Q2hvb3NlUGhvdG9TcGFuXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgdGFiSW5kZXg9ezB9XG4gICAgICAgICAgb25LZXlQcmVzcz17b25DaG9vc2VVcGxvYWRLZXlQcmVzc31cbiAgICAgICAgPlxuICAgICAgICAgIENob29zZSBQaG90b1xuICAgICAgICA8L0Nob29zZVBob3RvU3Bhbj5cbiAgICAgIDwvQ2hvb3NlUGhvdG9MYWJlbD5cbiAgICAgIDxIaWRkZW5JbnB1dFxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGh0bWxGb3I9XCJhdmF0YXItY2hvb3NlclwiXG4gICAgICAgIGFyaWEtaW52YWxpZD17Qm9vbGVhbihlcnJvcil9XG4gICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgey4uLnJlZ2lzdGVyPy4obmFtZSwge1xuICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgIHZhbGlkYXRlLFxuICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgICAge2Vycm9yICYmIDxTdHlsZWRGb3JtRXJyb3Igcm9sZT1cImFsZXJ0XCI+e2Vycm9yfTwvU3R5bGVkRm9ybUVycm9yPn1cbiAgICA8L0ZsZXhCb3g+XG4gICk7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBob3RvVXBsb2FkID0gKGZpbGVzOiBGaWxlTGlzdCk6IGJvb2xlYW4gfCBzdHJpbmcgPT4ge1xuICBjb25zdCBNQVhfRklMRV9TSVpFID0gNTI0Mjg4MDtcbiAgY29uc3QgTUFYX0ZJTEVfU0laRV9JTl9NQiA9IDU7XG5cbiAgY29uc3QgZmlsZSA9IGZpbGVzPy5pdGVtKDApO1xuICBpZiAoIWZpbGUpIHJldHVybiB0cnVlO1xuXG4gIGNvbnN0IHsgdHlwZSwgc2l6ZSB9ID0gZmlsZTtcbiAgaWYgKCFbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJ10uaW5jbHVkZXModHlwZSkpXG4gICAgcmV0dXJuICdQbGVhc2UgdXBsb2FkIGEganBlZyBvciBwbmcgZmlsZS4nO1xuXG4gIGlmIChzaXplID4gTUFYX0ZJTEVfU0laRSlcbiAgICByZXR1cm4gYFNvcnJ5LCB3ZSBjYW5ub3QgYWNjZXB0IGZpbGVzIGxhcmdlciB0aGFuICR7TUFYX0ZJTEVfU0laRV9JTl9NQn0gTUIuYDtcblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
export var AvatarChooser = function AvatarChooser(_ref) {
  var existingSrc = _ref.src,
    onImageChanged = _ref.onImageChanged,
    error = _ref.error,
    register = _ref.register,
    _ref$validate = _ref.validate,
    validate = _ref$validate === void 0 ? validatePhotoUpload : _ref$validate,
    _ref$name = _ref.name,
    name = _ref$name === void 0 ? 'Avatar Photo' : _ref$name;
  var _useState = useState(existingSrc),
    _useState2 = _slicedToArray(_useState, 2),
    imageSrc = _useState2[0],
    setImageSrc = _useState2[1];
  var choosePhotoLabelRef = useRef(null);
  var onChange = useCallback(function (event) {
    var target = event === null || event === void 0 ? void 0 : event.target;
    var imageFilelist = target === null || target === void 0 ? void 0 : target.files;
    var imageFile = imageFilelist === null || imageFilelist === void 0 ? void 0 : imageFilelist[0];
    onImageChanged === null || onImageChanged === void 0 ? void 0 : onImageChanged(imageFilelist);
    if (imageFile) setImageSrc(URL.createObjectURL(imageFile));
  }, [setImageSrc, onImageChanged]);

  // Need to simulate Enter and Space keyboard presses to activate the
  // file uploader here since it's not a real button.
  var onChooseUploadKeyPress = useCallback(function (event) {
    var _choosePhotoLabelRef$;
    if (event.key === 'Enter' || event.key === ' ') (_choosePhotoLabelRef$ = choosePhotoLabelRef.current) === null || _choosePhotoLabelRef$ === void 0 ? void 0 : _choosePhotoLabelRef$.click();
  }, [choosePhotoLabelRef]);
  return /*#__PURE__*/_jsxs(FlexBox, {
    alignItems: "center",
    flexDirection: "column",
    justifyContent: "center",
    width: "fit-content",
    maxWidth: pxRem(120),
    "aria-live": "polite",
    children: [/*#__PURE__*/_jsx(StyledAvatar, {
      src: imageSrc,
      disableDropshadow: true,
      alt: "Avatar Photo"
    }), /*#__PURE__*/_jsx(ChoosePhotoLabel, {
      ref: choosePhotoLabelRef,
      htmlFor: "avatar-chooser",
      children: /*#__PURE__*/_jsx(ChoosePhotoSpan, {
        role: "button",
        tabIndex: 0,
        onKeyPress: onChooseUploadKeyPress,
        children: "Choose Photo"
      })
    }), /*#__PURE__*/_jsx(HiddenInput, _objectSpread({
      type: "file",
      htmlFor: "avatar-chooser",
      "aria-invalid": Boolean(error),
      name: name,
      onChange: onChange
    }, register === null || register === void 0 ? void 0 : register(name, {
      onChange: onChange,
      validate: validate,
      required: false
    }))), error && /*#__PURE__*/_jsx(StyledFormError, {
      role: "alert",
      children: error
    })]
  });
};
var validatePhotoUpload = function validatePhotoUpload(files) {
  var MAX_FILE_SIZE = 5242880;
  var MAX_FILE_SIZE_IN_MB = 5;
  var file = files === null || files === void 0 ? void 0 : files.item(0);
  if (!file) return true;
  var type = file.type,
    size = file.size;
  if (!['image/jpeg', 'image/png'].includes(type)) return 'Please upload a jpeg or png file.';
  if (size > MAX_FILE_SIZE) return "Sorry, we cannot accept files larger than ".concat(MAX_FILE_SIZE_IN_MB, " MB.");
  return true;
};