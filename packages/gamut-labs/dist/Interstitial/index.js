import _styled from "@emotion/styled/base";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

import { colors } from '@codecademy/gamut-styles';
import React, { useEffect, useRef, useState } from 'react';

var InterstitialWrapper = _styled("div", {
  target: "e1fgno5x5",
  label: "InterstitialWrapper"
})("align-items:center;background:", colors.navy, ";color:", colors.white, ";display:flex;flex-direction:column;height:100%;justify-content:center;min-height:30rem;text-align:center;width:100%;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCc0MiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */"));

var Content = _styled("div", {
  target: "e1fgno5x4",
  label: "Content"
})(process.env.NODE_ENV === "production" ? {
  name: "1jizsh7",
  styles: "max-width:40rem"
} : {
  name: "1jizsh7",
  styles: "max-width:40rem",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCMEIiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Decoration = _styled("div", {
  target: "e1fgno5x3",
  label: "Decoration"
})(process.env.NODE_ENV === "production" ? {
  name: "rplkoe",
  styles: "font-size:4rem;margin-bottom:1rem"
} : {
  name: "rplkoe",
  styles: "font-size:4rem;margin-bottom:1rem",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDNkIiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Header = _styled("h1", {
  target: "e1fgno5x2",
  label: "Header"
})("color:", colors.white, ";font-size:2.25rem;&:focus{outline:none;}&:focus-visible{box-shadow:0 0 0 3px ", colors.white, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDd0IiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */"));

var Children = _styled("div", {
  target: "e1fgno5x1",
  label: "Children"
})(process.env.NODE_ENV === "production" ? {
  name: "sg48g1",
  styles: "margin:3rem 0"
} : {
  name: "sg48g1",
  styles: "margin:3rem 0",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlEMkIiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Buttons = _styled("div", {
  target: "e1fgno5x0",
  label: "Buttons"
})(process.env.NODE_ENV === "production" ? {
  name: "1uhp76t",
  styles: "display:grid;flex-direction:column;grid-template-columns:1;row-gap:1rem;width:12.5rem"
} : {
  name: "1uhp76t",
  styles: "display:grid;flex-direction:column;grid-template-columns:1;row-gap:1rem;width:12.5rem",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JbnRlcnN0aXRpYWwvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFEMEIiLCJmaWxlIjoiLi4vLi4vc3JjL0ludGVyc3RpdGlhbC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgSW50ZXJzdGl0aWFsUHJvcHMgPSB7XG4gIC8qKiBJZiBwcm92aWRlZCwgdGhlc2UgYnV0dG9ucyB3aWxsIHJlbmRlciBiZWxvdyB0aGUgdGl0bGUgYW5kIGNoaWxkcmVuIGluIGEgY29sdW1uLiAqL1xuICBidXR0b25zPzogUmVhY3QuUmVhY3ROb2RlW107XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgLyoqIEFuIG9wdGlvbmFsIGltYWdlLCBlbW9qaSwgb3IgY29tcG9uZW50IHRoYXQgd2lsbCByZW5kZXIgYWJvdmUgdGhlIHRpdGxlLiAqL1xuICBkZWNvcmF0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xuICAvKiogSWYgZW5hYmxlZCwgZm9jdXMgd2lsbCBiZSBwdWxsZWQgb250byB0aGUgdGl0bGUgb2YgdGhlIGNvbXBvbmVudCB1cG9uIHJlbmRlci4gU2hvdWxkIGJlIGVuYWJsZWQgaWYgSW50ZXJzdGl0aWFsIGlzIG5vdCB0aGUgY2hpbGQgb2YgYSBjb21wb25lbnQgd2l0aCBmb2N1cyBtYW5hZ21lbnQsIHN1Y2ggYXMgTW9kYWxEZXByZWNhdGVkLiAqL1xuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKiBoMSB0aXRsZSBmb3IgdGhlIGludGVyc3RpdGlhbCAqL1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxuY29uc3QgSW50ZXJzdGl0aWFsV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICR7Y29sb3JzLm5hdnl9O1xuICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDQwcmVtO1xuYDtcblxuY29uc3QgRGVjb3JhdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgY29sb3I6ICR7Y29sb3JzLndoaXRlfTtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgM3B4ICR7Y29sb3JzLndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2hpbGRyZW4gPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDNyZW0gMDtcbmA7XG5cbmNvbnN0IEJ1dHRvbnMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBncmlkO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE7XG4gIHJvdy1nYXA6IDFyZW07XG4gIHdpZHRoOiAxMi41cmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEludGVyc3RpdGlhbDogUmVhY3QuRkM8SW50ZXJzdGl0aWFsUHJvcHM+ID0gKHtcbiAgYnV0dG9ucyxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgZGVjb3JhdGlvbixcbiAgZm9jdXMsXG4gIHRpdGxlLFxufSkgPT4ge1xuICBjb25zdCBoZWFkZXJSZWYgPSB1c2VSZWY8SFRNTEhlYWRpbmdFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2ZvY3VzYWJsZSwgc2V0Rm9jdXNhYmxlXSA9IHVzZVN0YXRlKGZvY3VzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaGVhZGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaGVhZGVyUmVmLCBmb2N1c10pO1xuXG4gIHJldHVybiAoXG4gICAgPEludGVyc3RpdGlhbFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPENvbnRlbnQ+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICByZWY9e2hlYWRlclJlZn1cbiAgICAgICAgICB0YWJJbmRleD17Zm9jdXNhYmxlID8gMCA6IC0xfVxuICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0Rm9jdXNhYmxlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkZWNvcmF0aW9uICYmIDxEZWNvcmF0aW9uPntkZWNvcmF0aW9ufTwvRGVjb3JhdGlvbj59XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgPENoaWxkcmVuPntjaGlsZHJlbn08L0NoaWxkcmVuPlxuICAgICAgPC9Db250ZW50PlxuICAgICAge2J1dHRvbnMgJiYgPEJ1dHRvbnM+e2J1dHRvbnN9PC9CdXR0b25zPn1cbiAgICA8L0ludGVyc3RpdGlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

export var Interstitial = function Interstitial(_ref) {
  var buttons = _ref.buttons,
      children = _ref.children,
      className = _ref.className,
      decoration = _ref.decoration,
      focus = _ref.focus,
      title = _ref.title;
  var headerRef = useRef(null);

  var _useState = useState(focus),
      _useState2 = _slicedToArray(_useState, 2),
      focusable = _useState2[0],
      setFocusable = _useState2[1];

  useEffect(function () {
    if (focus) {
      var _headerRef$current;

      (_headerRef$current = headerRef.current) === null || _headerRef$current === void 0 ? void 0 : _headerRef$current.focus();
    }
  }, [headerRef, focus]);
  return /*#__PURE__*/React.createElement(InterstitialWrapper, {
    className: className
  }, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Header, {
    ref: headerRef,
    tabIndex: focusable ? 0 : -1,
    onBlur: function onBlur() {
      return setFocusable(false);
    }
  }, decoration && /*#__PURE__*/React.createElement(Decoration, null, decoration), title), /*#__PURE__*/React.createElement(Children, null, children)), buttons && /*#__PURE__*/React.createElement(Buttons, null, buttons));
};