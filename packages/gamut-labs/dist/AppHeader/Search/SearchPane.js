import _styled from "@emotion/styled/base";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { Box, ContentContainer, FlexBox, FocusTrap, Text, TextButton } from '@codecademy/gamut';
import { SearchIcon, SupportIcon } from '@codecademy/gamut-icons';
import { css } from '@codecademy/gamut-styles';
import { useTheme } from '@emotion/react';
import { camelCase } from 'lodash';
import React, { useEffect, useRef, useState } from 'react';
var searchTerms = ['Data Science', 'Python', 'Web Development', 'HTML', 'Java'];
var Form = Box.withComponent('form', {
  target: "e1tozppo3",
  label: "Form"
});
var Input = Box.withComponent('input', {
  target: "e1tozppo4",
  label: "Input"
});

var QueryContainer = /*#__PURE__*/_styled(ContentContainer, {
  target: "e1tozppo2",
  label: "QueryContainer"
})(css({
  display: 'flex',
  pb: 0,
  pt: 16,
  width: '100%'
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BcHBIZWFkZXIvU2VhcmNoL1NlYXJjaFBhbmUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDdUIiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0FwcEhlYWRlci9TZWFyY2gvU2VhcmNoUGFuZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCb3gsXG4gIENvbnRlbnRDb250YWluZXIsXG4gIEZsZXhCb3gsXG4gIEZvY3VzVHJhcCxcbiAgVGV4dCxcbiAgVGV4dEJ1dHRvbixcbn0gZnJvbSAnQGNvZGVjYWRlbXkvZ2FtdXQnO1xuaW1wb3J0IHsgU2VhcmNoSWNvbiwgU3VwcG9ydEljb24gfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1pY29ucyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjYW1lbENhc2UgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgU2VhcmNoUGFuZVByb3BzID0ge1xuICBvblNlYXJjaDogKHF1ZXJ5OiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uVHJhY2tpbmdDbGljazogKHRhcmdldDogc3RyaW5nKSA9PiB2b2lkO1xuICB0b2dnbGVTZWFyY2g6ICgpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBzZWFyY2hUZXJtcyA9IFtcbiAgJ0RhdGEgU2NpZW5jZScsXG4gICdQeXRob24nLFxuICAnV2ViIERldmVsb3BtZW50JyxcbiAgJ0hUTUwnLFxuICAnSmF2YScsXG5dO1xuXG5jb25zdCBGb3JtID0gQm94LndpdGhDb21wb25lbnQoJ2Zvcm0nKTtcbmNvbnN0IElucHV0ID0gQm94LndpdGhDb21wb25lbnQoJ2lucHV0Jyk7XG5cbmNvbnN0IFF1ZXJ5Q29udGFpbmVyID0gc3R5bGVkKENvbnRlbnRDb250YWluZXIpKFxuICBjc3Moe1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBwYjogMCxcbiAgICBwdDogMTYsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgfSlcbik7XG5cbmNvbnN0IFN1Z2dlc3Rpb25Db250YWluZXIgPSBzdHlsZWQoQ29udGVudENvbnRhaW5lcikoXG4gIGNzcyh7XG4gICAgcGI6IDI0LFxuICAgIHB0OiAxNixcbiAgfSlcbik7XG5cbmNvbnN0IFN0eWxlZElucHV0ID0gc3R5bGVkKElucHV0KShcbiAgY3NzKHtcbiAgICBvdXRsaW5lOiBgbm9uZWAsXG4gIH0pXG4pO1xuXG5leHBvcnQgY29uc3QgU2VhcmNoUGFuZTogUmVhY3QuRkM8U2VhcmNoUGFuZVByb3BzPiA9ICh7XG4gIG9uU2VhcmNoLFxuICBvblRyYWNraW5nQ2xpY2ssXG4gIHRvZ2dsZVNlYXJjaCxcbn0pID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3Qgc2VhcmNoRWxlbWVudFJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGhhbmRsZU91dHNpZGVDbGljayA9IChlOiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQgYXMgRWxlbWVudDtcbiAgICBpZiAoXG4gICAgICBzZWFyY2hFbGVtZW50UmVmLmN1cnJlbnQ/LmNvbnRhaW5zKHRhcmdldCkgfHxcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2hcIl0nKT8uY29udGFpbnModGFyZ2V0KVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRvZ2dsZVNlYXJjaCgpO1xuICB9O1xuXG4gIGNvbnN0IG5hdmlnYXRlVG9TZWFyY2ggPSAoc2VhcmNoVGVybTogc3RyaW5nKSA9PiB7XG4gICAgb25TZWFyY2goc2VhcmNoVGVybSk7XG4gICAgdG9nZ2xlU2VhcmNoKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlOiBSZWFjdC5DaGFuZ2VFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD4gPSAoZXZlbnQpID0+IHtcbiAgICBzZXRWYWx1ZShldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdDogUmVhY3QuRm9ybUV2ZW50SGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbmF2aWdhdGVUb1NlYXJjaCh2YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJveFxuICAgICAgICBhcmlhLWhpZGRlblxuICAgICAgICBiZz1cInNoYWRvdy1ibGFjay1zbGlnaHRcIlxuICAgICAgICBoZWlnaHQ9XCIxMDAlXCJcbiAgICAgICAgb25DbGljaz17dG9nZ2xlU2VhcmNofVxuICAgICAgICBwb3NpdGlvbj1cImZpeGVkXCJcbiAgICAgICAgLy8gV2UgYWRkIDVyZW0gaGVyZSBpbiBjYXNlIHRoZXJlJ3Mgc29tZSBzb3J0IG9mIGJyYW5kZWQgYmFubmVyIGFib3ZlIHNlYXJjaFxuICAgICAgICAvLyBUaGUgc2VhcmNoIGFyZWEgaXMgbXVjaCB0YWxsZXIgdGhhbiA1cmVtIHNvIHRoaXMgaXMgYSBzYWZlIGFtb3VudCBvZiBwYWRkaW5nXG4gICAgICAgIHRvcD17YGNhbGMoJHt0aGVtZS5lbGVtZW50cy5oZWFkZXJIZWlnaHR9ICsgNXJlbSlgfVxuICAgICAgICB3aWR0aD17MX1cbiAgICAgIC8+XG4gICAgICA8Rm9jdXNUcmFwXG4gICAgICAgIG9uQ2xpY2tPdXRzaWRlPXtoYW5kbGVPdXRzaWRlQ2xpY2t9XG4gICAgICAgIG9uRXNjYXBlS2V5PXt0b2dnbGVTZWFyY2h9XG4gICAgICAgIGFsbG93UGFnZUludGVyYWN0aW9uXG4gICAgICA+XG4gICAgICAgIDxCb3hcbiAgICAgICAgICBiZz1cImJhY2tncm91bmRcIlxuICAgICAgICAgIGJvcmRlckNvbG9yQm90dG9tPVwidGV4dFwiXG4gICAgICAgICAgYm9yZGVyQ29sb3JUb3A9XCJzaGFkb3ctc29saWRcIlxuICAgICAgICAgIGJvcmRlclN0eWxlPVwic29saWRcIlxuICAgICAgICAgIGJvcmRlcldpZHRoPVwiMnB4IDAgMXB4XCJcbiAgICAgICAgICBkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2gtZHJvcGRvd25cIlxuICAgICAgICAgIHBvc2l0aW9uPVwiYWJzb2x1dGVcIlxuICAgICAgICAgIHJlZj17c2VhcmNoRWxlbWVudFJlZn1cbiAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICA+XG4gICAgICAgICAgPEJveCBib3JkZXI9XCJub25lXCIgd2lkdGg9XCJhdXRvXCI+XG4gICAgICAgICAgICA8UXVlcnlDb250YWluZXI+XG4gICAgICAgICAgICAgIDxGbGV4Qm94XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcj1cImdyYXktNjAwXCJcbiAgICAgICAgICAgICAgICBib3JkZXJTdHlsZUJvdHRvbT1cInNvbGlkXCJcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aEJvdHRvbT1cIjFweFwiXG4gICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxTZWFyY2hJY29uIGNvbG9yPVwiZ3JheS02MDBcIiBoZWlnaHQ9ezI0fSB3aWR0aD17MjR9IC8+XG4gICAgICAgICAgICAgICAgPEZvcm1cbiAgICAgICAgICAgICAgICAgIGFjdGlvbj1cIi9zZWFyY2hcIlxuICAgICAgICAgICAgICAgICAgaWQ9XCJzZWFyY2gtZm9ybVwiXG4gICAgICAgICAgICAgICAgICBtbD17OH1cbiAgICAgICAgICAgICAgICAgIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9XG4gICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRJbnB1dFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZT17MzR9XG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJib2xkXCJcbiAgICAgICAgICAgICAgICAgICAgaWQ9XCJoZWFkZXItc2VhcmNoLWJhclwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJxdWVyeVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGV2ZW50KSA9PiBldmVudC5zdG9wUHJvcGFnYXRpb24oKX1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggb3VyIGNhdGFsb2dcIlxuICAgICAgICAgICAgICAgICAgICByZWY9e2lucHV0UmVmfVxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwic2VhcmNoXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDwvUXVlcnlDb250YWluZXI+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPFN1Z2dlc3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICA8VGV4dCBhcz1cImgzXCIgZm9udFNpemU9ezIwfSBteT17MTZ9PlxuICAgICAgICAgICAgICBQb3B1bGFyIFNlYXJjaGVzXG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8RmxleEJveCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7c2VhcmNoVGVybXMubWFwKChzZWFyY2hUZXJtKSA9PiAoXG4gICAgICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICByb2xlPVwibGlua1wiXG4gICAgICAgICAgICAgICAgICAgIG1yPXsxNn1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtzZWFyY2hUZXJtfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUb1NlYXJjaChzZWFyY2hUZXJtKTtcbiAgICAgICAgICAgICAgICAgICAgICBvblRyYWNraW5nQ2xpY2soXG4gICAgICAgICAgICAgICAgICAgICAgICBgcG9wdWxhcl9zZWFyY2hfdGVybV8ke2NhbWVsQ2FzZShzZWFyY2hUZXJtKX1gXG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3NlYXJjaFRlcm19XG4gICAgICAgICAgICAgICAgICA8L1RleHRCdXR0b24+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgIGhyZWY9XCIvaGVscFwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25UcmFja2luZ0NsaWNrKCdoZWxwX2NlbnRlcicpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFN1cHBvcnRJY29uIG1yPXs4fSBzaXplPXsyMH0gLz4gSGVscCBDZW50ZXJcbiAgICAgICAgICAgICAgPC9UZXh0QnV0dG9uPlxuICAgICAgICAgICAgPC9GbGV4Qm94PlxuICAgICAgICAgIDwvU3VnZ2VzdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0ZvY3VzVHJhcD5cbiAgICA8Lz5cbiAgKTtcbn07XG4iXX0= */");

var SuggestionContainer = /*#__PURE__*/_styled(ContentContainer, {
  target: "e1tozppo1",
  label: "SuggestionContainer"
})(css({
  pb: 24,
  pt: 16
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BcHBIZWFkZXIvU2VhcmNoL1NlYXJjaFBhbmUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDNEIiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0FwcEhlYWRlci9TZWFyY2gvU2VhcmNoUGFuZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCb3gsXG4gIENvbnRlbnRDb250YWluZXIsXG4gIEZsZXhCb3gsXG4gIEZvY3VzVHJhcCxcbiAgVGV4dCxcbiAgVGV4dEJ1dHRvbixcbn0gZnJvbSAnQGNvZGVjYWRlbXkvZ2FtdXQnO1xuaW1wb3J0IHsgU2VhcmNoSWNvbiwgU3VwcG9ydEljb24gfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1pY29ucyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjYW1lbENhc2UgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgU2VhcmNoUGFuZVByb3BzID0ge1xuICBvblNlYXJjaDogKHF1ZXJ5OiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uVHJhY2tpbmdDbGljazogKHRhcmdldDogc3RyaW5nKSA9PiB2b2lkO1xuICB0b2dnbGVTZWFyY2g6ICgpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBzZWFyY2hUZXJtcyA9IFtcbiAgJ0RhdGEgU2NpZW5jZScsXG4gICdQeXRob24nLFxuICAnV2ViIERldmVsb3BtZW50JyxcbiAgJ0hUTUwnLFxuICAnSmF2YScsXG5dO1xuXG5jb25zdCBGb3JtID0gQm94LndpdGhDb21wb25lbnQoJ2Zvcm0nKTtcbmNvbnN0IElucHV0ID0gQm94LndpdGhDb21wb25lbnQoJ2lucHV0Jyk7XG5cbmNvbnN0IFF1ZXJ5Q29udGFpbmVyID0gc3R5bGVkKENvbnRlbnRDb250YWluZXIpKFxuICBjc3Moe1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBwYjogMCxcbiAgICBwdDogMTYsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgfSlcbik7XG5cbmNvbnN0IFN1Z2dlc3Rpb25Db250YWluZXIgPSBzdHlsZWQoQ29udGVudENvbnRhaW5lcikoXG4gIGNzcyh7XG4gICAgcGI6IDI0LFxuICAgIHB0OiAxNixcbiAgfSlcbik7XG5cbmNvbnN0IFN0eWxlZElucHV0ID0gc3R5bGVkKElucHV0KShcbiAgY3NzKHtcbiAgICBvdXRsaW5lOiBgbm9uZWAsXG4gIH0pXG4pO1xuXG5leHBvcnQgY29uc3QgU2VhcmNoUGFuZTogUmVhY3QuRkM8U2VhcmNoUGFuZVByb3BzPiA9ICh7XG4gIG9uU2VhcmNoLFxuICBvblRyYWNraW5nQ2xpY2ssXG4gIHRvZ2dsZVNlYXJjaCxcbn0pID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3Qgc2VhcmNoRWxlbWVudFJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGhhbmRsZU91dHNpZGVDbGljayA9IChlOiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQgYXMgRWxlbWVudDtcbiAgICBpZiAoXG4gICAgICBzZWFyY2hFbGVtZW50UmVmLmN1cnJlbnQ/LmNvbnRhaW5zKHRhcmdldCkgfHxcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2hcIl0nKT8uY29udGFpbnModGFyZ2V0KVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRvZ2dsZVNlYXJjaCgpO1xuICB9O1xuXG4gIGNvbnN0IG5hdmlnYXRlVG9TZWFyY2ggPSAoc2VhcmNoVGVybTogc3RyaW5nKSA9PiB7XG4gICAgb25TZWFyY2goc2VhcmNoVGVybSk7XG4gICAgdG9nZ2xlU2VhcmNoKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlOiBSZWFjdC5DaGFuZ2VFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD4gPSAoZXZlbnQpID0+IHtcbiAgICBzZXRWYWx1ZShldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdDogUmVhY3QuRm9ybUV2ZW50SGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbmF2aWdhdGVUb1NlYXJjaCh2YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJveFxuICAgICAgICBhcmlhLWhpZGRlblxuICAgICAgICBiZz1cInNoYWRvdy1ibGFjay1zbGlnaHRcIlxuICAgICAgICBoZWlnaHQ9XCIxMDAlXCJcbiAgICAgICAgb25DbGljaz17dG9nZ2xlU2VhcmNofVxuICAgICAgICBwb3NpdGlvbj1cImZpeGVkXCJcbiAgICAgICAgLy8gV2UgYWRkIDVyZW0gaGVyZSBpbiBjYXNlIHRoZXJlJ3Mgc29tZSBzb3J0IG9mIGJyYW5kZWQgYmFubmVyIGFib3ZlIHNlYXJjaFxuICAgICAgICAvLyBUaGUgc2VhcmNoIGFyZWEgaXMgbXVjaCB0YWxsZXIgdGhhbiA1cmVtIHNvIHRoaXMgaXMgYSBzYWZlIGFtb3VudCBvZiBwYWRkaW5nXG4gICAgICAgIHRvcD17YGNhbGMoJHt0aGVtZS5lbGVtZW50cy5oZWFkZXJIZWlnaHR9ICsgNXJlbSlgfVxuICAgICAgICB3aWR0aD17MX1cbiAgICAgIC8+XG4gICAgICA8Rm9jdXNUcmFwXG4gICAgICAgIG9uQ2xpY2tPdXRzaWRlPXtoYW5kbGVPdXRzaWRlQ2xpY2t9XG4gICAgICAgIG9uRXNjYXBlS2V5PXt0b2dnbGVTZWFyY2h9XG4gICAgICAgIGFsbG93UGFnZUludGVyYWN0aW9uXG4gICAgICA+XG4gICAgICAgIDxCb3hcbiAgICAgICAgICBiZz1cImJhY2tncm91bmRcIlxuICAgICAgICAgIGJvcmRlckNvbG9yQm90dG9tPVwidGV4dFwiXG4gICAgICAgICAgYm9yZGVyQ29sb3JUb3A9XCJzaGFkb3ctc29saWRcIlxuICAgICAgICAgIGJvcmRlclN0eWxlPVwic29saWRcIlxuICAgICAgICAgIGJvcmRlcldpZHRoPVwiMnB4IDAgMXB4XCJcbiAgICAgICAgICBkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2gtZHJvcGRvd25cIlxuICAgICAgICAgIHBvc2l0aW9uPVwiYWJzb2x1dGVcIlxuICAgICAgICAgIHJlZj17c2VhcmNoRWxlbWVudFJlZn1cbiAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICA+XG4gICAgICAgICAgPEJveCBib3JkZXI9XCJub25lXCIgd2lkdGg9XCJhdXRvXCI+XG4gICAgICAgICAgICA8UXVlcnlDb250YWluZXI+XG4gICAgICAgICAgICAgIDxGbGV4Qm94XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcj1cImdyYXktNjAwXCJcbiAgICAgICAgICAgICAgICBib3JkZXJTdHlsZUJvdHRvbT1cInNvbGlkXCJcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aEJvdHRvbT1cIjFweFwiXG4gICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxTZWFyY2hJY29uIGNvbG9yPVwiZ3JheS02MDBcIiBoZWlnaHQ9ezI0fSB3aWR0aD17MjR9IC8+XG4gICAgICAgICAgICAgICAgPEZvcm1cbiAgICAgICAgICAgICAgICAgIGFjdGlvbj1cIi9zZWFyY2hcIlxuICAgICAgICAgICAgICAgICAgaWQ9XCJzZWFyY2gtZm9ybVwiXG4gICAgICAgICAgICAgICAgICBtbD17OH1cbiAgICAgICAgICAgICAgICAgIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9XG4gICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRJbnB1dFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZT17MzR9XG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJib2xkXCJcbiAgICAgICAgICAgICAgICAgICAgaWQ9XCJoZWFkZXItc2VhcmNoLWJhclwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJxdWVyeVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGV2ZW50KSA9PiBldmVudC5zdG9wUHJvcGFnYXRpb24oKX1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggb3VyIGNhdGFsb2dcIlxuICAgICAgICAgICAgICAgICAgICByZWY9e2lucHV0UmVmfVxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwic2VhcmNoXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDwvUXVlcnlDb250YWluZXI+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPFN1Z2dlc3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICA8VGV4dCBhcz1cImgzXCIgZm9udFNpemU9ezIwfSBteT17MTZ9PlxuICAgICAgICAgICAgICBQb3B1bGFyIFNlYXJjaGVzXG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8RmxleEJveCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7c2VhcmNoVGVybXMubWFwKChzZWFyY2hUZXJtKSA9PiAoXG4gICAgICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICByb2xlPVwibGlua1wiXG4gICAgICAgICAgICAgICAgICAgIG1yPXsxNn1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtzZWFyY2hUZXJtfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUb1NlYXJjaChzZWFyY2hUZXJtKTtcbiAgICAgICAgICAgICAgICAgICAgICBvblRyYWNraW5nQ2xpY2soXG4gICAgICAgICAgICAgICAgICAgICAgICBgcG9wdWxhcl9zZWFyY2hfdGVybV8ke2NhbWVsQ2FzZShzZWFyY2hUZXJtKX1gXG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3NlYXJjaFRlcm19XG4gICAgICAgICAgICAgICAgICA8L1RleHRCdXR0b24+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgIGhyZWY9XCIvaGVscFwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25UcmFja2luZ0NsaWNrKCdoZWxwX2NlbnRlcicpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFN1cHBvcnRJY29uIG1yPXs4fSBzaXplPXsyMH0gLz4gSGVscCBDZW50ZXJcbiAgICAgICAgICAgICAgPC9UZXh0QnV0dG9uPlxuICAgICAgICAgICAgPC9GbGV4Qm94PlxuICAgICAgICAgIDwvU3VnZ2VzdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0ZvY3VzVHJhcD5cbiAgICA8Lz5cbiAgKTtcbn07XG4iXX0= */");

var StyledInput = /*#__PURE__*/_styled(Input, {
  target: "e1tozppo0",
  label: "StyledInput"
})(css({
  outline: "none"
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BcHBIZWFkZXIvU2VhcmNoL1NlYXJjaFBhbmUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEb0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0FwcEhlYWRlci9TZWFyY2gvU2VhcmNoUGFuZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCb3gsXG4gIENvbnRlbnRDb250YWluZXIsXG4gIEZsZXhCb3gsXG4gIEZvY3VzVHJhcCxcbiAgVGV4dCxcbiAgVGV4dEJ1dHRvbixcbn0gZnJvbSAnQGNvZGVjYWRlbXkvZ2FtdXQnO1xuaW1wb3J0IHsgU2VhcmNoSWNvbiwgU3VwcG9ydEljb24gfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1pY29ucyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjYW1lbENhc2UgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgU2VhcmNoUGFuZVByb3BzID0ge1xuICBvblNlYXJjaDogKHF1ZXJ5OiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uVHJhY2tpbmdDbGljazogKHRhcmdldDogc3RyaW5nKSA9PiB2b2lkO1xuICB0b2dnbGVTZWFyY2g6ICgpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBzZWFyY2hUZXJtcyA9IFtcbiAgJ0RhdGEgU2NpZW5jZScsXG4gICdQeXRob24nLFxuICAnV2ViIERldmVsb3BtZW50JyxcbiAgJ0hUTUwnLFxuICAnSmF2YScsXG5dO1xuXG5jb25zdCBGb3JtID0gQm94LndpdGhDb21wb25lbnQoJ2Zvcm0nKTtcbmNvbnN0IElucHV0ID0gQm94LndpdGhDb21wb25lbnQoJ2lucHV0Jyk7XG5cbmNvbnN0IFF1ZXJ5Q29udGFpbmVyID0gc3R5bGVkKENvbnRlbnRDb250YWluZXIpKFxuICBjc3Moe1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBwYjogMCxcbiAgICBwdDogMTYsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgfSlcbik7XG5cbmNvbnN0IFN1Z2dlc3Rpb25Db250YWluZXIgPSBzdHlsZWQoQ29udGVudENvbnRhaW5lcikoXG4gIGNzcyh7XG4gICAgcGI6IDI0LFxuICAgIHB0OiAxNixcbiAgfSlcbik7XG5cbmNvbnN0IFN0eWxlZElucHV0ID0gc3R5bGVkKElucHV0KShcbiAgY3NzKHtcbiAgICBvdXRsaW5lOiBgbm9uZWAsXG4gIH0pXG4pO1xuXG5leHBvcnQgY29uc3QgU2VhcmNoUGFuZTogUmVhY3QuRkM8U2VhcmNoUGFuZVByb3BzPiA9ICh7XG4gIG9uU2VhcmNoLFxuICBvblRyYWNraW5nQ2xpY2ssXG4gIHRvZ2dsZVNlYXJjaCxcbn0pID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3Qgc2VhcmNoRWxlbWVudFJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGhhbmRsZU91dHNpZGVDbGljayA9IChlOiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQgYXMgRWxlbWVudDtcbiAgICBpZiAoXG4gICAgICBzZWFyY2hFbGVtZW50UmVmLmN1cnJlbnQ/LmNvbnRhaW5zKHRhcmdldCkgfHxcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2hcIl0nKT8uY29udGFpbnModGFyZ2V0KVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRvZ2dsZVNlYXJjaCgpO1xuICB9O1xuXG4gIGNvbnN0IG5hdmlnYXRlVG9TZWFyY2ggPSAoc2VhcmNoVGVybTogc3RyaW5nKSA9PiB7XG4gICAgb25TZWFyY2goc2VhcmNoVGVybSk7XG4gICAgdG9nZ2xlU2VhcmNoKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlOiBSZWFjdC5DaGFuZ2VFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD4gPSAoZXZlbnQpID0+IHtcbiAgICBzZXRWYWx1ZShldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdDogUmVhY3QuRm9ybUV2ZW50SGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbmF2aWdhdGVUb1NlYXJjaCh2YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJveFxuICAgICAgICBhcmlhLWhpZGRlblxuICAgICAgICBiZz1cInNoYWRvdy1ibGFjay1zbGlnaHRcIlxuICAgICAgICBoZWlnaHQ9XCIxMDAlXCJcbiAgICAgICAgb25DbGljaz17dG9nZ2xlU2VhcmNofVxuICAgICAgICBwb3NpdGlvbj1cImZpeGVkXCJcbiAgICAgICAgLy8gV2UgYWRkIDVyZW0gaGVyZSBpbiBjYXNlIHRoZXJlJ3Mgc29tZSBzb3J0IG9mIGJyYW5kZWQgYmFubmVyIGFib3ZlIHNlYXJjaFxuICAgICAgICAvLyBUaGUgc2VhcmNoIGFyZWEgaXMgbXVjaCB0YWxsZXIgdGhhbiA1cmVtIHNvIHRoaXMgaXMgYSBzYWZlIGFtb3VudCBvZiBwYWRkaW5nXG4gICAgICAgIHRvcD17YGNhbGMoJHt0aGVtZS5lbGVtZW50cy5oZWFkZXJIZWlnaHR9ICsgNXJlbSlgfVxuICAgICAgICB3aWR0aD17MX1cbiAgICAgIC8+XG4gICAgICA8Rm9jdXNUcmFwXG4gICAgICAgIG9uQ2xpY2tPdXRzaWRlPXtoYW5kbGVPdXRzaWRlQ2xpY2t9XG4gICAgICAgIG9uRXNjYXBlS2V5PXt0b2dnbGVTZWFyY2h9XG4gICAgICAgIGFsbG93UGFnZUludGVyYWN0aW9uXG4gICAgICA+XG4gICAgICAgIDxCb3hcbiAgICAgICAgICBiZz1cImJhY2tncm91bmRcIlxuICAgICAgICAgIGJvcmRlckNvbG9yQm90dG9tPVwidGV4dFwiXG4gICAgICAgICAgYm9yZGVyQ29sb3JUb3A9XCJzaGFkb3ctc29saWRcIlxuICAgICAgICAgIGJvcmRlclN0eWxlPVwic29saWRcIlxuICAgICAgICAgIGJvcmRlcldpZHRoPVwiMnB4IDAgMXB4XCJcbiAgICAgICAgICBkYXRhLXRlc3RpZD1cImhlYWRlci1zZWFyY2gtZHJvcGRvd25cIlxuICAgICAgICAgIHBvc2l0aW9uPVwiYWJzb2x1dGVcIlxuICAgICAgICAgIHJlZj17c2VhcmNoRWxlbWVudFJlZn1cbiAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICA+XG4gICAgICAgICAgPEJveCBib3JkZXI9XCJub25lXCIgd2lkdGg9XCJhdXRvXCI+XG4gICAgICAgICAgICA8UXVlcnlDb250YWluZXI+XG4gICAgICAgICAgICAgIDxGbGV4Qm94XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcj1cImdyYXktNjAwXCJcbiAgICAgICAgICAgICAgICBib3JkZXJTdHlsZUJvdHRvbT1cInNvbGlkXCJcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aEJvdHRvbT1cIjFweFwiXG4gICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxTZWFyY2hJY29uIGNvbG9yPVwiZ3JheS02MDBcIiBoZWlnaHQ9ezI0fSB3aWR0aD17MjR9IC8+XG4gICAgICAgICAgICAgICAgPEZvcm1cbiAgICAgICAgICAgICAgICAgIGFjdGlvbj1cIi9zZWFyY2hcIlxuICAgICAgICAgICAgICAgICAgaWQ9XCJzZWFyY2gtZm9ybVwiXG4gICAgICAgICAgICAgICAgICBtbD17OH1cbiAgICAgICAgICAgICAgICAgIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9XG4gICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRJbnB1dFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZT17MzR9XG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJib2xkXCJcbiAgICAgICAgICAgICAgICAgICAgaWQ9XCJoZWFkZXItc2VhcmNoLWJhclwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJxdWVyeVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGV2ZW50KSA9PiBldmVudC5zdG9wUHJvcGFnYXRpb24oKX1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggb3VyIGNhdGFsb2dcIlxuICAgICAgICAgICAgICAgICAgICByZWY9e2lucHV0UmVmfVxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwic2VhcmNoXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDwvUXVlcnlDb250YWluZXI+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPFN1Z2dlc3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICA8VGV4dCBhcz1cImgzXCIgZm9udFNpemU9ezIwfSBteT17MTZ9PlxuICAgICAgICAgICAgICBQb3B1bGFyIFNlYXJjaGVzXG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8RmxleEJveCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7c2VhcmNoVGVybXMubWFwKChzZWFyY2hUZXJtKSA9PiAoXG4gICAgICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICByb2xlPVwibGlua1wiXG4gICAgICAgICAgICAgICAgICAgIG1yPXsxNn1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtzZWFyY2hUZXJtfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUb1NlYXJjaChzZWFyY2hUZXJtKTtcbiAgICAgICAgICAgICAgICAgICAgICBvblRyYWNraW5nQ2xpY2soXG4gICAgICAgICAgICAgICAgICAgICAgICBgcG9wdWxhcl9zZWFyY2hfdGVybV8ke2NhbWVsQ2FzZShzZWFyY2hUZXJtKX1gXG4gICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3NlYXJjaFRlcm19XG4gICAgICAgICAgICAgICAgICA8L1RleHRCdXR0b24+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8VGV4dEJ1dHRvblxuICAgICAgICAgICAgICAgIGhyZWY9XCIvaGVscFwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25UcmFja2luZ0NsaWNrKCdoZWxwX2NlbnRlcicpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFN1cHBvcnRJY29uIG1yPXs4fSBzaXplPXsyMH0gLz4gSGVscCBDZW50ZXJcbiAgICAgICAgICAgICAgPC9UZXh0QnV0dG9uPlxuICAgICAgICAgICAgPC9GbGV4Qm94PlxuICAgICAgICAgIDwvU3VnZ2VzdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0ZvY3VzVHJhcD5cbiAgICA8Lz5cbiAgKTtcbn07XG4iXX0= */");

export var SearchPane = function SearchPane(_ref) {
  var onSearch = _ref.onSearch,
      onTrackingClick = _ref.onTrackingClick,
      toggleSearch = _ref.toggleSearch;
  var theme = useTheme();

  var _useState = useState(''),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var searchElementRef = useRef(null);
  var inputRef = useRef(null);

  var handleOutsideClick = function handleOutsideClick(e) {
    var _searchElementRef$cur, _document$querySelect;

    var target = e.target;

    if ((_searchElementRef$cur = searchElementRef.current) !== null && _searchElementRef$cur !== void 0 && _searchElementRef$cur.contains(target) || (_document$querySelect = document.querySelector('[data-testid="header-search"]')) !== null && _document$querySelect !== void 0 && _document$querySelect.contains(target)) {
      return;
    }

    toggleSearch();
  };

  var navigateToSearch = function navigateToSearch(searchTerm) {
    onSearch(searchTerm);
    toggleSearch();
  };

  var handleChange = function handleChange(event) {
    setValue(event.target.value);
  };

  var handleSubmit = function handleSubmit(event) {
    event.preventDefault();
    navigateToSearch(value);
  };

  useEffect(function () {
    var _inputRef$current;

    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    "aria-hidden": true,
    bg: "shadow-black-slight",
    height: "100%",
    onClick: toggleSearch,
    position: "fixed" // We add 5rem here in case there's some sort of branded banner above search
    // The search area is much taller than 5rem so this is a safe amount of padding
    ,
    top: "calc(".concat(theme.elements.headerHeight, " + 5rem)"),
    width: 1
  }), /*#__PURE__*/React.createElement(FocusTrap, {
    onClickOutside: handleOutsideClick,
    onEscapeKey: toggleSearch,
    allowPageInteraction: true
  }, /*#__PURE__*/React.createElement(Box, {
    bg: "background",
    borderColorBottom: "text",
    borderColorTop: "shadow-solid",
    borderStyle: "solid",
    borderWidth: "2px 0 1px",
    "data-testid": "header-search-dropdown",
    position: "absolute",
    ref: searchElementRef,
    width: "100%"
  }, /*#__PURE__*/React.createElement(Box, {
    border: "none",
    width: "auto"
  }, /*#__PURE__*/React.createElement(QueryContainer, null, /*#__PURE__*/React.createElement(FlexBox, {
    alignItems: "baseline",
    borderColor: "gray-600",
    borderStyleBottom: "solid",
    borderWidthBottom: "1px",
    width: "100%"
  }, /*#__PURE__*/React.createElement(SearchIcon, {
    color: "gray-600",
    height: 24,
    width: 24
  }), /*#__PURE__*/React.createElement(Form, {
    action: "/search",
    id: "search-form",
    ml: 8,
    onSubmit: handleSubmit,
    width: "100%"
  }, /*#__PURE__*/React.createElement(StyledInput, {
    background: "none",
    border: "none",
    color: "text",
    fontSize: 34,
    fontWeight: "bold",
    id: "header-search-bar",
    name: "query",
    onChange: handleChange,
    onKeyDown: function onKeyDown(event) {
      return event.stopPropagation();
    },
    placeholder: "Search our catalog",
    ref: inputRef,
    type: "search",
    value: value,
    width: "100%"
  }))))), /*#__PURE__*/React.createElement(SuggestionContainer, null, /*#__PURE__*/React.createElement(Text, {
    as: "h3",
    fontSize: 20,
    my: 16
  }, "Popular Searches"), /*#__PURE__*/React.createElement(FlexBox, {
    justifyContent: "space-between"
  }, /*#__PURE__*/React.createElement("div", null, searchTerms.map(function (searchTerm) {
    return /*#__PURE__*/React.createElement(TextButton, {
      role: "link",
      mr: 16,
      key: searchTerm,
      onClick: function onClick() {
        navigateToSearch(searchTerm);
        onTrackingClick("popular_search_term_".concat(camelCase(searchTerm)));
      }
    }, searchTerm);
  })), /*#__PURE__*/React.createElement(TextButton, {
    href: "/help",
    onClick: function onClick() {
      return onTrackingClick('help_center');
    }
  }, /*#__PURE__*/React.createElement(SupportIcon, {
    mr: 8,
    size: 20
  }), " Help Center"))))));
};