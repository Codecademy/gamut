{
  "Component Doc": {
    "prefix": "component-doc",
    "body": [
      "import { Canvas, Controls, Meta } from '@storybook/blocks';",
      "",
      "import { ComponentHeader } from '~styleguide/blocks';",
      "",
      "import * as $1Stories from './$1.stories';",
      "",
      "export const parameters = {",
      "  subtitle: `Template component`,",
      "  design: {",
      "    type: 'figma',",
      "    url: 'https: //www.figma.com/file/XXX',",
      "  },",
      "  status: 'current',",
      "  source: {",
      "    repo: '$2',",
      "    // this is easy to find by right clicking on the file in VSCode and clicking 'Copy Remote File Url From...' and the selecting 'main' or amending the url path below like so: https://github.com/Codecademy/gamut/blob/main/packages/${2}/src/file/location",
      "    githubLink:",
      "      'https: //github.com/Codecademy/gamut/blob/main/packages/gamut/src/Logo',",
      "  },",
      "};",
      "",
      "<Meta of={$1Stories}/>",
      "",
      "<ComponentHeader {...parameters} />",
      "",
      "## Usage",
      "",
      "Use $1 to [what it should be used for]",
      "",
      "### Best practices:",
      "",
      "- [recommendation / best practice for implementation]",
      "- [recommendation / best practice for implementation]",
      "",
      "When NOT to use",
      "",
      "- [use case]- for [describe the use case], use the [similar component] component.",
      "- [use case]- for [describe the use case], use the [similar component] component",
      "",
      "## Anatomy",
      "",
      "[Insert image exported from Figma]",
      "",
      "1. [Element name]",
      "- [description including available options and ux writing if relevant]",
      "",
      "## Variants",
      "",
      "### [Variant 1 name]",
      "",
      "Use the [variant 1 name] to [what it should be used for]",
      "",
      "<Canvas of={$1Stories.Default} />",
      "",
      "## Playground",
      "",
      "If you are using a story named 'Default', you can forgo the `of` prop.",
      "",
      "<Canvas sourceState='shown' of={$1Stories.Default} />",
      "",
      "<Controls />",
      "",
      "## Accessibility considerations",
      "",
      "- [Accessibility guidance]",
      "",
      "## UX writing",
      "",
      "- [content]",
      " - [guidance]",
      " - [guidance]"
    ],
    "description": "Default Component Doc Structure."
  },
  "Table of Contents Story": {
    "prefix": "toc-story",
    "body": [
      "import { Meta } from '@storybook/blocks';",
      "import { AboutHeader, TableOfContents } from '~styleguide/blocks';",
      "",
      "export const parameters = {",
      "  id: '$1',",
      "  title: '$1/About',",
      "  subtitle: '$2',",
      "  status: 'current'",
      "}",
      "",
      "<Meta title='$1/About' />",
      "",
      "<AboutHeader {...parameters} />",
      "",
      "Provide a general overview of what this collection of components should do or be used for.",
      "",
      "<TableOfContents",
      " links={[",
      "   {",
      "     id: '$1/Category',",
      "     subtitle: 'Short description',",
      "     title: 'Category',",
      "     status: 'current'",
      "   }",
      " ]}",
      "/>"
    ],
    "description": "TOC Story Structure."
  },
  "Component Story": {
    "prefix": "component-story",
    "body": [
      "import { $1 } from '@codecademy/gamut';",
      "import type { Meta, StoryObj } from '@storybook/react';",
      "",
      "const meta: Meta<typeof $1> = {",
      " component: $1,",
      " args: {},",
      "};",
      "",
      "export default meta;",
      "type Story = StoryObj<typeof $1>;",
      "",
      "export const Default: Story = {",
      " args: {",
      "   children: 'Test'",
      " },",
      "};",
      "",
      "export const Secondary: Story = {",
      " args: {",
      "   children: 'Test again',",
      "   variant: 'secondary'",
      " }",
      "};"
    ],
    "description": "Default TSX story structure."
  }
}
