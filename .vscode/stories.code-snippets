{
  "Component Story": {
    "prefix": "component-story",
    "body": [
      "import { Canvas, Controls, Meta } from '@storybook/blocks';",
      "",
      "import { ComponentHeader } from '~styleguide/blocks';",
      "",
      "import * as {$1}Stories from './{$1}.stories';",
      "",
      "export const parameters = {",
      "subtitle: `Template component`,",
      "design: {",
      "type: 'figma',",
      "url: 'https: //www.figma.com/file/XXX',",
      " },",
      "status: 'current',",
      "source: {",
      "repo: '$2',",
      "// this is easy to find by right clicking on the file in VSCode and clicking 'Copy Remote File Url From...' and the selecting 'main' or amending the url path below like so: https://github.com/Codecademy/gamut/blob/main/packages/${2}/src/file/location",
      "githubLink:",
      "'https: //github.com/Codecademy/gamut/blob/main/packages/gamut/src/Logo',",
      " },",
      "};",
      "<Meta of={$1Stories}/>",
      "",
      "<ComponentHeader {...parameters} />",
      "",
      "## Usage",
      "",
      "Use $1 to [what it should be used for]",
      "",
      "### Best practices:",
      "",
      "- [recommendation / best practice for implementation]",
      "- [recommendation / best practice for implementation]",
      "",
      "When NOT to use",
      "",
      "- [use case]- for [describe the use case], use the [similar component] component.",
      "- [use case]- for [describe the use case], use the [similar component] component",
      "",
      "## Anatomy",
      "",
      "[Insert image exported from Figma]",
      "",
      "1. [Element name]",
      "- [description including available options and ux writing if relevant]",
      "",
      "## Variants",
      "",
      "### [Variant 1 name]",
      "",
      "Use the [variant 1 name] to [what it should be used for]",
      "",
      "<Canvas of={TemplateStories.Default} />",
      "",
      "## Playground",
      "",
      "If you are using a story named 'Default', you can forgo the `of` prop.",
      "",
      "<Canvas sourceState='shown' of={TemplateStories.Default} />",
      "",
      "<Controls />",
      "",
      "## Accessibility considerations",
      "",
      "- [Accessibility guidance]",
      "",
      "## UX writing",
      "",
      "- [content]",
      " - [guidance]",
      " - [guidance]"
    ],
    "description": "Default Component Story Structure."
  },
  "Table of Contents Story": {
    "prefix": "toc-story",
    "body": [
      "import title from '@codecademy/macros/lib/title.macro';",
      "import { Meta } from '@storybook/addon-docs/blocks';",
      "",
      "import { TableOfContents } from '~styleguide/blocks';",
      "",
      "<Meta",
      "  title={title}",
      "  parameters={{",
      "    subtitle: '$3',",
      "  }}",
      "/>",
      "",
      "<TableOfContents />"
    ],
    "description": "TOC Story Structure."
  },
  "Canvas Block": {
    "prefix": "canvas-block",
    "body": [
      "<Canvas>",
      "  <Story name=\"$1\" args={{}}>",
      "    {(args) => <$2 {...args} />}",
      "  </Story>",
      "</Canvas>"
    ],
    "description": "A single story block wrapped in a canvas"
  },
  "Story Block": {
    "prefix": "story-block",
    "body": [
      "  <Story name=\"$1\" args={{}}>",
      "    {(args) => <$2 {...args} />}",
      "  </Story>"
    ],
    "description": "A single story block without a canvas"
  }
}
