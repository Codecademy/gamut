"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[3305,7360,6076,2610],{"./packages/styleguide/src/lib/Organisms/About.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_ConnectedForm_About_mdx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/About.mdx"),_GridForm_GridForm_mdx__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/styleguide/src/lib/Organisms/GridForm/GridForm.mdx"),_Lists_Tables_About_mdx__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/styleguide/src/lib/Organisms/Lists & Tables/About.mdx"),_Markdown_Markdown_mdx__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/styleguide/src/lib/Organisms/Markdown/Markdown.mdx");const parameters={id:"Organisms",title:"Organisms",subtitle:"Organisms are groups of molecules joined together to form a relatively complex, distinct section of an interface."};function _createMdxContent(props){const _components={a:"a",blockquote:"blockquote",p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_8__.W8,{title:"Organisms/About"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Molecules give us some building blocks to work with, and we can now combine them together to form organisms.\nOrganisms are groups of molecules joined together to form a relatively complex, distinct section of an interface.\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://bradfrost.com/blog/post/atomic-web-design/#organisms",rel:"nofollow",children:'- Brad Frost, author of "Atomic Design"'})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.MB,{links:(0,_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.RP)(parameters.id,[_ConnectedForm_About_mdx__WEBPACK_IMPORTED_MODULE_3__.parameters,_GridForm_GridForm_mdx__WEBPACK_IMPORTED_MODULE_4__.parameters,_Lists_Tables_About_mdx__WEBPACK_IMPORTED_MODULE_5__.parameters,_Markdown_Markdown_mdx__WEBPACK_IMPORTED_MODULE_6__.parameters])})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/About.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_ConnectedForm_ConnectedForm_mdx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedForm/ConnectedForm.mdx"),_ConnectedFormGroup_ConnectedFormGroup_mdx__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormGroup/ConnectedFormGroup.mdx"),_ConnectedFormInputs_ConnectedFormInputs_mdx__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormInputs/ConnectedFormInputs.mdx"),_SubmitButton_SubmitButton_mdx__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/SubmitButton/SubmitButton.mdx");const parameters={id:"Organisms/ConnectedForm",title:"ConnectedForm",subtitle:"ConnectedForm is a flexible way to build forms."};function _createMdxContent(props){const _components={code:"code",p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_8__.W8,{title:"Organisms/ConnectedForm/About"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Our Connected- and GridForm organisms provide a easy way to implement forms. While our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Form"})," atoms compose the structure of these forms, we strongly recommend only creating forms with using ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"GridForm"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedForm"}),". You should only use the form element atoms as individual elements if your interface doesn’t need to support the technical functions of a form."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.MB,{links:(0,_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.RP)(parameters.id,[_ConnectedForm_ConnectedForm_mdx__WEBPACK_IMPORTED_MODULE_3__.parameters,_ConnectedFormGroup_ConnectedFormGroup_mdx__WEBPACK_IMPORTED_MODULE_4__.parameters,_ConnectedFormInputs_ConnectedFormInputs_mdx__WEBPACK_IMPORTED_MODULE_5__.parameters,_SubmitButton_SubmitButton_mdx__WEBPACK_IMPORTED_MODULE_6__.parameters])})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_7__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormGroup/ConnectedFormGroup.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_ConnectedFormGroup_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormGroup/ConnectedFormGroup.stories.tsx");const parameters={title:"ConnectedFormGroup",subtitle:"A form group for the ConnectedForm component.",status:"updating",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/ConnectedForm/ConnectedFormGroup.tsx"}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_ConnectedFormGroup_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedFormGroup"})," is a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Atoms/FormElements/FormGroup",children:"FormGroup"})," that uses the context provided by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedForm"})," for error and disabled states. This component ensures that every field has proper error handling and accessibility. It also will type its ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"field"})," to the proper ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedFormInput"})," passed into ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"component"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedFormGroup"})," should primarly be used with the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useConnectedForm"})," hook. Below is an example, notice that the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"options"})," prop should have elements in its array that contain both a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"label"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"value"})," property:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"<ConnectedFormGroup\n  name=\"badRadioGroup\"\n  label=\"cool radio group dude\"\n  field={{\n    component: ConnectedRadioGroupInput,\n    // Type error, these options are not formatted correctly.\n    options: ['one', 'two', 'zero'],\n  }}\n/>\n\n<ConnectedFormGroup\n  name=\"goodRadioGroup\"\n  label=\"cool radio group dude\"\n  field={{\n    component: ConnectedRadioGroupInput,\n    // Perfection 🙌\n    options: [\n      { label: 'one', value: 'one' },\n      { label: 'two', value: 'two' },\n      { label: 'zero', value: 'zero' },\n    ],\n  }}\n/>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variants",children:"Variants"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["A ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedFormGroup"})," can be in one of three states: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"default"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"error"}),", or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"states",children:"States"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"default"})," being a standard group that can be interacted with."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"error"})," being a group that has an error message displayed."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"})," being a group that is disabled and therefore not interactable."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To see how a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedFormGroup"})," can be used in a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedForm"}),", check out the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Organisms/ConnectedForm/ConnectedForm",children:"ConnectedForm"})," page."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_ConnectedFormGroup_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormInputs/ConnectedFormInputs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),components=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),ConnectedFormInputs_stories=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormInputs/ConnectedFormInputs.stories.tsx"),ListRow=__webpack_require__("./packages/gamut/src/List/ListRow.tsx"),ListCol=__webpack_require__("./packages/gamut/src/List/ListCol.tsx"),Text=__webpack_require__("./packages/gamut/src/Typography/Text.tsx"),Box=__webpack_require__("./packages/gamut/src/Box/Box.tsx"),List=__webpack_require__("./packages/gamut/src/List/List.tsx");const ListRowRenderer=_ref=>{let{inputs}=_ref;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:inputs.map((_ref2=>{let{name,counterpart}=_ref2;return(0,jsx_runtime.jsxs)(ListRow.v,{children:[(0,jsx_runtime.jsx)(ListCol.f,{size:"lg",type:"header",children:(0,jsx_runtime.jsx)(Text.E,{as:"code",ml:8,children:name})}),(0,jsx_runtime.jsx)(ListCol.f,{fill:!0,size:"lg",children:(0,jsx_runtime.jsx)(components.WS,{id:`Atoms/FormInputs/${counterpart}`,children:counterpart})})]})}))})},ConnectedFormInputsTable=()=>(0,jsx_runtime.jsx)(Box.a,{mb:40,mt:16,mx:40,children:(0,jsx_runtime.jsx)(List.B,{variant:"table",children:(0,jsx_runtime.jsx)(ListRowRenderer,{inputs:[{name:"ConnectedInput",counterpart:"Input"},{name:"ConnectedSelect",counterpart:"Select"},{name:"ConnectedCheckbox",counterpart:"Checkbox"},{name:"ConnectedTextArea",counterpart:"TextArea"}]})})}),parameters={title:"ConnectedFormInputs",subtitle:"Different form inputs for the ConnectedForm component.",status:"updating",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/ConnectedForm/ConnectedInputs/index.ts"}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ConnectedFormInputs_stories}),"\n",(0,jsx_runtime.jsx)(components.Bg,{...parameters}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"input-types",children:"Input types"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["We have a selection of ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedInput"})," components that are visually identical to their un-connected ",(0,jsx_runtime.jsx)(components.WS,{id:"Atoms/FormInputs",children:"FormInput"})," counterparts. Please reference the links below for component-specific prop and styling configuration:"]}),"\n",(0,jsx_runtime.jsx)(ConnectedFormInputsTable,{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"connectedradiogroupinput",children:"ConnectedRadioGroupInput"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedRadioGroupInput"})," is the exception to the rule, and has some props that differ, particularly ",(0,jsx_runtime.jsx)(_components.code,{children:"options"})," — which takes an array of ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedBaseRadioInputProps"})," components."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["For further styling configurations, check out ",(0,jsx_runtime.jsx)(components.WS,{id:"Atoms/FormInputs/Radio",children:"RadioGroup"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedRadioGroup"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedRadio"})," should rarely, if ever, be used outside of ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedRadioGroupInput"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The components are engineered to be passed into the component prop of ",(0,jsx_runtime.jsx)(components.WS,{id:"Organisms/ConnectedForm/ConnectedFormGroup",children:"ConnectedFormGroup"}),", like so:"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"<ConnectedFormGroup\n  name=\"badRadioGroup\"\n  label=\"cool radio group dude\"\n  field={{\n    component: ConnectedRadioGroupInput,\n    // Type error, these options are not formatted correctly.\n    options: ['one', 'two', 'zero'],\n  }}\n/>\n\n<ConnectedFormGroup\n  name=\"goodRadioGroup\"\n  label=\"cool radio group dude\"\n  field={{\n    component: ConnectedRadioGroupInput,\n    // Perfection 🙌\n    options: [\n      { label: 'one', value: 'one' },\n      { label: 'two', value: 'two' },\n      { label: 'zero', value: 'zero' },\n    ],\n  }}\n/>\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use outside of ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedFormGroup"})," removes much of the accessibility and type-safety built into these components."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"delaying-updates-to-connectedform",children:"Delaying updates to ConnectedForm"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"On forms with many nested and/or array-like fields, it can be useful for performance reasons to delay updating the form state until the user has finished updating a field (rather than, for example, on every keystroke in a text input)."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To faciliate this, developers can use the ",(0,jsx_runtime.jsx)(_components.code,{children:"useDebouncedField"})," hook, which connects to ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedForm"})," the same way that the ",(0,jsx_runtime.jsx)(_components.code,{children:"useField"})," hook or a ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedInput"})," does internally, but delays the ",(0,jsx_runtime.jsx)(_components.code,{children:"setValue"})," call until the user has blurred focus on the input."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"// DebouncedInput.tsx\nimport { Input } from '@codecademy/gamut'\n\nexport const DebouncedInput: React.FC<...> = ({ name }) => {\n  const { onChange, onBlur, value } = useDebouncedField({ name, type: 'text' })\n\n  return (\n    <Input\n      name={name}\n      type=\"text\"\n      onChange={onChange}\n      onBlur={onBlur}\n      value={value}\n      htmlFor={name}\n    />\n  )\n}\n\n// FormPage.tsx\nimport { ConnectedForm } from '@codecademy/gamut'\nimport { DebouncedInput } from './DebouncedInput'\n\nenum FieldNames {\n  favoriteXFilesEpisode = 'favoriteXFilesEpisode'\n}\n\nexport const FormPage: React.FC = () => {\n  reutrn (\n    <ConnectedForm\n      defaultValues={{\n        [FieldNames.favoriteXFilesEpisode]: 'Bad Blood'\n      }}\n      onSubmit={() => ...}\n    >\n      <DebouncedInput\n        name={FieldNames.favoriteXFilesEpisode}\n      />\n    </ConnectedForm>\n  )\n}\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"useDebouncedField"})," should not be used with any varaint of the standard ",(0,jsx_runtime.jsx)(_components.code,{children:"ConnectedInput"}),", as it will clash with the default ",(0,jsx_runtime.jsx)(_components.code,{children:"useField"})," instance used internally by those components."]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/SubmitButton/SubmitButton.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_SubmitButton_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/ConnectedForm/SubmitButton/SubmitButton.stories.tsx");const parameters={title:"SubmitButton",subtitle:"A submit type button for ConnectedForm.",status:"current",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/ConnectedForm/SubmitButton.tsx"}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_SubmitButton_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SubmitButton"}),": A submit type ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Atoms/Buttons",children:"Button"})," that uses the context provided by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ConnectedForm"})," for loading and disabled states. Must be used within ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Organisms/ConnectedForm/ConnectedForm",children:"ConnectedForm"})," ."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"example-code",children:"Example Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {\n  ConnectedInput,\n  useConnectedForm,\n  SubmitButton,\n} from '@codecademy/gamut';\n\nexport const NiceForm = () => {\n  const { ConnectedFormGroup, ConnectedForm, connectedFormProps } =\n    useConnectedForm({\n      defaultValues: {\n        inputField: 'default sentence',\n      },\n      validationRules: {\n        inputField: { required: 'you gotta say something' },\n      },\n    });\n\n  return (\n    <ConnectedForm\n      onSubmit={(values) => submit(values)}\n      {...connectedFormProps}\n    >\n      <ConnectedFormGroup\n        name=\"inputField\"\n        label=\"cool input\"\n        field={{\n          component: ConnectedInput,\n          icon: TerminalIcon,\n        }}\n      />\n      <SubmitButton>submit my form!</SubmitButton>\n    </ConnectedForm>\n  );\n};\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variants",children:"Variants"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"states",children:"States"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["A ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SubmitButton"})," can have 3 different states:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"default"})," being a standard button that can be interacted with."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"loading"})," that displays a spinner inside the button and prevents the button from being clicked."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"})," being a button that is disabled and therefore not interactable."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_SubmitButton_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/GridForm/GridForm.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/GridForm/GridForm.stories.tsx");const parameters={title:"GridForm",subtitle:"GridForm an efficient way to build and design forms on a grid.",design:{type:"figma",url:"https://www.figma.com/file/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=1689%3A3910"},status:"current",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/GridForm/GridForm.tsx"}};function _createMdxContent(props){const _components={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The GridForm organism provides an easy, out-of-the-box way to implement forms from a list of fields. When provided a list of fields, GridForm strings together the appropriate ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Atoms/FormElements/About",children:"Form Elements"})," inside a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Layouts/LayoutGrid",children:"LayoutGrid"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"GridForm provides the following benefits:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Simplicity"}),": This organism takes in plain JSON-like props and uses them to string together a validated form"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Accessibility"}),": All GridForms handle accessibility styling and behaviors, passing tests out-of-the-box"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Functionality"}),": Validation and submission logic is handled by the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://react-hook-form.com",rel:"nofollow",children:"react-hook-form"})," library"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Visual Consistency"}),": Aligns all input elements with the correct vertical rhythms and grid spacing"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"designing-with-gridform",children:"Designing with GridForm"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["All ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://www.figma.com/file/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=1189%3A0",rel:"nofollow",children:"Form Input"})," components in the Figma library are consistent with their implementations in code. By setting the form inputs within the component's layout grid, we can design forms that are compatible with Gamut."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://www.figma.com/file/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=1689%3A3910",rel:"nofollow",children:"GridForm page in Gamut"})," also contains several starter templates for incorporating this organism in your designs."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Starter"}),": Contains sample components to begin creating your own form"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Sections"}),": Contains the headers and dividers that are rendered in the optional Sections modules"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Inline Submit"}),": A form incorporating the Inline Submit Button style of GridForm"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Instructions"}),": Contains suggestions for modifying the Figma component for your own designs"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"figma-component-instructions",children:"Figma component instructions"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Enable Layout Grid (^G)"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Select a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"❖ GridForm"})," variant as a template","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Starter, Sections, Inline Submit"}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Detatch the component to modify the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"📐 LayoutGrid"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Add, remove, and edit ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"⬦ Form Inputs"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Input Field, TextArea, Checkbox, Radio Button, Select"}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Customize ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"🚥 GridFormButtons"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Submit button style (Fill/CTA), position, cancel button"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"customizations",children:"Customizations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"disabled-inputs",children:"Disabled inputs"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If an input is not meant to be usable, such as when a portion of a form is disabled pending user action, you can make it visually disabled with a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"})," field member."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.DisabledInputs}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"gridform-atting",children:"GridForm-atting"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We can use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"size"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"rowspan"})," props (borrowed from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"layouts-layoutgrid--layout-grid",children:"LayoutGrid"}),") to customize the layouts of our GridForms. You can also customize the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"FormRequiredText"})," using the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"requiredTextProps"}),". ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"FormRequiredText"})," should be spaced apart from or be stylistically different from the text element above it."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.Formatted}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"submit-button-position",children:"Submit button position"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We can position the submit button by passing the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"position"})," prop with a\nvalue of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"'left'"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"'center'"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"'right'"}),", or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"'stretch'"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.SubmitButtonPosition}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"submit-button-options",children:"Submit button options"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We can specify the version of our button by passing the type prop. We can choose between\nthe ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"atoms-button--fill-button",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"FillButton"})})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"atoms-button--cta-button",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CTAButton"})}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.SubmitButtonOptions}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"inline-submit-button",children:"Inline submit button"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"We can make the Submit button inline with an input by setting the column\nsizes so they fit on the same row (e.g size 8 for an input and size 4 for\nthe submit)."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We can additionally remove the label from text inputs and checkbox inputs.\nUse the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"hideLabel"})," prop to remove the label, allowing the submit button to\nalign nicely with the input. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"However"}),", if using ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"hideLabel"})," to remove the default label, you should provide an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," and/or include another label to the right/left of the input to ensure the input is accessible."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.InlineSubmit}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"cancel-button",children:"Cancel button"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Optionally, include a cancel button."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.CancelButton}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-inputs",children:"Custom inputs"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Some forms, such as the checkout flows that use Recurly, need to define\ntheir own inputs. We can specify a 'custom' field type to with a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://reactjs.org/docs/render-props.html",rel:"nofollow",children:"render prop"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We also have a 'custom-group' type for when you are passing in a custom FormGroup - including a label. If you do not want GridForm to surface errors for your field, you should likely use a 'custom-group'. If you chose to go this route, please be aware of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://www.deque.com/blog/anatomy-of-accessible-forms-best-practices/",rel:"nofollow",children:"accessibility best practices"})," for forms."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.CustomInputs}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"placeholder-text",children:"Placeholder text"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Text inputs are allowed to have traditional ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"placeholder"})," text.\nThis is a somewhat dangerous behavior for accessibility, as browsers\ngenerally don't render placeholder text with high enough color contrast\nfor AA standards. If you do need to use placeholder text, such as on\nlanding page forms that have been shown to have higher completion rates\nwith the text, please make sure the placeholder text doesn't add any new\ninformation to the form -- it should really only rephrase the text label."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["See ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://www.nngroup.com/articles/form-design-placeholders/",rel:"nofollow",children:"this article"})," or\nmore details on why using placeholders is often bad."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.PlaceholderText}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"on-field-update",children:"On field update"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A field can take an onUpdate callback. This callback will fire when the\nfield's value changes. This could be useful if you need to use the\nfield's value in a parent component before onSubmit gets triggered."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.OnFieldUpdate}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"infotip--gridform",children:"InfoTip + GridForm"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["A field can include our existing ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"InfoTip"}),". The position of the infotip on each field is always set to the bottom-right."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["See the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"atoms-forminputs-radio--radio",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Radio"})})," story for an example of how to add a infotip to a radio option."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.InfoTip}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"sections",children:"Sections"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"GridForm"}),"s optionally take an array of sections that have left and center-aligned variants."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Each sections should have a title that correctly follows ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://usability.yale.edu/web-accessibility/articles/headings",rel:"nofollow",children:"heading ranks"}),". You can set the text type of this title though the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"as"})," prop on that section -- the default is ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"h2"}),". You can only set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"as"})," prop to a heading."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["You can set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"typography-text--variants",children:"Text variant"})," prop for the section title the same way. Only title variants are reccomended, but if you need more granular control of the Text component, you can pass them into ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"titleWrapperProps"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["When using the left-aligned layout, please note that the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"title"})," takes up 3 columns, so any field size over 9 may cause inconsistent behavior!"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.Sections}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-error",children:"Custom error"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A field can take a custom error in addition to validation errors. The validation error will always take precedence to the custom error."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.CustomError}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"hidden-input",children:"Hidden input"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Hidden inputs can be used to include data that users can't see or modify with the submission. For this implementation you can set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"defaultValue"})," in the object and it will be submitted with the regular form data."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.HiddenInput}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"sweet-container-input",children:"Sweet container input"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:['"Sweet container" (',(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://en.wikipedia.org/wiki/Honeypot_(computing)",rel:"nofollow",children:"honeypot"}),") inputs can be used to detect bots by providing a field that would not generally be clicked by human users, but might be triggered automatically by bots."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:'We call it a "sweet container" so that bots do not immediately detect it as a honeypot input.'}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.SweetContainer}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"markdown-errors",children:"Markdown errors"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["GridForm renders errors through our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"atoms-markdown--basics",children:"Markdown"})," component so we can optionally add markdown to our validation messages."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.MarkdownErrors}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"colormode-",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<ColorMode />"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"By toggling dark mode you can see all the colors map to a new color that is accessible for the mode by default. Please use the ColorMode control on the top of this page and navigating to the Playground example to check it out!"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Note"}),": you ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"cannot"})," use the deprecated 'business' button type with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ColorMode"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"checkbox-spacing",children:"Checkbox spacing"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If you need to checkboxes to fit into a smaller space, you can use our our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"tight"})," spacing prop for checkboxes that are a bit closer together."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.CheckboxSpacing}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"loading-and-disabled-states",children:"Loading and disabled states"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["You can set the state of the submit button to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"loading"})," as ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"true"})," to show a loading spinner. This is useful when you need to show the user that the form is submitting.\nYou can also set ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"true"})," to disable submission."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.LoadingAndDisabled}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"disabled-fields-on-submit",children:"Disabled fields on submit"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disableFieldsOnSubmit"})," will disable all form fields once the form has been successfully submitted. If you have any server-side validation that needs to happen, we recommend using the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"wasSubmitSuccessful"})," prop, but submission will also fail if a promise is rejected within your ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"onSubmit"})," or if a field does not pass validation."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.DisabledFieldsOnSubmit}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"reset-form-on-submit",children:"Reset form on submit"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"resetOnSubmit"})," will reset the form once the GridForm has been successfully submitted. If you have any server validation that needs to happen, we recommend using the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"wasSubmitSuccessful"})," prop, but submission will also fail if a promise is rejected within your ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"onSubmit"})," or if a field does not pass validation."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.ResetOnSubmit}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"We can combine these together to create some pretty cool forms which have a loading state, disable their fields while submitting, and reset the form when the submit was successful."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.FormLoading}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"hiderequiredtext",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"hideRequiredText"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"hideRequiredText"})," will hide the '* Required' text that appears at the top of our forms. This should only be hidden if the form has no required fields."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.HideRequiredText}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"solo-field-form",children:"Solo field form"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Solo field form should always have their solo input be required. They should automagically not have the required/optional text - if you have a custom rendered hidden input, you may have to use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"hasSoloField"})," prop."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.SoloField}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_GridForm_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/Markdown/Markdown.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Organisms/Markdown/Markdown.stories.tsx");const parameters={title:"Markdown",subtitle:"Markdown renderer for all your markdown needs.",status:"updating",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/Markdown/index.tsx"}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Markdown"})," component to render markdown content."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Below is an example of rendered markdown content to show you what's possible:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.FullExample}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"overrides",children:"Overrides"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"In cases where our default Markdown renderer is not returning exactly what you need, you can override specific tags or custom tags."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.Overrides}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"header-override",children:"Header override"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A common override may be to change the font size of a Header."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.HeaderOverride}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"skipdefaultoverides",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"skipDefaultOverides"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If you need to override a link, iframe, or table, you do not need to provide the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"skipDefaultOverides"})," prop. This prop is now only used for removing the default heading, paragraph, and list element overrides."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.LinkOverride}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"inline-markdown",children:"Inline Markdown"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"You can also provide use the Markdown component inline."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.InlineMarkdown}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_Markdown_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormGroup/ConnectedFormGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/ConnectedForm/ConnectedFormGroup.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/gamut/src/ConnectedForm/utils.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/gamut/src/ConnectedForm/ConnectedInputs/ConnectedRadioGroupInput.tsx"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.H,args:{}},FormGroupStates=()=>{const{ConnectedFormGroup,ConnectedForm,connectedFormProps}=(0,_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__.BW)({defaultValues:{radioGroup:void 0,radioGroupError:void 0,radioGroupDisabled:void 0},validationRules:{radioGroup:{required:"please fill this out."}}});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(ConnectedForm,{display:"flex",mt:12,resetOnSubmit:!0,onSubmit:values=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form Submitted")(values)},...connectedFormProps,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ConnectedFormGroup,{field:{component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.c,options:[{label:"one",value:"one"},{label:"two",value:"two"},{label:"zero",value:"zero"}]},label:"default state",name:"radioGroup"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ConnectedFormGroup,{customError:"custom error",field:{component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.c,options:[{label:"one",value:"one"},{label:"two",value:"two"},{label:"zero",value:"zero"}]},label:"error state",name:"radioGroupError"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ConnectedFormGroup,{disabled:!0,field:{component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.c,options:[{label:"one",value:"one"},{label:"two",value:"two"},{label:"zero",value:"zero"}]},label:"disabled state",name:"radioGroupDisabled"})]})},Default={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormGroupStates,{})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => <FormGroupStates />\n}",...Default.parameters?.docs?.source}}}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/ConnectedFormInputs/ConnectedFormInputs.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__("./packages/gamut/src/Box/Box.tsx").a,args:{}},Default={args:{}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}}},"./packages/styleguide/src/lib/Organisms/ConnectedForm/SubmitButton/SubmitButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/ConnectedForm/SubmitButton.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/gamut/src/ConnectedForm/ConnectedForm.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/gamut/src/Box/FlexBox.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/gamut/src/Typography/Text.tsx"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.b,args:{}},SubmitButtonStates=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__._,{display:"flex",my:24,onSubmit:values=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form Submitted")(values)},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.p,{alignItems:"center",flexDirection:"column",p:16,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__.E,{variant:"title-xs",children:"default"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.b,{m:8,children:"submit the form, please"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.p,{alignItems:"center",borderLeft:1,borderRight:1,flexDirection:"column",p:16,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__.E,{variant:"title-xs",children:"loading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.b,{loading:!0,m:8,children:"submit the form, please"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.p,{alignItems:"center",flexDirection:"column",p:16,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__.E,{variant:"title-xs",children:"disabled"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.b,{disabled:!0,m:8,children:"you cannot submit this form"})]})]}),Default={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SubmitButtonStates,{})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => <SubmitButtonStates />\n}",...Default.parameters?.docs?.source}}}},"./packages/styleguide/src/lib/Organisms/Markdown/Markdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FullExample:()=>FullExample,HeaderOverride:()=>HeaderOverride,InlineMarkdown:()=>InlineMarkdown,LinkOverride:()=>LinkOverride,Overrides:()=>Overrides,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Markdown_stories});var Markdown=__webpack_require__("./packages/gamut/src/Markdown/index.tsx"),Text=__webpack_require__("./packages/gamut/src/Typography/Text.tsx");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Markdown_stories={component:Markdown.o,args:{}},Default={args:{text:"\n## Hello World\nThis is markdown\n    ",spacing:"tight"}},FullExample={args:{text:'# Markdown: Syntax\n\n- [Overview](#overview)\n  - [Philosophy](#philosophy)\n  - [Inline HTML](#html)\n  - [Automatic Escaping for Special Characters](#autoescape)\n- [Block Elements](#block)\n  - [Paragraphs and Line Breaks](#p)\n  - [Headers](#header)\n  - [Blockquotes](#blockquote)\n  - [Lists](#list)\n  - [Code Blocks](#precode)\n  - [Horizontal Rules](#hr)\n- [Span Elements](#span)\n  - [Links](#link)\n  - [Emphasis](#em)\n  - [Code](#code)\n  - [Images](#img)\n- [Miscellaneous](#misc)\n  - [Backslash Escapes](#backslash)\n  - [Automatic Links](#autolink)\n- [HTML Tags](#html-tags)\n  - [Details](#details)\n\n---\n\n## Overview\n\n### Philosophy\n\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\n\nReadability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it\'s been marked up with tags or formatting instructions. While\nMarkdown\'s syntax has been influenced by several existing text-to-HTML\nfilters -- including [Setext](http://docutils.sourceforge.net/mirror/setext.html), [atx](http://www.aaronsw.com/2002/atx/), [Textile](http://textism.com/tools/textile/), [reStructuredText](http://docutils.sourceforge.net/rst.html),\n[Grutatext](http://www.triptico.com/software/grutatxt.html), and [EtText](http://ettext.taint.org/doc/) -- the single biggest source of\ninspiration for Markdown\'s syntax is the format of plain text email.\n\n## Block Elements\n\n### Paragraphs and Line Breaks\n\nA paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be indented with spaces or tabs.\n\nThe implication of the "one or more consecutive lines of text" rule is\nthat Markdown supports "hard-wrapped" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType\'s "Convert Line Breaks" option) which translate every line break\ncharacter in a paragraph into a `<br />` tag.\n\nWhen you _do_ want to insert a `<br />` break tag using Markdown, you\nend a line with two or more spaces, then type return.\n\n### Headers\n\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\n\nOptionally, you may "close" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don\'t even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.)\n\n### Blockquotes\n\nMarkdown uses email-style `>` characters for blockquoting. If you\'re\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a `>` before every line:\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n>\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\nMarkdown allows you to be lazy and only put the `>` before the first\nline of a hard-wrapped paragraph:\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of `>`:\n\n> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n\nBlockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:\n\n> ## This is a header.\n>\n> 1.  This is the first list item.\n> 2.  This is the second list item.\n>\n> Here\'s some example code:\n>\n>     return shell_exec("echo $input | $markdown_script");\n\nAny decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu.\n\n### Lists\n\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\n\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\n-- as list markers:\n\n- Red\n- Green\n- Blue\n\nis equivalent to:\n\n- Red\n- Green\n- Blue\n\nand:\n\n- Red\n- Green\n- Blue\n\nOrdered lists use numbers followed by periods:\n\n1.  Bird\n2.  McHale\n3.  Parish\n\nIt\'s important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:\n\nIf you instead wrote the list in Markdown like this:\n\n1.  Bird\n1.  McHale\n1.  Parish\n\nor even:\n\n3. Bird\n1. McHale\n1. Parish\n\nyou\'d get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don\'t have to.\n\nTo make lists look nice, you can wrap items with hanging indents:\n\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n  viverra nec, fringilla in, laoreet vitae, risus.\n- Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nBut if you want to be lazy, you don\'t have to:\n\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n  viverra nec, fringilla in, laoreet vitae, risus.\n\n- Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nList items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be indented by either 4 spaces\nor one tab:\n\n1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIt looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:\n\n- This is a list item with two paragraphs.\n\n      This is the second paragraph in the list item. You\'re\n\n  only required to indent the first line. Lorem ipsum dolor\n  sit amet, consectetuer adipiscing elit.\n\n- Another item in the same list.\n\nList items may consist of `ul` and `ol` nested items:\n\n- This is an unordered list item.\n\n  1. This is an ordered list item.\n  2. And another ordered list item.\n  3. And a third\n\n- A second unordered list item.\n- A third!\n\nTo put a blockquote within a list item, the blockquote\'s `>`\ndelimiters need to be indented:\n\n- A list item with a blockquote:\n\n  > This is a blockquote\n  > inside a list item.\n\nTo put a code block within a list item, the code block needs\nto be indented _twice_ -- 8 spaces or two tabs:\n\n- A list item with a code block:\n\n      <code goes here>\n\nYou can also create a list of checkboxes that will render as the styled Gamut [Checkboxes](https://gamut.codecademy.com/?path=/docs/atoms-forminputs-checkbox--checkbox). Checking these checkboxes in Markdown will only change the default state of the checkbox and they will still be interactive.\n\n- [ ] checkbox\n- [x] default checked checkbox\n- [ ] another checkbox\n\n### Code Blocks\n\nPre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both `<pre>` and `<code>` tags.\n\nTo produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab.\n\nThis is a normal paragraph:\n\n    This is a code block.\n\nHere is an example of AppleScript:\n\n    tell application "Foo"\n        beep\n    end tell\n\nA code block continues until it reaches a line that is not indented\n(or the end of the article).\n\nWithin a code block, ampersands (`&`) and angle brackets (`<` and `>`)\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:\n\n    <div class="footer">\n        &copy; 2004 Foo Corporation\n    </div>\n\nRegular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit\'s also easy to use Markdown to write about Markdown\'s own syntax.\n\n```\ntell application "Foo"\n    beep\nend tell\n```\n\n## Span Elements\n\n### Links\n\nMarkdown supports two style of links: _inline_ and _reference_.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately\nafter the link text\'s closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an _optional_\ntitle for the link, surrounded in quotes. For example:\n\nThis is [an example](http://example.com/) inline link.\n\n[This link](http://example.net/) has no title attribute.\n\n### Emphasis\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of\nemphasis. Text wrapped with one `*` or `_` will be wrapped with an\nHTML `<em>` tag; double `*`\'s or `_`\'s will be wrapped with an HTML\n`<strong>` tag. E.g., this input:\n\n_single asterisks_\n\n_single underscores_\n\n**double asterisks**\n\n**double underscores**\n\n### Code\n\nTo indicate a span of code, wrap it with backtick quotes (`` ` ``).\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:\n\nUse the `printf()` function.\n\n### Tables\n\n| Tables   |      Are      |  Cool |\n| -------- | :-----------: | ----: |\n| col 1 is | left-aligned  | $1600 |\n| col 2 is |   centered    |   $12 |\n| col 3 is | right-aligned |    $1 |\n\n## HTML Tags\n\n### Details\n\n<details>\n  <summary>Read More</summary>\n  lLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</details>\n\n<details>\n  lLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</details>\n\n### Iframes\n\nVimeo and Youtube video iframes will be rendered by our Video component (if showPlayerEmbed is true it will be rendered in actual embed), otherwise they\'ll render the original code.\n\n<iframe src="https://player.vimeo.com/video/188237476?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479" frameborder="0" allow="autoplay; fullscreen; picture-in-picture; clipboard-write" style="position:absolute;top:0;left:0;width:100%;height:100%;" title="Studio Ghibli in Real Life"></iframe>\n\n<br/>\n\n<iframe width="1094" height="842" showPlayerEmbed src="https://www.youtube.com/embed/zhDwjnYZiCo" title="Ghibli Coffee Shop ☕️ Music to put you in a better mood 🌿 lofi hip hop - lofi songs | study / relax" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>\n\n### Video\n\n`video`s with an `src` or a `source` video file will be rendered by our Video component, otherwise they\'ll render the original code. Videos with a `style` prop or another restricted prop will be stripped of that property.\nInsert `track` to add subtitles / captions to the video.\n\n<video width="100%" height="100%" align="middle" controls>\n  <source src="https://static-assets-staging.codecademy.com/test-locales/how-to-build-a-portfolio.mp4" type="video/mp4" />\n  <track src="https://static-assets-staging.codecademy.com/test-locales/how-to-build-a-portfolio.srt" type="srt" label="English" kind="subtitles" srclang="en-US" default="true" />\n  Your browser does not support the video tag. \n</video>\n'}},Overrides={args:{overrides:{CodeBlock:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props})},CustomElement:{component:_ref=>{let{title}=_ref;return(0,jsx_runtime.jsx)(Text.E,{as:"h3",color:"primary",fontSize:26,m:24,children:title})},allowedAttributes:["title"]}},text:"\"## Hello World\n        <CodeBlock>Span inside a custom code block element</CodeBlock>\n        <CustomElement title='A Custom Component' />\""}},HeaderOverride={args:{overrides:{h3:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props,as:"h3",fontSize:20,m:16})}},text:"### Smaller H3"}},LinkOverride={args:{text:"[This was a link](https://codecademy.com), Now it is not.",overrides:{a:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props,as:"span",color:"blue-500"})}}}},InlineMarkdown={args:{text:"this is an inline markdown component",inline:!0},render:args=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",(0,jsx_runtime.jsx)(Markdown.o,{...args}),"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."]})},__namedExportsOrder=["Default","FullExample","Overrides","HeaderOverride","LinkOverride","InlineMarkdown"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: `\n## Hello World\nThis is markdown\n    `,\n    spacing: 'tight'\n  }\n}",...Default.parameters?.docs?.source}}},FullExample.parameters={...FullExample.parameters,docs:{...FullExample.parameters?.docs,source:{originalSource:"{\n  args: {\n    // Not sure why there's a type mismatch, but the story renders\n    text: exampleMarkdown as any\n  }\n}",...FullExample.parameters?.docs?.source}}},Overrides.parameters={...Overrides.parameters,docs:{...Overrides.parameters?.docs,source:{originalSource:"{\n  args: {\n    overrides: elements,\n    text: `\"## Hello World\n        <CodeBlock>Span inside a custom code block element</CodeBlock>\n        <CustomElement title='A Custom Component' />\"`\n  }\n}",...Overrides.parameters?.docs?.source}}},HeaderOverride.parameters={...HeaderOverride.parameters,docs:{...HeaderOverride.parameters?.docs,source:{originalSource:"{\n  args: {\n    overrides: tags,\n    text: '### Smaller H3'\n  }\n}",...HeaderOverride.parameters?.docs?.source}}},LinkOverride.parameters={...LinkOverride.parameters,docs:{...LinkOverride.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: \'[This was a link](https://codecademy.com), Now it is not.\',\n    overrides: {\n      a: {\n        component: props => <Text {...props} as="span" color="blue-500" />\n      }\n    }\n  }\n}',...LinkOverride.parameters?.docs?.source}}},InlineMarkdown.parameters={...InlineMarkdown.parameters,docs:{...InlineMarkdown.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: `this is an inline markdown component`,\n    inline: true\n  },\n  render: args => {\n    return <>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua.\n        <Markdown {...args} />\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n        ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n        reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\n        qui officia deserunt mollit anim id est laborum.\n      </>;\n  }\n}",...InlineMarkdown.parameters?.docs?.source}}}}}]);