(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{2355:function(module,exports,__webpack_require__){var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__publicField=(obj,key,value)=>(((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value:value}):obj[key]=value})(obj,"symbol"!=typeof key?key+"":key,value),value),Vidyard_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(Vidyard_exports,{default:()=>Vidyard}),module.exports=(mod=Vidyard_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_react=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__(2)),import_utils=__webpack_require__(415),import_patterns=__webpack_require__(1156);class Vidyard extends import_react.Component{constructor(){super(...arguments),__publicField(this,"callPlayer",import_utils.callPlayer),__publicField(this,"mute",(()=>{this.setVolume(0)})),__publicField(this,"unmute",(()=>{null!==this.props.volume&&this.setVolume(this.props.volume)})),__publicField(this,"ref",(container=>{this.container=container}))}componentDidMount(){this.props.onMount&&this.props.onMount(this)}load(url){const{playing:playing,config:config,onError:onError,onDuration:onDuration}=this.props,id=url&&url.match(import_patterns.MATCH_URL_VIDYARD)[1];this.player&&this.stop(),(0,import_utils.getSDK)("https://play.vidyard.com/embed/v4.js","VidyardV4","onVidyardAPI").then((Vidyard2=>{this.container&&(Vidyard2.api.addReadyListener(((data,player)=>{this.player||(this.player=player,this.player.on("ready",this.props.onReady),this.player.on("play",this.props.onPlay),this.player.on("pause",this.props.onPause),this.player.on("seek",this.props.onSeek),this.player.on("playerComplete",this.props.onEnded))}),id),Vidyard2.api.renderPlayer({uuid:id,container:this.container,autoplay:playing?1:0,...config.options}),Vidyard2.api.getPlayerMetadata(id).then((meta=>{this.duration=meta.length_in_seconds,onDuration(meta.length_in_seconds)})))}),onError)}play(){this.callPlayer("play")}pause(){this.callPlayer("pause")}stop(){window.VidyardV4.api.destroyPlayer(this.player)}seekTo(amount,keepPlaying=!0){this.callPlayer("seek",amount),keepPlaying||this.pause()}setVolume(fraction){this.callPlayer("setVolume",fraction)}setPlaybackRate(rate){this.callPlayer("setPlaybackSpeed",rate)}getDuration(){return this.duration}getCurrentTime(){return this.callPlayer("currentTime")}getSecondsLoaded(){return null}render(){const{display:display}=this.props,style={width:"100%",height:"100%",display:display};return import_react.default.createElement("div",{style:style},import_react.default.createElement("div",{ref:this.ref}))}}__publicField(Vidyard,"displayName","Vidyard"),__publicField(Vidyard,"canPlay",import_patterns.canPlay.vidyard)}}]);