"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[2561],{"./packages/styleguide/src/lib/UX Writing/Component guidelines/About.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx");const parameters={id:"Component guidelines",title:"Component guidelines",subtitle:"Get up to speed on best practices for writing for user interfaces, including guidance for writing for specific components in Gamut."};function _createMdxContent(props){const _components={p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"UX Writing/Component guidelines/About"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Writing on your own? Use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"UX Writing/DIY UX writing in 8 steps",children:"step-by-step guide"})," to ensure the copy is clear and useful."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.MB,{links:[{id:"UX Writing/Component guidelines/Alerts",subtitle:"Make clear what you’re alerting the user to. Then, clarify any next steps they need to take or inform them about the timing of a resolution on our end.",title:"Alerts"},{id:"UX Writing/Component guidelines/Alternative text",title:"Alternative text",subtitle:"Alternative text, or alt text, is a brief description of an image for users who cannot view it."},{id:"UX Writing/Component guidelines/Buttons",subtitle:"Be specific, use action-oriented language, and emphasize value. Keep to 3 words or less (unless necessary for clarity), and use sentence case.",title:"Buttons"},{id:"UX Writing/Component guidelines/Confirmation dialogs",subtitle:'Simplify the language, prioritize the message, and make sure the implication of what learners are saying "Yes" (or "No") to is crystal clear.',title:"Confirmation dialogs"},{id:"UX Writing/Component guidelines/Error messages",subtitle:"Above all else, error messages should explain and resolve. Inform learners of what went wrong and let them know how to proceed.",title:"Error messages"},{id:"UX Writing/Component guidelines/Notifications",subtitle:"Keep it brief (<86 characters), make it actionable, and ensure the messaging is in support of the learner’s journey.",title:"Notifications"},{id:"UX Writing/Component guidelines/Toasts",subtitle:"Keep it brief, ensure the message is personal and relevant, and avoid distracting from the learning experience.",title:"Toasts"},{id:"UX Writing/Component guidelines/Tooltips",subtitle:"Keep tooltips short and useful. Avoid using them to share information that's vital for learners to complete tasks.",title:"Tooltips"}]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);