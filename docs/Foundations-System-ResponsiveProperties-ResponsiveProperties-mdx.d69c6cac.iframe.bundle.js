"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[7541,1071],{"./packages/styleguide/src/lib/Foundations/System/ResponsiveProperties/ResponsiveProperties.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_shared_elements__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Foundations/shared/elements.tsx"),_ResponsiveProperties_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/styleguide/src/lib/Foundations/System/ResponsiveProperties/ResponsiveProperties.stories.tsx");const parameters={title:"Responsive Props",subtitle:"All system props accept a syntax to generate responsive styles on a per prop basis",source:{repo:"variance",githubLink:"https://github.com/Codecademy/gamut/blob/cass-gm-842/packages/variance/src/utils/responsive.ts"}};function _createMdxContent(props){const _components={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_5__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_6__.W8,{title:"Foundations/System/ResponsiveProperties"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"ÃŸ"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This API is largely based on ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://styled-system.com/responsive-styles",rel:"nofollow",children:"styled-system's responsive styles"}),", it is not exactly the same however. Their documentation has a lot of great examples of behavior, however please refer to our documentation for our own best practices!"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"purpose",children:"Purpose"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Creating components that handle many screensizes can be tricky. Often we need to change specific CSS properties at different breakpoints to ensure that a component does not render in a way that will break the page or make it unusable. This leads to a problem for maintainers and reviewers:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"There is no way to tell that a component is going to adapt to the viewport or container at a glance."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Hidden interactions are hard to discover."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Traditional (S)CSS strategies have approached this in various ways:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Mobile First Media Queries: This ensures that the smallest layouts will always behave appropriately. Such that any changes to larger screens, the screen size we almost always design and develop for, must override the styles that work for everything, not the other way around."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Declarative Classnames: Imposing a naming structure that allows you to see intended behavior from the name itself."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"We've taken these two core values to heart by adopting a responsive property syntax that ensures that:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Behavior can be determined at a glance at the level of configuration."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Breakpoints are always correctly ordered and consistently rendered."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Here is an example:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"<FlexBox containerType=\"inline-size\">\n  <Box display={{ _: 'none', sm: 'block', c_md: 'flex' }} />\n</FlexBox>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Output styles:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-css",children:".Box {\n  display: 'none';\n\n  @media (min-width: 480px) {\n    display: 'block';\n  }\n\n  @container (min-width: 1024px) {\n    display: 'flex';\n  }\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"responsive-syntax",children:"Responsive syntax"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"We've matched this syntax to each of our named breakpoints:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.wI,{..._shared_elements__WEBPACK_IMPORTED_MODULE_3__.breakpoint}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"object",children:"Object"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This syntax is declarative and unstructured e.g. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"padding={{ xl: 64 }}"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"export interface BreakpointMap<T> {\n  _?: T; // No media query\n  xs?: T; // `xs` media query\n  sm?: T; // `sm` media query\n  md?: T; // `md` media query\n  lg?: T; // `lg` media query\n  xl?: T; // `xl` media query\n  c_xs?: T; // `c_xs` container query\n  c_sm?: T; // `c_sm` container query\n  c_md?: T; // `c_md` container query\n  c_lg?: T; // `c_lg` container query\n  c_xl?: T; // `c_xl` container query\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"array",children:"Array"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This structure is implicit but ordered e.g. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"padding={[16, 24, 32, 48]}"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"export interface BreakpointArray<T> {\n  0?: T; // No media query\n  1?: T; // `xs` media query\n  2?: T; // `sm` media query\n  3?: T; // `md` media query\n  4?: T; // `lg` media query\n  5?: T; // `xl` media query\n  6?: T; // `c_xs` container query\n  7?: T; // `c_sm` container query\n  8?: T; // `c_md` container query\n  9?: T; // `c_lg` container query\n  10?: T; // `c_xl` container query\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Both are valid syntaxes for all stystem props:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"export type ResponsiveProp<T> = T | BreakpointMap<T> | BreakpointArray<T>;\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Here are some examples of what the expected output will be for certain configurations:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// 1\n<Box p={[16, 24]} py={12} />\n// 2\n<Box width={{ _: '100%', xl: '50%' }} />\n// 3\n<Box display={{ lg: 'none' }} />\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-css",children:"/** 1 */\n.Box {\n  padding: 12px 16px;\n  @media (min-width: 480px) {\n    padding: 12px 24px;\n  }\n}\n/** 2 */\n.Box {\n  width: 100%;\n  @media (min-width: 1440px) {\n    width: 50%;\n  }\n}\n/** 3 */\n.Box {\n  @media (min-width: 1200px) {\n    display: none;\n  }\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"what-syntax-should-i-use",children:"What syntax should I use?"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Since both syntaxes perform the same task it can be unclear which syntax is preferrable to another, heres some best practices for picking the syntax that will be most readable."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"when-to-use-object-syntax",children:"When to use object syntax"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Single Breakpoint Styles - Sometimes you need only change a property value at a single breakpoint. This is far easier in the object syntax than in the array."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// Simple\n<Text fontSize={{ lg: 26 }} />\n\n// Unreadable because there are no values for everything preceding `lg`\n<Text fontSize={[ , , , 26]} />\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"2",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Skipping Breakpoints - Since the object syntax is unordered it makes setting disparate behavior far easier to read and understand than the array."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// 14 at the smallest size and 64 at the largest\n<Text fontSize={{ _: 14, xl: 64 }} />\n\n// When does 64 even get applied here?\n<Text fontSize={[14, , , ,64]} />\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"when-to-use-the-array-syntax",children:"When to use the array syntax"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"When specifying values at every breakpoint - Since array props are ordered we can always read the behavior left to right."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// Order and readable\n<Text fontSize={[14, 16, 18, 20, 26, 64]} />\n\n// Unordered and verbose\n<Text\n  fontSize={{\n    md: 20,\n    _:14,\n    xs: 16,\n    xl: 64,\n    sm: 18,\n    lg: 26\n  }}\n/>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"2",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"When default values matter - There are some cases where not having a base style set to a property will cause uninteded behavior, object lets you omit these without being explicit potentially causing bugs."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// looks safe but will render as 1 column at smallest screen size\n<Column size={{ xs: 12, sm: 6 }} />\n\n// this will not as we must explicity declare the breakpoint value as undefined\n<Column size={[12, ,6]} />\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"container-queries",children:"Container Queries"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Container queries allow components to adapt based on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"size of their parent container"})," instead of the viewport. This empowers true component-level responsivenessâ€”widgets can live anywhere in a layout and still look correct."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Our responsive prop API provides a parallel set of breakpoint keys that resolve to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container"})," rules:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"c_xs"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container (min-width: 480px)"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"c_sm"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container (min-width: 768px)"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"c_md"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container (min-width: 1024px)"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"c_lg"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container (min-width: 1200px)"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"c_xl"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@container (min-width: 1440px)"})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["These work exactly like the existing media-query keysâ€”you can use them in both ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"object"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"array"})," syntaxes and freely mix them with standard media breakpoints. The only caveat is ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"you must declare a container for container queries to work."})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"declaring-a-container-for-container-queries",children:"Declaring a Container for Container Queries"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To use container queries, the parent element of your responsive component must be a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_container_queries",rel:"nofollow",children:"CSS Container"}),". This is typically done by setting the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"container-type"})," property on the parent. The most common value is ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"inline-size"}),", which enables queries based on the element's width."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"<FlexBox containerType=\"inline-size\">\n  <Box display={{ _: 'none', sm: 'block', c_md: 'flex' }} />\n</FlexBox>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"It is good practice to set a fallback media query value for older or unsupported browsers."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Opt-in when needed"})," â€“ use media breakpoints for page-level layout shifts; use container queries for components that must react to their allotted space."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Declare containers"})," â€“ add ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"container-type"})," to the element whose descendants should listen to container breakpoints."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Stay readable"})," â€“ the same guidelines for choosing object vs. array syntax apply. Use object syntax for isolated container breakpoints and the ordered array syntax when specifying every breakpoint."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"media-queries",children:"Media Queries"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_6__.Hl,{of:_ResponsiveProperties_stories__WEBPACK_IMPORTED_MODULE_4__.MediaQueries}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"container-queries-1",children:"Container Queries"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_6__.Hl,{of:_ResponsiveProperties_stories__WEBPACK_IMPORTED_MODULE_4__.ContainerQueries}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"combined-queries",children:"Combined Queries"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_6__.Hl,{of:_ResponsiveProperties_stories__WEBPACK_IMPORTED_MODULE_4__.CombinedQueries})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_5__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Foundations/System/ResponsiveProperties/ResponsiveProperties.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CombinedQueries:()=>CombinedQueries,ContainerQueries:()=>ContainerQueries,MediaQueries:()=>MediaQueries,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/gamut/src/Box/FlexBox.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/Box/Box.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,args:{center:!0,height:"500px",width:1}},MediaQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"paleBlue",md:"orange"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium media-query breakpoint."})})},ContainerQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{containerType:"inline-size",...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"paleBlue",c_md:"orange"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium container-query breakpoint."})})},CombinedQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{containerType:"inline-size",...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"beige",md:"background-disabled",c_lg:"primary-inverse"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium media-query breakpoint and at the large container-query breakpoint."})})},__namedExportsOrder=["MediaQueries","ContainerQueries","CombinedQueries"];MediaQueries.parameters={...MediaQueries.parameters,docs:{...MediaQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox {...args}>\n      <Box bg={{\n      _: 'paleBlue',\n      md: 'orange'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium media-query breakpoint.\n      </Box>\n    </FlexBox>\n}",...MediaQueries.parameters?.docs?.source}}},ContainerQueries.parameters={...ContainerQueries.parameters,docs:{...ContainerQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox containerType=\"inline-size\" {...args}>\n      <Box bg={{\n      _: 'paleBlue',\n      c_md: 'orange'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium container-query\n        breakpoint.\n      </Box>\n    </FlexBox>\n}",...ContainerQueries.parameters?.docs?.source}}},CombinedQueries.parameters={...CombinedQueries.parameters,docs:{...CombinedQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox containerType=\"inline-size\" {...args}>\n      <Box bg={{\n      _: 'beige',\n      md: 'background-disabled',\n      c_lg: 'primary-inverse'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium media-query breakpoint and\n        at the large container-query breakpoint.\n      </Box>\n    </FlexBox>\n}",...CombinedQueries.parameters?.docs?.source}}}}}]);