"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[3629],{"./packages/styleguide/src/lib/Foundations/Theme/CreatingThemes.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx");const parameters={id:"Foundations/Theme/Creating Themes",title:"Creating Themes",subtitle:"How to create custom themes using gamut-styles and the createTheme builder",status:"current"};function _createMdxContent(props){const _components={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Foundations/Theme/Creating Themes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The gamut-styles theme system is built on top of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@codecademy/variance"})," and provides a powerful, type-safe way to create custom themes. This guide will walk you through creating your own themes and understanding how they integrate with Gamut components."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Themes in gamut-styles are created using the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createTheme"})," builder pattern, which provides:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Type Safety"}),": Full TypeScript support with autocomplete and type checking"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"CSS Variables"}),": Automatic generation of CSS custom properties"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Color Modes"}),": Built-in support for light/dark mode switching"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Composability"}),": Easy theme inheritance and customization"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Component Integration"}),": Seamless integration with gamut components"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"basic-theme-structure",children:"Basic Theme Structure"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"All themes extend from a base theme and can be customized using the builder pattern:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import { createTheme } from '@codecademy/variance';\n\nconst myTheme = createTheme({\n  ...baseTheme,\n  fontFamily: customFontFamily,\n})\n  .addColors(colorPalette)\n  .addColorModes('light', colorModeConfig)\n  .addScale('customProperty', scaleFunction) // Only for NEW scales\n  .addName('my-theme')\n  .build();\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"creating-a-custom-theme",children:"Creating a Custom Theme"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"step-1-start-with-a-base-theme",children:"Step 1: Start with a Base Theme"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["It's best to start with the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"coreTheme"})," as your foundation unless you are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"sure"})," you have a full replacement for all the tokens. You can refer to the Core Theme documentation for a full list of essential tokens."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import { createTheme } from '@codecademy/variance';\nimport { coreTheme } from '@codecademy/gamut-styles';\n\nconst myCustomTheme = createTheme({\n  ...coreTheme,\n  // Your custom overrides here\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"step-2-define-your-color-palette",children:"Step 2: Define Your Color Palette"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Create a color palette object with your brand colors:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const myColorPalette = {\n  brand: {\n    primary: '#004C54',\n    kelly: '#00B388',\n    secondary: '#000000',\n    accent: '#A5ACAF',\n    black: '#000000',\n    white: '#FFFFFF',\n    charcoal: '#565A5C',\n  },\n  kelly: {\n    50: '#E6FFF7',\n    100: '#CCFFEF',\n    200: '#99FFDF',\n    300: '#66FFCF',\n    400: '#33E6B0',\n    500: '#00B388',\n    600: '#009970',\n    700: '#008060',\n    800: '#006650',\n    900: '#004D3D',\n  },\n  midnight: {\n    50: '#E6F4F5',\n    100: '#CCE9EB',\n    200: '#99D3D7',\n    300: '#66BDC3',\n    400: '#33A7AF',\n    500: '#00919B',\n    600: '#007680',\n    700: '#005A66',\n    800: '#004C54',\n    900: '#003D4D',\n  },\n  silver: {\n    50: '#F7F8F8',\n    100: '#ECEEED',\n    200: '#D9DCDB',\n    300: '#C6CAC9',\n    400: '#B3B8B7',\n    500: '#A5ACAF',\n    600: '#8A9093',\n    700: '#6F7477',\n    800: '#565A5C',\n    900: '#3D4041',\n  },\n  accent: {\n    kelly: '#00B388',\n    midnight: '#004C54',\n    silver: '#A5ACAF',\n    gold: '#C5B358',\n  },\n\n  success: '#10B981',\n  warning: '#F59E0B',\n  error: '#DC2626',\n  info: '#3B82F6',\n};\n\nconst myTheme = createTheme({\n  ...coreTheme,\n}).addColors(myColorPalette);\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"step-3-configure-color-modes",children:"Step 3: Configure Color Modes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Define how your colors map to semantic tokens in different modes. For more information about color modes, see the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Foundations/ColorMode",children:"ColorMode documentation"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const myTheme = createTheme({\n  ...coreTheme,\n})\n  .addColors(myColorPalette)\n  .addColorModes('light', {\n    light: {\n      text: {\n        _: 'brand-black',\n        accent: 'brand-kelly',\n        disabled: 'silver-400',\n        secondary: 'silver-700',\n      },\n      feedback: {\n        error: 'error',\n        success: 'success',\n        warning: 'warning',\n      },\n      background: {\n        _: 'brand-white',\n        contrast: 'brand-white',\n        current: 'brand-white',\n        primary: 'kelly-50',\n        selected: 'kelly-100',\n        disabled: 'silver-200',\n        hover: 'kelly-100',\n        success: 'success',\n        warning: 'warning',\n        error: 'error',\n      },\n      shadow: {\n        primary: 'brand-black',\n        secondary: 'silver-600',\n      },\n      primary: {\n        _: 'brand-kelly',\n        hover: 'kelly-700',\n        inverse: 'brand-white',\n      },\n      secondary: {\n        _: 'brand-accent',\n        hover: 'silver-700',\n      },\n      danger: {\n        _: 'error',\n        hover: 'error',\n      },\n      interface: {\n        _: 'brand-kelly',\n        hover: 'kelly-700',\n      },\n      border: {\n        primary: 'kelly-500',\n        secondary: 'kelly-200',\n        tertiary: 'kelly-100',\n        disabled: 'silver-400',\n      },\n    },\n    dark: {\n      text: {\n        _: 'brand-white',\n        accent: 'brand-accent',\n        disabled: 'silver-500',\n        secondary: 'silver-400',\n      },\n      feedback: {\n        error: 'error',\n        success: 'success',\n        warning: 'warning',\n      },\n      background: {\n        _: 'brand-black',\n        contrast: 'brand-black',\n        current: 'brand-black',\n        primary: 'midnight-800',\n        selected: 'midnight-700',\n        disabled: 'midnight-700',\n        hover: 'midnight-700',\n        success: 'success',\n        warning: 'warning',\n        error: 'error',\n      },\n      shadow: {\n        primary: 'brand-black',\n        secondary: 'midnight-900',\n      },\n      primary: {\n        _: 'brand-accent',\n        hover: 'silver-400',\n        inverse: 'brand-black',\n      },\n      secondary: {\n        _: 'midnight-500',\n        hover: 'midnight-400',\n      },\n      danger: {\n        _: 'error',\n        hover: 'error',\n      },\n      interface: {\n        _: 'brand-accent',\n        hover: 'silver-400',\n      },\n      border: {\n        primary: 'midnight-600',\n        secondary: 'midnight-700',\n        tertiary: 'midnight-800',\n        disabled: 'silver-600',\n      },\n    },\n  });\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"step-4-customizing-scales",children:"Step 4: Customizing Scales"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If you want to customize existing scales from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"coreTheme"})," (like ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"spacing"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"fontFamily"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"fontWeight"}),", etc.), override them in the initial ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createTheme()"})," object:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:'const myTheme = createTheme({\n  ...coreTheme,\n  // Override existing scales\n  fontFamily: {\n    ...coreTheme.fontFamily,\n    base: \'"Roboto", "Helvetica Neue", Arial, sans-serif\',\n    heading: \'"Roboto", "Helvetica Neue", Arial, sans-serif\',\n    monospace: \'Menlo, Monaco, "Courier New", monospace\',\n  },\n  fontWeight: {\n    ...coreTheme.fontWeight,\n    title: 900,\n    heading: 700,\n  },\n  spacing: {\n    ...coreTheme.spacing,\n    xs: 4,\n    sm: 8,\n    md: 16,\n  },\n})\n  .addColors(myColorPalette)\n  .addColorModes(\'light\', colorModeConfig);\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"addScale"})," method to add ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"new"})," scales that don't exist in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"coreTheme"}),". The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"colors"})," parameter includes both palette colors and semantic color tokens:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const myTheme = createTheme({\n  ...coreTheme,\n  // Override existing scales if needed\n  spacing: customSpacing,\n})\n  .addColors(myColorPalette)\n  .addColorModes('light', colorModeConfig)\n  .addScale('shadows', ({ colors }) => ({\n    sm: `0 1px 2px ${colors['shadow-primary']}`,\n    md: `0 4px 6px ${colors['shadow-secondary']}`,\n    lg: `0 10px 15px ${colors['shadow-primary']}`,\n    xl: `0 20px 25px ${colors['shadow-primary']}`,\n  }))\n  .addScale('customProperty', () => ({\n    small: '2px',\n    medium: '4px',\n    large: '8px',\n  }));\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"step-5-create-css-variables",children:"Step 5: Create CSS Variables"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Convert scales to CSS variables for better performance and theming:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const myTheme = createTheme({\n  ...coreTheme,\n})\n  .addColors(myColorPalette)\n  .addColorModes('light', colorModeConfig)\n  .addScale('shadows', shadowConfig)\n  .createScaleVariables('shadows') // Creates --shadow-sm, --shadow-md, etc.\n  .createScaleVariables('elements') // Creates CSS variables for elements scale\n  .addName('my-custom-theme')\n  .build();\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import { createTheme } from '@codecademy/variance';\nimport { coreTheme } from '@codecademy/gamut-styles';\n\n// Define your color palette\nconst customPalette = {\n  brand: {\n    primary: '#004C54',\n    kelly: '#00B388',\n    secondary: '#000000',\n    accent: '#A5ACAF',\n    black: '#000000',\n    white: '#FFFFFF',\n    charcoal: '#565A5C',\n  },\n  kelly: {\n    50: '#E6FFF7',\n    100: '#CCFFEF',\n    200: '#99FFDF',\n    300: '#66FFCF',\n    400: '#33E6B0',\n    500: '#00B388',\n    600: '#009970',\n    700: '#008060',\n    800: '#006650',\n    900: '#004D3D',\n  },\n  midnight: {\n    50: '#E6F4F5',\n    100: '#CCE9EB',\n    200: '#99D3D7',\n    300: '#66BDC3',\n    400: '#33A7AF',\n    500: '#00919B',\n    600: '#007680',\n    700: '#005A66',\n    800: '#004C54',\n    900: '#003D4D',\n  },\n  silver: {\n    50: '#F7F8F8',\n    100: '#ECEEED',\n    200: '#D9DCDB',\n    300: '#C6CAC9',\n    400: '#B3B8B7',\n    500: '#A5ACAF',\n    600: '#8A9093',\n    700: '#6F7477',\n    800: '#565A5C',\n    900: '#3D4041',\n  },\n  accent: {\n    kelly: '#00B388',\n    midnight: '#004C54',\n    silver: '#A5ACAF',\n    gold: '#C5B358',\n  },\n\n  success: '#10B981',\n  warning: '#F59E0B',\n  error: '#DC2626',\n  info: '#3B82F6',\n};\n\n// Create the theme\nexport const customTheme = createTheme({\n  ...coreTheme,\n  // Override existing scales\n  fontFamily: {\n    ...coreTheme.fontFamily,\n    base: '\"Roboto\", \"Helvetica Neue\", Arial, sans-serif',\n    heading: '\"Roboto\", \"Helvetica Neue\", Arial, sans-serif',\n    monospace: 'Menlo, Monaco, \"Courier New\", monospace',\n  },\n  fontWeight: {\n    ...coreTheme.fontWeight,\n    title: 900,\n    heading: 700,\n  },\n  spacing: {\n    ...coreTheme.spacing,\n    xs: 4,\n    sm: 8,\n    md: 16,\n  },\n})\n  .addColors(customPalette)\n  .addColorModes('light', {\n    light: {\n      text: {\n        _: 'brand-black',\n        accent: 'brand-kelly',\n        disabled: 'silver-400',\n        secondary: 'silver-700',\n      },\n      feedback: {\n        error: 'error',\n        success: 'success',\n        warning: 'warning',\n      },\n      background: {\n        _: 'brand-white',\n        contrast: 'brand-white',\n        current: 'brand-white',\n        primary: 'kelly-50',\n        selected: 'kelly-100',\n        disabled: 'silver-200',\n        hover: 'kelly-100',\n        success: 'success',\n        warning: 'warning',\n        error: 'error',\n      },\n      shadow: {\n        primary: 'brand-black',\n        secondary: 'silver-600',\n      },\n      primary: {\n        _: 'brand-kelly',\n        hover: 'kelly-700',\n        inverse: 'brand-white',\n      },\n      secondary: {\n        _: 'brand-accent',\n        hover: 'silver-700',\n      },\n      danger: {\n        _: 'error',\n        hover: 'error',\n      },\n      interface: {\n        _: 'brand-kelly',\n        hover: 'kelly-700',\n      },\n      border: {\n        primary: 'kelly-500',\n        secondary: 'kelly-200',\n        tertiary: 'kelly-100',\n        disabled: 'silver-400',\n      },\n    },\n    dark: {\n      text: {\n        _: 'brand-white',\n        accent: 'brand-accent',\n        disabled: 'silver-500',\n        secondary: 'silver-400',\n      },\n      feedback: {\n        error: 'error',\n        success: 'success',\n        warning: 'warning',\n      },\n      background: {\n        _: 'brand-black',\n        contrast: 'brand-black',\n        current: 'brand-black',\n        primary: 'midnight-800',\n        selected: 'midnight-700',\n        disabled: 'midnight-700',\n        hover: 'midnight-700',\n        success: 'success',\n        warning: 'warning',\n        error: 'error',\n      },\n      shadow: {\n        primary: 'brand-black',\n        secondary: 'midnight-900',\n      },\n      primary: {\n        _: 'brand-accent',\n        hover: 'silver-400',\n        inverse: 'brand-black',\n      },\n      secondary: {\n        _: 'midnight-500',\n        hover: 'midnight-400',\n      },\n      danger: {\n        _: 'error',\n        hover: 'error',\n      },\n      interface: {\n        _: 'brand-accent',\n        hover: 'silver-400',\n      },\n      border: {\n        primary: 'midnight-600',\n        secondary: 'midnight-700',\n        tertiary: 'midnight-800',\n        disabled: 'silver-600',\n      },\n    },\n  })\n  // Adding new custom scales that don't exist in coreTheme\n  .addScale('shadows', ({ colors }) => ({\n    // Using semantic colors so shadows adapt to light/dark mode\n    sm: `0 1px 2px 0 ${colors['shadow-primary']}`,\n    md: `0 4px 6px -1px ${colors['shadow-primary']}`,\n    lg: `0 10px 15px -3px ${colors['shadow-primary']}`,\n    xl: `0 20px 25px -5px ${colors['shadow-primary']}`,\n  }))\n  .createScaleVariables('shadows')\n  .addName('custom-theme')\n  .build();\n\nexport type CustomThemeShape = typeof customTheme;\nexport interface CustomTheme extends CustomThemeShape {}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"using-your-custom-theme",children:"Using Your Custom Theme"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Follow the instructions detailed in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Meta/Installation",children:"Installation docs"})," to use your new custom theme with Gamut."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Replace all tokens or extend from coreTheme"}),": This ensures compatibility with Gamut components"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Override vs Add scales"}),": Override existing scales (like ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"spacing"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"borderRadii"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"fontFamily"}),") in the initial ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createTheme()"})," object. Only use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".addScale()"})," for truly new scales that don't exist in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"coreTheme"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use semantic color names"}),": Map your brand colors to semantic tokens (primary, secondary, etc.)"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Provide both light and dark modes"}),": This ensures your theme works in all contexts"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use CSS variables for performance"}),": Convert frequently used scales to CSS variables"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Keep color palettes organized"}),": Group related colors together (brand, neutral, feedback, etc.)"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Test with Gamut components"}),": Ensure your theme works well with existing components"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If you'd like to test your theme with components locally, you can add it the Storybook ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"GamutThemeProvider.tsx"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"preview.ts"})," to see it in the theme switcher tool."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// packages/styleguide/.storybook/theming/GamutThemeProvider.tsx\n    const themeMap = {\n      core: coreTheme,\n      admin: adminTheme,\n      lxStudio: lxStudioTheme,\n      percipio: percipioTheme,\n      your-theme-here: yourCustomTheme,\n    } as const;\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// .storybook/preview.ts\n  theme: {\n    name: 'Theme',\n    description: 'Global theme for components',\n    defaultValue: 'percipio',\n    toolbar: {\n      icon: 'paintbrush',\n      items: [\n        { value: 'core', title: 'Core' },\n        { value: 'admin', title: 'Admin' },\n        { value: 'lxStudio', title: 'LX Studio' },\n        { value: 'percipio', title: 'Percipio' },\n        { value: 'your-theme-here', title: 'Custom Theme' },\n      ],\n      showName: true,\n    },\n  },\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"integration-with-gamut-components",children:"Integration with Gamut Components"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"All Gamut components automatically use your custom theme through the theme context. The components will:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Use your custom colors for semantic tokens"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Apply your custom spacing, typography, and other design tokens"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Support your color modes (light/dark switching)"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Maintain type safety with your theme structure"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"This means you can create a completely custom look and feel while maintaining full compatibility with the Gamut component library."})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);