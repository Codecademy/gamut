"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[3530],{"./node_modules/@vidstack/react/prod/chunks/vidstack-BEzgE0Fx.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{getCastContext:()=>getCastContext,getCastErrorMessage:()=>getCastErrorMessage,getCastSession:()=>getCastSession,getCastSessionMedia:()=>getCastSessionMedia,hasActiveCastSession:()=>hasActiveCastSession,listenCastContextEvent:()=>listenCastContextEvent,loader:()=>loader});var _vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@vidstack/react/prod/chunks/vidstack-WyKbSRm0.js"),_vidstack_CNjv_Zem_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@vidstack/react/prod/chunks/vidstack-CNjv_Zem.js");function isCastConnected(){return getCastContext().getCastState()===cast.framework.CastState.CONNECTED}function getCastContext(){return window.cast.framework.CastContext.getInstance()}function getCastSession(){return getCastContext().getCurrentSession()}function getCastSessionMedia(){return getCastSession()?.getSessionObj().media[0]}function hasActiveCastSession(src){const contentId=getCastSessionMedia()?.media.contentId;return contentId===src?.src}function getCastErrorMessage(code){return`Google Cast Error Code: ${code}`}function listenCastContextEvent(type,handler){return(0,_vidstack_CNjv_Zem_js__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(getCastContext(),type,handler)}var loader=Object.freeze({__proto__:null,GoogleCastLoader:class GoogleCastLoader{name="google-cast";target;#player;get cast(){return getCastContext()}mediaType(){return"video"}canPlay(src){return _vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__.G_&&!_vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__.pz&&(0,_vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__.jx)(src)}async prompt(ctx){let loadEvent,openEvent,errorEvent;try{loadEvent=await this.#loadCastFramework(ctx),this.#player||(this.#player=new cast.framework.RemotePlayer,new cast.framework.RemotePlayerController(this.#player)),openEvent=ctx.player.createEvent("google-cast-prompt-open",{trigger:loadEvent}),ctx.player.dispatchEvent(openEvent),this.#notifyRemoteStateChange(ctx,"connecting",openEvent),await this.#showPrompt((0,_vidstack_CNjv_Zem_js__WEBPACK_IMPORTED_MODULE_0__.peek)(ctx.$props.googleCast)),ctx.$state.remotePlaybackInfo.set({deviceName:getCastSession()?.getCastDevice().friendlyName}),isCastConnected()&&this.#notifyRemoteStateChange(ctx,"connected",openEvent)}catch(code){const error=code instanceof Error?code:this.#createError((code+"").toUpperCase(),"Prompt failed.");throw errorEvent=ctx.player.createEvent("google-cast-prompt-error",{detail:error,trigger:openEvent??loadEvent,cancelable:!0}),ctx.player.dispatch(errorEvent),this.#notifyRemoteStateChange(ctx,isCastConnected()?"connected":"disconnected",errorEvent),error}finally{ctx.player.dispatch("google-cast-prompt-close",{trigger:errorEvent??openEvent??loadEvent})}}async load(ctx){if(_vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__.X3)throw Error("[vidstack] can not load google cast provider server-side");if(!this.#player)throw Error("[vidstack] google cast player was not initialized");return new((await __webpack_require__.e(8289).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@vidstack/react/prod/chunks/vidstack-7jdJQx_M.js"))).GoogleCastProvider)(this.#player,ctx)}async#loadCastFramework(ctx){if(function hasLoadedCastFramework(){return!!window.cast?.framework}())return;const loadStartEvent=ctx.player.createEvent("google-cast-load-start");ctx.player.dispatch(loadStartEvent),await(0,_vidstack_WyKbSRm0_js__WEBPACK_IMPORTED_MODULE_1__.k0)("https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"),await customElements.whenDefined("google-cast-launcher");const loadedEvent=ctx.player.createEvent("google-cast-loaded",{trigger:loadStartEvent});if(ctx.player.dispatch(loadedEvent),!function isCastAvailable(){return!!window.chrome?.cast?.isAvailable}())throw this.#createError("CAST_NOT_AVAILABLE","Google Cast not available on this platform.");return loadedEvent}async#showPrompt(options){this.#setOptions(options);const errorCode=await this.cast.requestSession();if(errorCode)throw this.#createError(errorCode.toUpperCase(),getCastErrorMessage(errorCode))}#setOptions(options){this.cast?.setOptions({language:"en-US",autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,receiverApplicationId:chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,resumeSavedSession:!0,androidReceiverCompatible:!0,...options})}#notifyRemoteStateChange(ctx,state,trigger){const detail={type:"google-cast",state};ctx.notify("remote-playback-change",detail,trigger)}#createError(code,message){const error=Error(message);return error.code=code,error}}})}}]);