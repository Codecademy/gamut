"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[1071],{"./packages/styleguide/src/lib/Foundations/System/ResponsiveProperties/ResponsiveProperties.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CombinedQueries:()=>CombinedQueries,ContainerQueries:()=>ContainerQueries,MediaQueries:()=>MediaQueries,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/gamut/src/Box/FlexBox.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/Box/Box.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,args:{center:!0,height:"500px",width:1}},MediaQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"paleBlue",md:"orange"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium media-query breakpoint."})})},ContainerQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{containerType:"inline-size",...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"paleBlue",c_md:"orange"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium container-query breakpoint."})})},CombinedQueries={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_1__.p,{containerType:"inline-size",...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.a,{bg:{_:"beige",md:"background-disabled",c_lg:"primary-inverse"},border:1,borderRadius:"sm",p:16,children:"My background color will change at the medium media-query breakpoint and at the large container-query breakpoint."})})},__namedExportsOrder=["MediaQueries","ContainerQueries","CombinedQueries"];MediaQueries.parameters={...MediaQueries.parameters,docs:{...MediaQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox {...args}>\n      <Box bg={{\n      _: 'paleBlue',\n      md: 'orange'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium media-query breakpoint.\n      </Box>\n    </FlexBox>\n}",...MediaQueries.parameters?.docs?.source}}},ContainerQueries.parameters={...ContainerQueries.parameters,docs:{...ContainerQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox containerType=\"inline-size\" {...args}>\n      <Box bg={{\n      _: 'paleBlue',\n      c_md: 'orange'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium container-query\n        breakpoint.\n      </Box>\n    </FlexBox>\n}",...ContainerQueries.parameters?.docs?.source}}},CombinedQueries.parameters={...CombinedQueries.parameters,docs:{...CombinedQueries.parameters?.docs,source:{originalSource:"{\n  render: args => <FlexBox containerType=\"inline-size\" {...args}>\n      <Box bg={{\n      _: 'beige',\n      md: 'background-disabled',\n      c_lg: 'primary-inverse'\n    }} border={1} borderRadius=\"sm\" p={16}>\n        My background color will change at the medium media-query breakpoint and\n        at the large container-query breakpoint.\n      </Box>\n    </FlexBox>\n}",...CombinedQueries.parameters?.docs?.source}}}}}]);