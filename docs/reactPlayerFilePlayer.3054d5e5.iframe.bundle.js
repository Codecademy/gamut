(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[7458],{"./node_modules/react-player/lib/players/FilePlayer.js":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__publicField=(obj,key,value)=>(((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value})(obj,"symbol"!=typeof key?key+"":key,value),value),FilePlayer_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(FilePlayer_exports,{default:()=>FilePlayer}),module.exports=(mod=FilePlayer_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_react=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("./node_modules/react/index.js")),import_utils=__webpack_require__("./node_modules/react-player/lib/utils.js"),import_patterns=__webpack_require__("./node_modules/react-player/lib/patterns.js");const HAS_NAVIGATOR="undefined"!=typeof navigator,IS_IPAD_PRO=HAS_NAVIGATOR&&"MacIntel"===navigator.platform&&navigator.maxTouchPoints>1,IS_IOS=HAS_NAVIGATOR&&(/iPad|iPhone|iPod/.test(navigator.userAgent)||IS_IPAD_PRO)&&!window.MSStream,IS_SAFARI=HAS_NAVIGATOR&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&!window.MSStream,MATCH_DROPBOX_URL=/www\.dropbox\.com\/.+/,MATCH_CLOUDFLARE_STREAM=/https:\/\/watch\.cloudflarestream\.com\/([a-z0-9]+)/;class FilePlayer extends import_react.Component{constructor(){super(...arguments),__publicField(this,"onReady",((...args)=>this.props.onReady(...args))),__publicField(this,"onPlay",((...args)=>this.props.onPlay(...args))),__publicField(this,"onBuffer",((...args)=>this.props.onBuffer(...args))),__publicField(this,"onBufferEnd",((...args)=>this.props.onBufferEnd(...args))),__publicField(this,"onPause",((...args)=>this.props.onPause(...args))),__publicField(this,"onEnded",((...args)=>this.props.onEnded(...args))),__publicField(this,"onError",((...args)=>this.props.onError(...args))),__publicField(this,"onPlayBackRateChange",(event=>this.props.onPlaybackRateChange(event.target.playbackRate))),__publicField(this,"onEnablePIP",((...args)=>this.props.onEnablePIP(...args))),__publicField(this,"onDisablePIP",(e=>{const{onDisablePIP,playing}=this.props;onDisablePIP(e),playing&&this.play()})),__publicField(this,"onPresentationModeChange",(e=>{if(this.player&&(0,import_utils.supportsWebKitPresentationMode)(this.player)){const{webkitPresentationMode}=this.player;"picture-in-picture"===webkitPresentationMode?this.onEnablePIP(e):"inline"===webkitPresentationMode&&this.onDisablePIP(e)}})),__publicField(this,"onSeek",(e=>{this.props.onSeek(e.target.currentTime)})),__publicField(this,"mute",(()=>{this.player.muted=!0})),__publicField(this,"unmute",(()=>{this.player.muted=!1})),__publicField(this,"renderSourceElement",((source,index)=>"string"==typeof source?import_react.default.createElement("source",{key:index,src:source}):import_react.default.createElement("source",{key:index,...source}))),__publicField(this,"renderTrack",((track,index)=>import_react.default.createElement("track",{key:index,...track}))),__publicField(this,"ref",(player=>{this.player&&(this.prevPlayer=this.player),this.player=player}))}componentDidMount(){this.props.onMount&&this.props.onMount(this),this.addListeners(this.player);const src=this.getSource(this.props.url);src&&(this.player.src=src),(IS_IOS||this.props.config.forceDisableHls)&&this.player.load()}componentDidUpdate(prevProps){this.shouldUseAudio(this.props)!==this.shouldUseAudio(prevProps)&&(this.removeListeners(this.prevPlayer,prevProps.url),this.addListeners(this.player)),this.props.url===prevProps.url||(0,import_utils.isMediaStream)(this.props.url)||this.props.url instanceof Array||(this.player.srcObject=null)}componentWillUnmount(){this.player.removeAttribute("src"),this.removeListeners(this.player),this.hls&&this.hls.destroy()}addListeners(player){const{url,playsinline}=this.props;player.addEventListener("play",this.onPlay),player.addEventListener("waiting",this.onBuffer),player.addEventListener("playing",this.onBufferEnd),player.addEventListener("pause",this.onPause),player.addEventListener("seeked",this.onSeek),player.addEventListener("ended",this.onEnded),player.addEventListener("error",this.onError),player.addEventListener("ratechange",this.onPlayBackRateChange),player.addEventListener("enterpictureinpicture",this.onEnablePIP),player.addEventListener("leavepictureinpicture",this.onDisablePIP),player.addEventListener("webkitpresentationmodechanged",this.onPresentationModeChange),this.shouldUseHLS(url)||player.addEventListener("canplay",this.onReady),playsinline&&(player.setAttribute("playsinline",""),player.setAttribute("webkit-playsinline",""),player.setAttribute("x5-playsinline",""))}removeListeners(player,url){player.removeEventListener("canplay",this.onReady),player.removeEventListener("play",this.onPlay),player.removeEventListener("waiting",this.onBuffer),player.removeEventListener("playing",this.onBufferEnd),player.removeEventListener("pause",this.onPause),player.removeEventListener("seeked",this.onSeek),player.removeEventListener("ended",this.onEnded),player.removeEventListener("error",this.onError),player.removeEventListener("ratechange",this.onPlayBackRateChange),player.removeEventListener("enterpictureinpicture",this.onEnablePIP),player.removeEventListener("leavepictureinpicture",this.onDisablePIP),player.removeEventListener("webkitpresentationmodechanged",this.onPresentationModeChange),this.shouldUseHLS(url)||player.removeEventListener("canplay",this.onReady)}shouldUseAudio(props){return!props.config.forceVideo&&(!props.config.attributes.poster&&(import_patterns.AUDIO_EXTENSIONS.test(props.url)||props.config.forceAudio))}shouldUseHLS(url){return!!(IS_SAFARI&&this.props.config.forceSafariHLS||this.props.config.forceHLS)||!IS_IOS&&!this.props.config.forceDisableHls&&(import_patterns.HLS_EXTENSIONS.test(url)||MATCH_CLOUDFLARE_STREAM.test(url))}shouldUseDASH(url){return import_patterns.DASH_EXTENSIONS.test(url)||this.props.config.forceDASH}shouldUseFLV(url){return import_patterns.FLV_EXTENSIONS.test(url)||this.props.config.forceFLV}load(url){const{hlsVersion,hlsOptions,dashVersion,flvVersion}=this.props.config;if(this.hls&&this.hls.destroy(),this.dash&&this.dash.reset(),this.shouldUseHLS(url)&&(0,import_utils.getSDK)("https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js".replace("VERSION",hlsVersion),"Hls").then((Hls=>{if(this.hls=new Hls(hlsOptions),this.hls.on(Hls.Events.MANIFEST_PARSED,(()=>{this.props.onReady()})),this.hls.on(Hls.Events.ERROR,((e,data)=>{this.props.onError(e,data,this.hls,Hls)})),MATCH_CLOUDFLARE_STREAM.test(url)){const id=url.match(MATCH_CLOUDFLARE_STREAM)[1];this.hls.loadSource("https://videodelivery.net/{id}/manifest/video.m3u8".replace("{id}",id))}else this.hls.loadSource(url);this.hls.attachMedia(this.player),this.props.onLoaded()})),this.shouldUseDASH(url)&&(0,import_utils.getSDK)("https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js".replace("VERSION",dashVersion),"dashjs").then((dashjs=>{this.dash=dashjs.MediaPlayer().create(),this.dash.initialize(this.player,url,this.props.playing),this.dash.on("error",this.props.onError),parseInt(dashVersion)<3?this.dash.getDebug().setLogToBrowserConsole(!1):this.dash.updateSettings({debug:{logLevel:dashjs.Debug.LOG_LEVEL_NONE}}),this.props.onLoaded()})),this.shouldUseFLV(url)&&(0,import_utils.getSDK)("https://cdn.jsdelivr.net/npm/flv.js@VERSION/dist/flv.min.js".replace("VERSION",flvVersion),"flvjs").then((flvjs=>{this.flv=flvjs.createPlayer({type:"flv",url}),this.flv.attachMediaElement(this.player),this.flv.on(flvjs.Events.ERROR,((e,data)=>{this.props.onError(e,data,this.flv,flvjs)})),this.flv.load(),this.props.onLoaded()})),url instanceof Array)this.player.load();else if((0,import_utils.isMediaStream)(url))try{this.player.srcObject=url}catch(e){this.player.src=window.URL.createObjectURL(url)}}play(){const promise=this.player.play();promise&&promise.catch(this.props.onError)}pause(){this.player.pause()}stop(){this.player.removeAttribute("src"),this.dash&&this.dash.reset()}seekTo(seconds,keepPlaying=!0){this.player.currentTime=seconds,keepPlaying||this.pause()}setVolume(fraction){this.player.volume=fraction}enablePIP(){this.player.requestPictureInPicture&&document.pictureInPictureElement!==this.player?this.player.requestPictureInPicture():(0,import_utils.supportsWebKitPresentationMode)(this.player)&&"picture-in-picture"!==this.player.webkitPresentationMode&&this.player.webkitSetPresentationMode("picture-in-picture")}disablePIP(){document.exitPictureInPicture&&document.pictureInPictureElement===this.player?document.exitPictureInPicture():(0,import_utils.supportsWebKitPresentationMode)(this.player)&&"inline"!==this.player.webkitPresentationMode&&this.player.webkitSetPresentationMode("inline")}setPlaybackRate(rate){try{this.player.playbackRate=rate}catch(error){this.props.onError(error)}}getDuration(){if(!this.player)return null;const{duration,seekable}=this.player;return duration===1/0&&seekable.length>0?seekable.end(seekable.length-1):duration}getCurrentTime(){return this.player?this.player.currentTime:null}getSecondsLoaded(){if(!this.player)return null;const{buffered}=this.player;if(0===buffered.length)return 0;const end=buffered.end(buffered.length-1),duration=this.getDuration();return end>duration?duration:end}getSource(url){const useHLS=this.shouldUseHLS(url),useDASH=this.shouldUseDASH(url),useFLV=this.shouldUseFLV(url);if(!(url instanceof Array||(0,import_utils.isMediaStream)(url)||useHLS||useDASH||useFLV))return MATCH_DROPBOX_URL.test(url)?url.replace("www.dropbox.com","dl.dropboxusercontent.com"):url}render(){const{url,playing,loop,controls,muted,config,width,height}=this.props,Element=this.shouldUseAudio(this.props)?"audio":"video",style={width:"auto"===width?width:"100%",height:"auto"===height?height:"100%"};return import_react.default.createElement(Element,{ref:this.ref,src:this.getSource(url),style,preload:"auto",autoPlay:playing||void 0,controls,muted,loop,...config.attributes},url instanceof Array&&url.map(this.renderSourceElement),config.tracks.map(this.renderTrack))}}__publicField(FilePlayer,"displayName","FilePlayer"),__publicField(FilePlayer,"canPlay",import_patterns.canPlay.file)}}]);