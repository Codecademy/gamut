"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[2838],{"./packages/styleguide/src/lib/Atoms/UtilityComponents/FocusTrap/FocusTrap.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_FocusTrap_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Atoms/UtilityComponents/FocusTrap/FocusTrap.stories.tsx");const parameters={subtitle:"Used for modal and dialog experiences like `Overlay` and `ModalDeprecated`, this component controls focus management behavior when we need to limit focus to a single area of the page for some amount of time. It doesn't need to be a modal or overlay, and can instead be controlled with the `active` prop.",status:"current",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/FocusTrap"}};function _createMdxContent(props){const _components={a:"a",code:"code",h2:"h2",p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_FocusTrap_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["FocusTrap is a wrapper around the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://github.com/theKashey/react-focus-on",rel:"nofollow",children:"react-focus-on"})," library, so any necessary functionality that provides should be exposed through this component. If necessary, you can pass props directly to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"react-focus-on"})," through the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"focusOnProps"})," prop."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_FocusTrap_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Atoms/UtilityComponents/FocusTrap/FocusTrap.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/FocusTrap/index.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/gamut/src/Box/Box.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/gamut/src/Button/FillButton.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/gamut/src/GridForm/GridForm.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.s,args:{}},Default=()=>{const[trapActive,setActive]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__.a,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_4__.S,{onClick:()=>setActive(!0),children:"Enable Focus Trap"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.s,{active:trapActive,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__.a,{p:24,my:24,border:1,borderColor:trapActive?"black":"gray-200",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_5__.B,{fields:[{label:"email",name:"email-text",size:12,type:"text"},{label:"password",name:"password-text",size:12,type:"password"}],onSubmit:()=>{setActive(!1)},submit:{contents:"Disable Focus Trap",position:"right",size:12}})})})]})})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => {\n  const [trapActive, setActive] = useState(false);\n  return <>\n      <Box>\n        <FillButton onClick={() => setActive(true)}>\n          Enable Focus Trap\n        </FillButton>\n        <FocusTrap active={trapActive}>\n          <Box p={24} my={24} border={1} borderColor={trapActive ? 'black' : 'gray-200'}>\n            <GridForm fields={[{\n            label: 'email',\n            name: 'email-text',\n            size: 12,\n            type: 'text'\n          }, {\n            label: 'password',\n            name: 'password-text',\n            size: 12,\n            type: 'password'\n          }]} onSubmit={() => {\n            setActive(false);\n          }} submit={{\n            contents: 'Disable Focus Trap',\n            position: 'right',\n            size: 12\n          }} />\n          </Box>\n        </FocusTrap>\n      </Box>\n    </>;\n}",...Default.parameters?.docs?.source}}};try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/styleguide/src/lib/Atoms/UtilityComponents/FocusTrap/FocusTrap.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/styleguide/src/lib/Atoms/UtilityComponents/FocusTrap/FocusTrap.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}}}]);