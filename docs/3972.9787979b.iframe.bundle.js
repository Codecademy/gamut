"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[3972],{"./packages/gamut/src/Markdown/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>Markdown});var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),html_to_react=__webpack_require__("./node_modules/html-to-react/index.js"),html_to_react_default=__webpack_require__.n(html_to_react),marked_esm=__webpack_require__("./node_modules/marked/lib/marked.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),sanitize_markdown=__webpack_require__("./node_modules/sanitize-markdown/sanitize-markdown.js"),sanitize_markdown_default=__webpack_require__.n(sanitize_markdown),omitProps=__webpack_require__("./packages/gamut/src/utils/omitProps.tsx"),camel_case_attribute_names=__webpack_require__("./node_modules/html-to-react/lib/camel-case-attribute-names.js"),camel_case_attribute_names_default=__webpack_require__.n(camel_case_attribute_names),get=__webpack_require__("./node_modules/lodash/get.js"),get_default=__webpack_require__.n(get);const index_module={"spacing-loose":"styles_spacing-loose__POOpw",h1:"styles_h1__BcuWy",h2:"styles_h2__46pKz",h3:"styles_h3__+3SVS",h4:"styles_h4__IKC9z",p:"styles_p__U9nMu",ul:"styles_ul__LeslY",ol:"styles_ol__m3sF2",li:"styles_li__78+St",code:"styles_code__TxqS9",pre:"styles_pre__lHM3P",img:"styles_img__i8dQd",iframe:"styles_iframe__ryH4+",blockquote:"styles_blockquote__DeN0D",details:"styles_details__Kg5Iu","spacing-tight":"styles_spacing-tight__xOt0e","checkbox-parent":"styles_checkbox-parent__3cNZP"};var find=__webpack_require__("./node_modules/lodash/find.js"),find_default=__webpack_require__.n(find);const isCheckboxParent=(node,type)=>Boolean("checkbox"===type&&node.children&&"input"===node.children[0]?.name&&node.children[0]?.attribs?.type===type),isLabelText=(node,type)=>Boolean("input"===node?.prev?.name&&node?.prev?.attribs?.type===type||"p"===node?.name&&"li"===node?.parent?.name&&node.parent.children&&"input"===node.parent.children[0]?.name),getLabel=node=>{const vanillaLabel=node?.next?.data;if(" "!==vanillaLabel&&"\n"!==vanillaLabel)return vanillaLabel;const closestParagraphChild=find_default()(node?.parent?.children,(o=>"p"===o.name)),labelText=find_default()(closestParagraphChild?.children,(o=>"text"===o.type));return labelText?.data};try{getLabel.displayName="getLabel",getLabel.__docgenInfo={description:"",displayName:"getLabel",props:{data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},attribs:{defaultValue:null,description:"",name:"attribs",required:!1,type:{name:"any"}},next:{defaultValue:null,description:"",name:"next",required:!0,type:{name:"HTMLToReactNode"}},prev:{defaultValue:null,description:"",name:"prev",required:!0,type:{name:"HTMLToReactNode"}},parent:{defaultValue:null,description:"",name:"parent",required:!0,type:{name:"HTMLToReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/utils.tsx#getLabel"]={docgenInfo:getLabel.__docgenInfo,name:"getLabel",path:"packages/gamut/src/Markdown/libs/overrides/utils.tsx#getLabel"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const processNodeDefinitions=html_to_react_default().ProcessNodeDefinitions(),attributeMap={...camel_case_attribute_names_default(),for:"htmlFor",class:"className"},processAttributes=function(){let attributes=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(attributes).reduce(((acc,attr)=>{const reactAttr=attributeMap[attr.replace(/[-:]/,"")]||attr;return{...acc,[reactAttr]:(value=attributes[attr],"true"===value||"false"!==value&&(value||!0))};var value}),{})},createTagOverride=(tagName,Override)=>({shouldProcessNode:node=>!!Override&&(Override.shouldProcessNode?Override.shouldProcessNode(node):node.name===tagName.toLowerCase()),processNode(node,children,key){if(!Override)return null;const props={...processAttributes(node.attribs),children,key};return Override.processNode?Override.processNode(node,props):Override.component?(0,jsx_runtime.jsx)(Override.component,{...props}):null}}),createInputOverride=(type,Override)=>createTagOverride("input",{shouldProcessNode:node=>isCheckboxParent(node,type)||((node,type)=>"input"===node?.name&&node?.attribs?.type===type)(node,type)||isLabelText(node,type),processNode(node,props){const label=getLabel(node);if(!Override.component)return null;if(isCheckboxParent(node,type)){const{className,...rest}=props,plainLiClass=classnames_default()(index_module["checkbox-parent"],className);return(0,jsx_runtime.jsx)("li",{className:plainLiClass,...rest})}return isLabelText(node,type)?null:(0,jsx_runtime.jsx)(Override.component,{label,...props})},...Override}),standardOverrides=[{shouldProcessNode:node=>!(node.parent&&["code","pre"].indexOf(node.parent.name)>=0)&&"text"===node.type,processNode:node=>node.data.replace(/&mdash;/g,"—")},{shouldProcessNode:()=>!0,processNode:processNodeDefinitions.processDefaultNode}];try{processAttributes.displayName="processAttributes",processAttributes.__docgenInfo={description:"",displayName:"processAttributes",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/index.tsx#processAttributes"]={docgenInfo:processAttributes.__docgenInfo,name:"processAttributes",path:"packages/gamut/src/Markdown/libs/overrides/index.tsx#processAttributes"})}catch(__react_docgen_typescript_loader_error){}var Checkbox=__webpack_require__("./packages/gamut/src/Form/inputs/Checkbox.tsx");const MarkdownCheckbox=_ref=>{let{checked=!1,label}=_ref;const[currentChecked,setCurrentChecked]=(0,react.useState)(checked);return(0,jsx_runtime.jsx)(Checkbox.S,{checked:currentChecked,"data-testid":"gamut-md-checkbox",htmlFor:label,label,spacing:"tight",onChange:()=>{setCurrentChecked(!currentChecked)}})};try{MarkdownCheckbox.displayName="MarkdownCheckbox",MarkdownCheckbox.__docgenInfo={description:"",displayName:"MarkdownCheckbox",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/Checkbox/index.tsx#MarkdownCheckbox"]={docgenInfo:MarkdownCheckbox.__docgenInfo,name:"MarkdownCheckbox",path:"packages/gamut/src/Markdown/libs/overrides/Checkbox/index.tsx#MarkdownCheckbox"})}catch(__react_docgen_typescript_loader_error){}var Box=__webpack_require__("./packages/gamut/src/Box/Box.tsx");const Details=_ref2=>{let{children,...props}=_ref2;const editedDetails=(0,react.useMemo)((()=>{const summaryIndex=children?.findIndex((e=>"summary"===e.type));return(_ref=>{let{summaryIndex,hasSummary,children}=_ref;if(children&&summaryIndex){const copiedChildren=hasSummary?children.slice(0,summaryIndex).concat(children.slice(summaryIndex+1)):children;return{summary:hasSummary?children[summaryIndex]:(0,jsx_runtime.jsx)("summary",{children:"Details"}),children:(0,jsx_runtime.jsx)(Box.a,{ml:24,children:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:copiedChildren.map((elem=>elem))})})}}})({summaryIndex,hasSummary:Boolean(summaryIndex&&summaryIndex>0&&children),children})}),[children]);return(0,jsx_runtime.jsx)("details",{"data-testid":"gamut-md-details",...props,children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[editedDetails?.summary,editedDetails?.children]})})};try{Details.displayName="Details",Details.__docgenInfo={description:'Details element\nBy default, the <summary> element is not required, but the default "details" text is not easily styled\nThis ensures we always have a summary element to style and that the details are indented',displayName:"Details",props:{open:{defaultValue:null,description:"",name:"open",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/Details/index.tsx#Details"]={docgenInfo:Details.__docgenInfo,name:"Details",path:"packages/gamut/src/Markdown/libs/overrides/Details/index.tsx#Details"})}catch(__react_docgen_typescript_loader_error){}var Video=__webpack_require__("./packages/gamut/src/Video/index.tsx");const YOUTUBE_PATTERN=/youtu(be\.com|\.be)/,VIMEO_PATTERN=/player\.vimeo\.com/,Iframe=props=>props.src&&[YOUTUBE_PATTERN,VIMEO_PATTERN].some((pattern=>pattern.test(props.src)))?(0,jsx_runtime.jsx)(Video.C,{height:props?.height,showPlayerEmbed:props?.showPlayerEmbed,videoTitle:props?.title,videoUrl:props?.src,width:props?.width}):(0,jsx_runtime.jsx)("iframe",{...props});try{Iframe.displayName="Iframe",Iframe.__docgenInfo={description:"",displayName:"Iframe",props:{allow:{defaultValue:null,description:"",name:"allow",required:!1,type:{name:"string"}},src:{defaultValue:null,description:"",name:"src",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},showPlayerEmbed:{defaultValue:null,description:"",name:"showPlayerEmbed",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/Iframe/index.tsx#Iframe"]={docgenInfo:Iframe.__docgenInfo,name:"Iframe",path:"packages/gamut/src/Markdown/libs/overrides/Iframe/index.tsx#Iframe"})}catch(__react_docgen_typescript_loader_error){}var Anchor=__webpack_require__("./packages/gamut/src/Anchor/index.tsx");const absoluteURLPattern=new RegExp("^(?:[a-z]+:)?//","i"),MarkdownAnchor=_ref=>{let{children,...props}=_ref;const anchorProps={target:"_blank",...props,rel:"noopener"},href="string"==typeof anchorProps.href?anchorProps.href:"";return!(href=>{if(!href||"undefined"==typeof window||"undefined"==typeof URL)return!1;try{if(new window.URL(href).origin===window.location.origin)return!0}catch(e){}return!1})(href)&&absoluteURLPattern.test(href||"")||delete anchorProps.rel,href.startsWith("#")&&delete anchorProps.target,(0,jsx_runtime.jsx)(Anchor.H,{variant:"inline",...anchorProps,children})};try{MarkdownAnchor.displayName="MarkdownAnchor",MarkdownAnchor.__docgenInfo={description:"",displayName:"MarkdownAnchor",props:{href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLAnchorElement>"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:'false | "interface" | "inline" | "standard" | "standard-secondary"'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/MarkdownAnchor/index.tsx#MarkdownAnchor"]={docgenInfo:MarkdownAnchor.__docgenInfo,name:"MarkdownAnchor",path:"packages/gamut/src/Markdown/libs/overrides/MarkdownAnchor/index.tsx#MarkdownAnchor"})}catch(__react_docgen_typescript_loader_error){}const styles_module_tableWrapper="styles_tableWrapper__xOKzs",Table=props=>(0,jsx_runtime.jsx)("div",{className:styles_module_tableWrapper,children:(0,jsx_runtime.jsx)("table",{...props})});try{Table.displayName="Table",Table.__docgenInfo={description:"",displayName:"Table",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/Table/index.tsx#Table"]={docgenInfo:Table.__docgenInfo,name:"Table",path:"packages/gamut/src/Markdown/libs/overrides/Table/index.tsx#Table"})}catch(__react_docgen_typescript_loader_error){}const MarkdownVideo=props=>{if(props?.src){const videoProps={autoplay:props?.autoPlay,controls:props?.controls,height:Number(props?.height),loop:props?.loop,muted:props?.muted,videoTitle:props?.title,videoUrl:props?.src,width:Number(props?.width),textTracks:props?.textTracks,showPlayerEmbed:props?.showPlayerEmbed};return(0,jsx_runtime.jsx)(Video.C,{...videoProps})}return(0,jsx_runtime.jsx)("video",{...props})};try{MarkdownVideo.displayName="MarkdownVideo",MarkdownVideo.__docgenInfo={description:"",displayName:"MarkdownVideo",props:{textTracks:{defaultValue:null,description:"",name:"textTracks",required:!1,type:{name:"TrackProps$2[]"}},showPlayerEmbed:{defaultValue:null,description:"",name:"showPlayerEmbed",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/libs/overrides/Video/index.tsx#MarkdownVideo"]={docgenInfo:MarkdownVideo.__docgenInfo,name:"MarkdownVideo",path:"packages/gamut/src/Markdown/libs/overrides/Video/index.tsx#MarkdownVideo"})}catch(__react_docgen_typescript_loader_error){}const defaultSanitizationConfig={allowedAttributes:{...sanitize_markdown_default().defaults.allowedAttributes,h1:["class","id"],h2:["class","id"],h3:["class","id"],h4:["class","id"],h5:["class","id"],h6:["class","id"],span:["class"],code:["class"],pre:["class"],source:["src","type"],track:["src","label","kind","srclang","default","type"],img:["src","alt","height","width","title","aria-label","style"],input:["checked","type"],video:["align","autoPlay","controls","height","loop","muted","src","width","showplayerembed"],iframe:["src","width","height","frameborder","gesture","allow","allowfullscreen","showplayerembed"]},allowedClasses:{div:"narrative-table-container"},allowedTags:[...sanitize_markdown_default().defaults.allowedTags,"video","track","source","font","pre","code","kbd","br","iframe","codeblock","input"]},htmlToReactParser=html_to_react_default().Parser({xmlMode:!0}),preprocessingInstructions=(styles=index_module,[{shouldPreprocessNode:node=>Boolean(node.name),preprocessNode(node){const classname=classnames_default()(styles[node.name],node.attribs?.class),attrs={...node.attribs};classname&&(attrs.class=classname),node.attribs=attrs}}]);var styles;const isValidNode=()=>!0;class Markdown extends react.PureComponent{render(){const{spacing="tight",text="",className,overrides:userOverrides={},skipDefaultOverrides={},inline=!1,headerIds=!0,onAnchorClick}=this.props;if(!text)return null;const spacingStyles=index_module[`spacing-${spacing}`],classes=classnames_default()(spacingStyles,className),Wrapper=inline?"span":"div",overrides=Object.keys(userOverrides).map((tagName=>"CodeBlock"===tagName?((tagName,Override)=>createTagOverride(tagName,{shouldProcessNode:node=>"code"===node.name&&"pre"===get_default()(node,"parent.name")||node.name===tagName.toLowerCase(),processNode(node,props){const[,language]=props.className?.match(/language-([^\s]+)/)||[];return Override.component?(0,jsx_runtime.jsx)(Override.component,{...props,language,children:props.children?.[0]}):null},...Override}))(tagName,userOverrides[tagName]):createTagOverride(tagName,userOverrides[tagName]))),processingInstructions=[...overrides,!skipDefaultOverrides.iframe&&createTagOverride("iframe",{component:Iframe}),!skipDefaultOverrides.a&&createTagOverride("a",{component:MarkdownAnchor,processNode:(node,props)=>(0,jsx_runtime.jsx)(MarkdownAnchor,{onClick:onAnchorClick,...props})}),!skipDefaultOverrides.table&&createTagOverride("table",{component:Table,allowedAttributes:["style"]}),!skipDefaultOverrides.video&&(tagName="video",Override={component:MarkdownVideo},{shouldProcessNode:node=>!!Override&&(Override.shouldProcessNode?Override.shouldProcessNode(node):node.name===tagName.toLowerCase()),processNode(node,children,key){if(!Override)return null;const{src,...processedAttributes}=processAttributes(node.attribs),altVideoSrc=[],textTracks=[];children&&children.forEach((element=>{"source"===element.type&&element?.props?.src?element.props?.type.includes("video")&&altVideoSrc.push({src:element?.props.src,type:element?.props.type}):"track"===element.type&&textTracks.push({src:element?.props.src,language:element?.props.srcLang,default:element?.props.default,kind:element?.props.kind,label:element?.props.label,type:element?.props.type})}));const props={src:altVideoSrc.length>0?altVideoSrc:src,textTracks,...processedAttributes,children,key};return Override.processNode?Override.processNode(node,props):Override.component?(0,jsx_runtime.jsx)(Override.component,{...props}):null}}),!skipDefaultOverrides.details&&createTagOverride("details",{component:Details,allowedAttributes:["style","open"]}),!skipDefaultOverrides.checkbox&&createInputOverride("checkbox",{component:MarkdownCheckbox}),...standardOverrides].filter(Boolean);var tagName,Override;const markedOptions={smartypants:!0,headerIds,headerPrefix:"heading-",mangle:!1},rawHtml=inline?marked_esm.xI.parseInline(text,markedOptions):(0,marked_esm.xI)(text,markedOptions),sanitizationConfig={...defaultSanitizationConfig,allowedTags:[...defaultSanitizationConfig.allowedTags,...Object.keys(userOverrides).map((tagName=>tagName.toLowerCase()))],allowedAttributes:{...defaultSanitizationConfig.allowedAttributes,...Object.keys(userOverrides).reduce(((acc,tagName)=>({...acc,[tagName.toLowerCase()]:(userOverrides[tagName].allowedAttributes||[]).map((attr=>attr.toLowerCase()))})),{})}},html=sanitize_markdown_default()(rawHtml,sanitizationConfig),react=htmlToReactParser.parseWithInstructions(html,isValidNode,processingInstructions,preprocessingInstructions);return(0,jsx_runtime.jsx)(Wrapper,{...(0,omitProps.k)(Object.keys(this.props),this.props),className:classes,children:react})}}try{Markdown.displayName="Markdown",Markdown.__docgenInfo={description:"",displayName:"Markdown",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},overrides:{defaultValue:null,description:"",name:"overrides",required:!1,type:{name:"MarkdownOverrideSettings"}},skipDefaultOverrides:{defaultValue:null,description:"",name:"skipDefaultOverrides",required:!1,type:{name:"SkipDefaultOverridesSettings"}},headerIds:{defaultValue:null,description:"Enables generated header ids for H1-6 tags\nCan generate duplicate IDs if used on separate markdown components on the same page",name:"headerIds",required:!1,type:{name:"boolean"}},spacing:{defaultValue:null,description:"",name:"spacing",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"loose"'},{value:'"tight"'}]}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}},onAnchorClick:{defaultValue:null,description:"Callback when a markdown anchor tag is clicked",name:"onAnchorClick",required:!1,type:{name:"((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Markdown/index.tsx#Markdown"]={docgenInfo:Markdown.__docgenInfo,name:"Markdown",path:"packages/gamut/src/Markdown/index.tsx#Markdown"})}catch(__react_docgen_typescript_loader_error){}},"./packages/gamut/src/utils/omitProps.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>omitProps});var invariant__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/invariant/browser.js"),invariant__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(invariant__WEBPACK_IMPORTED_MODULE_0__),lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash/isPlainObject.js"),lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1__),lodash_omit__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash/omit.js"),lodash_omit__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(lodash_omit__WEBPACK_IMPORTED_MODULE_2__),lodash_without__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash/without.js"),lodash_without__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(lodash_without__WEBPACK_IMPORTED_MODULE_3__);function omitProps(initialPropsToOmit,props){const propsToOmit=lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1___default()(initialPropsToOmit)?Object.keys(initialPropsToOmit):initialPropsToOmit;invariant__WEBPACK_IMPORTED_MODULE_0___default()(Array.isArray(propsToOmit),"omitProps first argument should be an Array");const dataProps=propsToOmit.filter((p=>/^data-.*/.exec(p)));return lodash_omit__WEBPACK_IMPORTED_MODULE_2___default()(props,lodash_without__WEBPACK_IMPORTED_MODULE_3___default()(propsToOmit,"children","className",...dataProps))}try{omitProps.displayName="omitProps",omitProps.__docgenInfo={description:"omitProps\n\nremoves a provided array of props from a props object,\nleaving necessary props like children intact",displayName:"omitProps",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/utils/omitProps.tsx#omitProps"]={docgenInfo:omitProps.__docgenInfo,name:"omitProps",path:"packages/gamut/src/utils/omitProps.tsx#omitProps"})}catch(__react_docgen_typescript_loader_error){}},"./packages/styleguide/src/lib/Organisms/Markdown/Markdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FullExample:()=>FullExample,HeaderOverride:()=>HeaderOverride,InlineMarkdown:()=>InlineMarkdown,LinkOverride:()=>LinkOverride,Overrides:()=>Overrides,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Markdown_stories});var Markdown=__webpack_require__("./packages/gamut/src/Markdown/index.tsx"),Text=__webpack_require__("./packages/gamut/src/Typography/Text.tsx");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Markdown_stories={component:Markdown.o,args:{}},Default={args:{text:"\n## Hello World\nThis is markdown\n    ",spacing:"tight"}},FullExample={args:{text:'# Markdown: Syntax\n\n- [Overview](#overview)\n  - [Philosophy](#philosophy)\n  - [Inline HTML](#html)\n  - [Automatic Escaping for Special Characters](#autoescape)\n- [Block Elements](#block)\n  - [Paragraphs and Line Breaks](#p)\n  - [Headers](#header)\n  - [Blockquotes](#blockquote)\n  - [Lists](#list)\n  - [Code Blocks](#precode)\n  - [Horizontal Rules](#hr)\n- [Span Elements](#span)\n  - [Links](#link)\n  - [Emphasis](#em)\n  - [Code](#code)\n  - [Images](#img)\n- [Miscellaneous](#misc)\n  - [Backslash Escapes](#backslash)\n  - [Automatic Links](#autolink)\n- [HTML Tags](#html-tags)\n  - [Details](#details)\n\n---\n\n## Overview\n\n### Philosophy\n\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\n\nReadability, however, is emphasized above all else. A Markdown-formatted\ndocument should be publishable as-is, as plain text, without looking\nlike it\'s been marked up with tags or formatting instructions. While\nMarkdown\'s syntax has been influenced by several existing text-to-HTML\nfilters -- including [Setext](http://docutils.sourceforge.net/mirror/setext.html), [atx](http://www.aaronsw.com/2002/atx/), [Textile](http://textism.com/tools/textile/), [reStructuredText](http://docutils.sourceforge.net/rst.html),\n[Grutatext](http://www.triptico.com/software/grutatxt.html), and [EtText](http://ettext.taint.org/doc/) -- the single biggest source of\ninspiration for Markdown\'s syntax is the format of plain text email.\n\n## Block Elements\n\n### Paragraphs and Line Breaks\n\nA paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like a\nblank line -- a line containing nothing but spaces or tabs is considered\nblank.) Normal paragraphs should not be indented with spaces or tabs.\n\nThe implication of the "one or more consecutive lines of text" rule is\nthat Markdown supports "hard-wrapped" text paragraphs. This differs\nsignificantly from most other text-to-HTML formatters (including Movable\nType\'s "Convert Line Breaks" option) which translate every line break\ncharacter in a paragraph into a `<br />` tag.\n\nWhen you _do_ want to insert a `<br />` break tag using Markdown, you\nend a line with two or more spaces, then type return.\n\n### Headers\n\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\n\nOptionally, you may "close" atx-style headers. This is purely\ncosmetic -- you can use this if you think it looks better. The\nclosing hashes don\'t even need to match the number of hashes\nused to open the header. (The number of opening hashes\ndetermines the header level.)\n\n### Blockquotes\n\nMarkdown uses email-style `>` characters for blockquoting. If you\'re\nfamiliar with quoting passages of text in an email message, then you\nknow how to create a blockquote in Markdown. It looks best if you hard\nwrap the text and put a `>` before every line:\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n>\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\nMarkdown allows you to be lazy and only put the `>` before the first\nline of a hard-wrapped paragraph:\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by\nadding additional levels of `>`:\n\n> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n\nBlockquotes can contain other Markdown elements, including headers, lists,\nand code blocks:\n\n> ## This is a header.\n>\n> 1.  This is the first list item.\n> 2.  This is the second list item.\n>\n> Here\'s some example code:\n>\n>     return shell_exec("echo $input | $markdown_script");\n\nAny decent text editor should make email-style quoting easy. For\nexample, with BBEdit, you can make a selection and choose Increase\nQuote Level from the Text menu.\n\n### Lists\n\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\n\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\n-- as list markers:\n\n- Red\n- Green\n- Blue\n\nis equivalent to:\n\n- Red\n- Green\n- Blue\n\nand:\n\n- Red\n- Green\n- Blue\n\nOrdered lists use numbers followed by periods:\n\n1.  Bird\n2.  McHale\n3.  Parish\n\nIt\'s important to note that the actual numbers you use to mark the\nlist have no effect on the HTML output Markdown produces. The HTML\nMarkdown produces from the above list is:\n\nIf you instead wrote the list in Markdown like this:\n\n1.  Bird\n1.  McHale\n1.  Parish\n\nor even:\n\n3. Bird\n1. McHale\n1. Parish\n\nyou\'d get the exact same HTML output. The point is, if you want to,\nyou can use ordinal numbers in your ordered Markdown lists, so that\nthe numbers in your source match the numbers in your published HTML.\nBut if you want to be lazy, you don\'t have to.\n\nTo make lists look nice, you can wrap items with hanging indents:\n\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n  viverra nec, fringilla in, laoreet vitae, risus.\n- Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nBut if you want to be lazy, you don\'t have to:\n\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n  viverra nec, fringilla in, laoreet vitae, risus.\n\n- Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nList items may consist of multiple paragraphs. Each subsequent\nparagraph in a list item must be indented by either 4 spaces\nor one tab:\n\n1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIt looks nice if you indent every line of the subsequent\nparagraphs, but here again, Markdown will allow you to be\nlazy:\n\n- This is a list item with two paragraphs.\n\n      This is the second paragraph in the list item. You\'re\n\n  only required to indent the first line. Lorem ipsum dolor\n  sit amet, consectetuer adipiscing elit.\n\n- Another item in the same list.\n\nList items may consist of `ul` and `ol` nested items:\n\n- This is an unordered list item.\n\n  1. This is an ordered list item.\n  2. And another ordered list item.\n  3. And a third\n\n- A second unordered list item.\n- A third!\n\nTo put a blockquote within a list item, the blockquote\'s `>`\ndelimiters need to be indented:\n\n- A list item with a blockquote:\n\n  > This is a blockquote\n  > inside a list item.\n\nTo put a code block within a list item, the code block needs\nto be indented _twice_ -- 8 spaces or two tabs:\n\n- A list item with a code block:\n\n      <code goes here>\n\nYou can also create a list of checkboxes that will render as the styled Gamut [Checkboxes](https://gamut.codecademy.com/?path=/docs/atoms-forminputs-checkbox--checkbox). Checking these checkboxes in Markdown will only change the default state of the checkbox and they will still be interactive.\n\n- [ ] checkbox\n- [x] default checked checkbox\n- [ ] another checkbox\n\n### Code Blocks\n\nPre-formatted code blocks are used for writing about programming or\nmarkup source code. Rather than forming normal paragraphs, the lines\nof a code block are interpreted literally. Markdown wraps a code block\nin both `<pre>` and `<code>` tags.\n\nTo produce a code block in Markdown, simply indent every line of the\nblock by at least 4 spaces or 1 tab.\n\nThis is a normal paragraph:\n\n    This is a code block.\n\nHere is an example of AppleScript:\n\n    tell application "Foo"\n        beep\n    end tell\n\nA code block continues until it reaches a line that is not indented\n(or the end of the article).\n\nWithin a code block, ampersands (`&`) and angle brackets (`<` and `>`)\nare automatically converted into HTML entities. This makes it very\neasy to include example HTML source code using Markdown -- just paste\nit and indent it, and Markdown will handle the hassle of encoding the\nampersands and angle brackets. For example, this:\n\n    <div class="footer">\n        &copy; 2004 Foo Corporation\n    </div>\n\nRegular Markdown syntax is not processed within code blocks. E.g.,\nasterisks are just literal asterisks within a code block. This means\nit\'s also easy to use Markdown to write about Markdown\'s own syntax.\n\n```\ntell application "Foo"\n    beep\nend tell\n```\n\n## Span Elements\n\n### Links\n\nMarkdown supports two style of links: _inline_ and _reference_.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately\nafter the link text\'s closing square bracket. Inside the parentheses,\nput the URL where you want the link to point, along with an _optional_\ntitle for the link, surrounded in quotes. For example:\n\nThis is [an example](http://example.com/) inline link.\n\n[This link](http://example.net/) has no title attribute.\n\n### Emphasis\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of\nemphasis. Text wrapped with one `*` or `_` will be wrapped with an\nHTML `<em>` tag; double `*`\'s or `_`\'s will be wrapped with an HTML\n`<strong>` tag. E.g., this input:\n\n_single asterisks_\n\n_single underscores_\n\n**double asterisks**\n\n**double underscores**\n\n### Code\n\nTo indicate a span of code, wrap it with backtick quotes (`` ` ``).\nUnlike a pre-formatted code block, a code span indicates code within a\nnormal paragraph. For example:\n\nUse the `printf()` function.\n\n### Tables\n\n| Tables   |      Are      |  Cool |\n| -------- | :-----------: | ----: |\n| col 1 is | left-aligned  | $1600 |\n| col 2 is |   centered    |   $12 |\n| col 3 is | right-aligned |    $1 |\n\n## HTML Tags\n\n### Details\n\n<details>\n  <summary>Read More</summary>\n  lLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</details>\n\n<details>\n  lLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</details>\n\n### Iframes\n\nVimeo and Youtube video iframes will be rendered by our Video component (if showPlayerEmbed is true it will be rendered in actual embed), otherwise they\'ll render the original code.\n\n<iframe src="https://player.vimeo.com/video/188237476?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479" frameborder="0" allow="autoplay; fullscreen; picture-in-picture; clipboard-write" style="position:absolute;top:0;left:0;width:100%;height:100%;" title="Studio Ghibli in Real Life"></iframe>\n\n<br/>\n\n<iframe width="1094" height="842" showPlayerEmbed src="https://www.youtube.com/embed/zhDwjnYZiCo" title="Ghibli Coffee Shop ☕️ Music to put you in a better mood 🌿 lofi hip hop - lofi songs | study / relax" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>\n\n### Video\n\n`video`s with an `src` or a `source` video file will be rendered by our Video component, otherwise they\'ll render the original code. Videos with a `style` prop or another restricted prop will be stripped of that property.\nInsert `track` to add subtitles / captions to the video.\n\n<video width="100%" height="100%" align="middle" controls>\n  <source src="https://static-assets-staging.codecademy.com/test-locales/how-to-build-a-portfolio.mp4" type="video/mp4" />\n  <track src="https://static-assets-staging.codecademy.com/test-locales/how-to-build-a-portfolio.srt" type="srt" label="English" kind="subtitles" srclang="en-US" default="true" />\n  Your browser does not support the video tag. \n</video>\n'}},Overrides={args:{overrides:{CodeBlock:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props})},CustomElement:{component:_ref=>{let{title}=_ref;return(0,jsx_runtime.jsx)(Text.E,{as:"h3",color:"primary",fontSize:26,m:24,children:title})},allowedAttributes:["title"]}},text:"\"## Hello World\n        <CodeBlock>Span inside a custom code block element</CodeBlock>\n        <CustomElement title='A Custom Component' />\""}},HeaderOverride={args:{overrides:{h3:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props,as:"h3",fontSize:20,m:16})}},text:"### Smaller H3"}},LinkOverride={args:{text:"[This was a link](https://codecademy.com), Now it is not.",overrides:{a:{component:props=>(0,jsx_runtime.jsx)(Text.E,{...props,as:"span",color:"blue-500"})}}}},InlineMarkdown={args:{text:"this is an inline markdown component",inline:!0},render:args=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",(0,jsx_runtime.jsx)(Markdown.o,{...args}),"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."]})},__namedExportsOrder=["Default","FullExample","Overrides","HeaderOverride","LinkOverride","InlineMarkdown"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: `\n## Hello World\nThis is markdown\n    `,\n    spacing: 'tight'\n  }\n}",...Default.parameters?.docs?.source}}},FullExample.parameters={...FullExample.parameters,docs:{...FullExample.parameters?.docs,source:{originalSource:"{\n  args: {\n    // Not sure why there's a type mismatch, but the story renders\n    text: exampleMarkdown as any\n  }\n}",...FullExample.parameters?.docs?.source}}},Overrides.parameters={...Overrides.parameters,docs:{...Overrides.parameters?.docs,source:{originalSource:"{\n  args: {\n    overrides: elements,\n    text: `\"## Hello World\n        <CodeBlock>Span inside a custom code block element</CodeBlock>\n        <CustomElement title='A Custom Component' />\"`\n  }\n}",...Overrides.parameters?.docs?.source}}},HeaderOverride.parameters={...HeaderOverride.parameters,docs:{...HeaderOverride.parameters?.docs,source:{originalSource:"{\n  args: {\n    overrides: tags,\n    text: '### Smaller H3'\n  }\n}",...HeaderOverride.parameters?.docs?.source}}},LinkOverride.parameters={...LinkOverride.parameters,docs:{...LinkOverride.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: \'[This was a link](https://codecademy.com), Now it is not.\',\n    overrides: {\n      a: {\n        component: props => <Text {...props} as="span" color="blue-500" />\n      }\n    }\n  }\n}',...LinkOverride.parameters?.docs?.source}}},InlineMarkdown.parameters={...InlineMarkdown.parameters,docs:{...InlineMarkdown.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: `this is an inline markdown component`,\n    inline: true\n  },\n  render: args => {\n    return <>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua.\n        <Markdown {...args} />\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n        ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n        reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\n        qui officia deserunt mollit anim id est laborum.\n      </>;\n  }\n}",...InlineMarkdown.parameters?.docs?.source}}}}}]);