"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[6645],{"./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xQ:()=>usePresence});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_context_PresenceContext_mjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/framer-motion/dist/es/context/PresenceContext.mjs");function usePresence(subscribe=!0){const context=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_context_PresenceContext_mjs__WEBPACK_IMPORTED_MODULE_1__.t);if(null===context)return[!0,null];const{isPresent,onExitComplete,register}=context,id=(0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{subscribe&&register(id)}),[subscribe]);const safeToRemove=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>subscribe&&onExitComplete&&onExitComplete(id)),[id,onExitComplete,subscribe]);return!isPresent&&onExitComplete?[!1,safeToRemove]:[!0]}},"./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>LayoutGroupContext});const LayoutGroupContext=(0,__webpack_require__("./node_modules/react/index.js").createContext)({})},"./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>MotionConfigContext});const MotionConfigContext=(0,__webpack_require__("./node_modules/react/index.js").createContext)({transformPagePoint:p=>p,isStatic:!1,reducedMotion:"never"})},"./node_modules/framer-motion/dist/es/context/PresenceContext.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>PresenceContext});const PresenceContext=(0,__webpack_require__("./node_modules/react/index.js").createContext)(null)},"./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function createDOMMotionComponentProxy(componentFactory){if("undefined"==typeof Proxy)return componentFactory;const componentCache=new Map;return new Proxy(((...args)=>componentFactory(...args)),{get:(_target,key)=>"create"===key?componentFactory:(componentCache.has(key)||componentCache.set(key,componentFactory(key)),componentCache.get(key))})}function isAnimationControls(v){return null!==v&&"object"==typeof v&&"function"==typeof v.start}__webpack_require__.d(__webpack_exports__,{P:()=>motion});const isKeyframesTarget=v=>Array.isArray(v);function shallowCompare(next,prev){if(!Array.isArray(prev))return!1;const prevLength=prev.length;if(prevLength!==next.length)return!1;for(let i=0;i<prevLength;i++)if(prev[i]!==next[i])return!1;return!0}function isVariantLabel(v){return"string"==typeof v||Array.isArray(v)}function getValueState(visualElement){const state=[{},{}];return null==visualElement||visualElement.values.forEach(((value,key)=>{state[0][key]=value.get(),state[1][key]=value.getVelocity()})),state}function resolveVariantFromProps(props,definition,custom,visualElement){if("function"==typeof definition){const[current,velocity]=getValueState(visualElement);definition=definition(void 0!==custom?custom:props.custom,current,velocity)}if("string"==typeof definition&&(definition=props.variants&&props.variants[definition]),"function"==typeof definition){const[current,velocity]=getValueState(visualElement);definition=definition(void 0!==custom?custom:props.custom,current,velocity)}return definition}function resolveVariant(visualElement,definition,custom){const props=visualElement.getProps();return resolveVariantFromProps(props,definition,void 0!==custom?custom:props.custom,visualElement)}const variantPriorityOrder=["animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"],variantProps=["initial",...variantPriorityOrder];function memo(callback){let result;return()=>(void 0===result&&(result=callback()),result)}const supportsScrollTimeline=memo((()=>void 0!==window.ScrollTimeline));class BaseGroup_BaseGroupPlaybackControls{constructor(animations){this.stop=()=>this.runAll("stop"),this.animations=animations.filter(Boolean)}get finished(){return Promise.all(this.animations.map((animation=>"finished"in animation?animation.finished:animation)))}getAll(propName){return this.animations[0][propName]}setAll(propName,newValue){for(let i=0;i<this.animations.length;i++)this.animations[i][propName]=newValue}attachTimeline(timeline,fallback){const subscriptions=this.animations.map((animation=>supportsScrollTimeline()&&animation.attachTimeline?animation.attachTimeline(timeline):"function"==typeof fallback?fallback(animation):void 0));return()=>{subscriptions.forEach(((cancel,i)=>{cancel&&cancel(),this.animations[i].stop()}))}}get time(){return this.getAll("time")}set time(time){this.setAll("time",time)}get speed(){return this.getAll("speed")}set speed(speed){this.setAll("speed",speed)}get startTime(){return this.getAll("startTime")}get duration(){let max=0;for(let i=0;i<this.animations.length;i++)max=Math.max(max,this.animations[i].duration);return max}runAll(methodName){this.animations.forEach((controls=>controls[methodName]()))}flatten(){this.runAll("flatten")}play(){this.runAll("play")}pause(){this.runAll("pause")}cancel(){this.runAll("cancel")}complete(){this.runAll("complete")}}class GroupPlaybackControls extends BaseGroup_BaseGroupPlaybackControls{then(onResolve,onReject){return Promise.all(this.animations).then(onResolve).catch(onReject)}}function get_value_transition_getValueTransition(transition,key){return transition?transition[key]||transition.default||transition:void 0}function calcGeneratorDuration(generator){let duration=0;let state=generator.next(duration);for(;!state.done&&duration<2e4;)duration+=50,state=generator.next(duration);return duration>=2e4?1/0:duration}function isGenerator(type){return"function"==typeof type}function attachTimeline(animation,timeline){animation.timeline=timeline,animation.onfinish=null}const isBezierDefinition=easing=>Array.isArray(easing)&&"number"==typeof easing[0],supportsFlags={linearEasing:void 0};function memoSupports(callback,supportsFlag){const memoized=memo(callback);return()=>{var _a;return null!==(_a=supportsFlags[supportsFlag])&&void 0!==_a?_a:memoized()}}const supportsLinearEasing=memoSupports((()=>{try{document.createElement("div").animate({opacity:0},{easing:"linear(0, 1)"})}catch(e){return!1}return!0}),"linearEasing"),progress=(from,to,value)=>{const toFromDifference=to-from;return 0===toFromDifference?1:(value-from)/toFromDifference},generateLinearEasing=(easing,duration,resolution=10)=>{let points="";const numPoints=Math.max(Math.round(duration/resolution),2);for(let i=0;i<numPoints;i++)points+=easing(progress(0,numPoints-1,i))+", ";return`linear(${points.substring(0,points.length-2)})`};function isWaapiSupportedEasing(easing){return Boolean("function"==typeof easing&&supportsLinearEasing()||!easing||"string"==typeof easing&&(easing in supportedWaapiEasing||supportsLinearEasing())||isBezierDefinition(easing)||Array.isArray(easing)&&easing.every(isWaapiSupportedEasing))}const cubicBezierAsString=([a,b,c,d])=>`cubic-bezier(${a}, ${b}, ${c}, ${d})`,supportedWaapiEasing={linear:"linear",ease:"ease",easeIn:"ease-in",easeOut:"ease-out",easeInOut:"ease-in-out",circIn:cubicBezierAsString([0,.65,.55,1]),circOut:cubicBezierAsString([.55,0,1,.45]),backIn:cubicBezierAsString([.31,.01,.66,-.59]),backOut:cubicBezierAsString([.33,1.53,.69,.99])};function easing_mapEasingToNativeEasing(easing,duration){return easing?"function"==typeof easing&&supportsLinearEasing()?generateLinearEasing(easing,duration):isBezierDefinition(easing)?cubicBezierAsString(easing):Array.isArray(easing)?easing.map((segmentEasing=>easing_mapEasingToNativeEasing(segmentEasing,duration)||supportedWaapiEasing.easeOut)):supportedWaapiEasing[easing]:void 0}const isDragging={x:!1,y:!1};function isDragActive(){return isDragging.x||isDragging.y}function setupGesture(elementOrSelector,options){const elements=function resolveElements(elementOrSelector,scope,selectorCache){var _a;if(elementOrSelector instanceof Element)return[elementOrSelector];if("string"==typeof elementOrSelector){let root=document;scope&&(root=scope.current);const elements=null!==(_a=null==selectorCache?void 0:selectorCache[elementOrSelector])&&void 0!==_a?_a:root.querySelectorAll(elementOrSelector);return elements?Array.from(elements):[]}return Array.from(elementOrSelector)}(elementOrSelector),gestureAbortController=new AbortController;return[elements,{passive:!0,...options,signal:gestureAbortController.signal},()=>gestureAbortController.abort()]}function filterEvents(callback){return event=>{"touch"===event.pointerType||isDragActive()||callback(event)}}const isNodeOrChild=(parent,child)=>!!child&&(parent===child||isNodeOrChild(parent,child.parentElement)),isPrimaryPointer=event=>"mouse"===event.pointerType?"number"!=typeof event.button||event.button<=0:!1!==event.isPrimary,focusableElements=new Set(["BUTTON","INPUT","SELECT","TEXTAREA","A"]);const isPressing=new WeakSet;function keyboard_filterEvents(callback){return event=>{"Enter"===event.key&&callback(event)}}function firePointerEvent(target,type){target.dispatchEvent(new PointerEvent("pointer"+type,{isPrimary:!0,bubbles:!0}))}function isValidPressEvent(event){return isPrimaryPointer(event)&&!isDragActive()}function press(elementOrSelector,onPressStart,options={}){const[elements,eventOptions,cancelEvents]=setupGesture(elementOrSelector,options),startPress=startEvent=>{const element=startEvent.currentTarget;if(!isValidPressEvent(startEvent)||isPressing.has(element))return;isPressing.add(element);const onPressEnd=onPressStart(startEvent),onPointerEnd=(endEvent,success)=>{window.removeEventListener("pointerup",onPointerUp),window.removeEventListener("pointercancel",onPointerCancel),isValidPressEvent(endEvent)&&isPressing.has(element)&&(isPressing.delete(element),"function"==typeof onPressEnd&&onPressEnd(endEvent,{success}))},onPointerUp=upEvent=>{onPointerEnd(upEvent,options.useGlobalTarget||isNodeOrChild(element,upEvent.target))},onPointerCancel=cancelEvent=>{onPointerEnd(cancelEvent,!1)};window.addEventListener("pointerup",onPointerUp,eventOptions),window.addEventListener("pointercancel",onPointerCancel,eventOptions)};return elements.forEach((element=>{(function isElementKeyboardAccessible(element){return focusableElements.has(element.tagName)||-1!==element.tabIndex})(element)||null!==element.getAttribute("tabindex")||(element.tabIndex=0);(options.useGlobalTarget?window:element).addEventListener("pointerdown",startPress,eventOptions),element.addEventListener("focus",(event=>((focusEvent,eventOptions)=>{const element=focusEvent.currentTarget;if(!element)return;const handleKeydown=keyboard_filterEvents((()=>{if(isPressing.has(element))return;firePointerEvent(element,"down");const handleKeyup=keyboard_filterEvents((()=>{firePointerEvent(element,"up")}));element.addEventListener("keyup",handleKeyup,eventOptions),element.addEventListener("blur",(()=>firePointerEvent(element,"cancel")),eventOptions)}));element.addEventListener("keydown",handleKeydown,eventOptions),element.addEventListener("blur",(()=>element.removeEventListener("keydown",handleKeydown)),eventOptions)})(event,eventOptions)),eventOptions)})),cancelEvents}const time_conversion_secondsToMilliseconds=seconds=>1e3*seconds,millisecondsToSeconds=milliseconds=>milliseconds/1e3,noop_noop=any=>any;const transformPropOrder=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],transformProps=new Set(transformPropOrder),positionalKeys=new Set(["width","height","top","left","right","bottom",...transformPropOrder]),MotionGlobalConfig_skipAnimations=!1,MotionGlobalConfig_useManualTiming=!1;const stepsOrder=["read","resolveKeyframes","update","preRender","render","postRender"];function createRenderBatcher(scheduleNextBatch,allowKeepAlive){let runNextFrame=!1,useDefaultElapsed=!0;const state={delta:0,timestamp:0,isProcessing:!1},flagRunNextFrame=()=>runNextFrame=!0,steps=stepsOrder.reduce(((acc,key)=>(acc[key]=function createRenderStep(runNextFrame){let thisFrame=new Set,nextFrame=new Set,isProcessing=!1,flushNextFrame=!1;const toKeepAlive=new WeakSet;let latestFrameData={delta:0,timestamp:0,isProcessing:!1};function triggerCallback(callback){toKeepAlive.has(callback)&&(step.schedule(callback),runNextFrame()),callback(latestFrameData)}const step={schedule:(callback,keepAlive=!1,immediate=!1)=>{const queue=immediate&&isProcessing?thisFrame:nextFrame;return keepAlive&&toKeepAlive.add(callback),queue.has(callback)||queue.add(callback),callback},cancel:callback=>{nextFrame.delete(callback),toKeepAlive.delete(callback)},process:frameData=>{latestFrameData=frameData,isProcessing?flushNextFrame=!0:(isProcessing=!0,[thisFrame,nextFrame]=[nextFrame,thisFrame],thisFrame.forEach(triggerCallback),thisFrame.clear(),isProcessing=!1,flushNextFrame&&(flushNextFrame=!1,step.process(frameData)))}};return step}(flagRunNextFrame),acc)),{}),{read,resolveKeyframes,update,preRender,render,postRender}=steps,processBatch=()=>{const timestamp=MotionGlobalConfig_useManualTiming?state.timestamp:performance.now();runNextFrame=!1,state.delta=useDefaultElapsed?1e3/60:Math.max(Math.min(timestamp-state.timestamp,40),1),state.timestamp=timestamp,state.isProcessing=!0,read.process(state),resolveKeyframes.process(state),update.process(state),preRender.process(state),render.process(state),postRender.process(state),state.isProcessing=!1,runNextFrame&&allowKeepAlive&&(useDefaultElapsed=!1,scheduleNextBatch(processBatch))};return{schedule:stepsOrder.reduce(((acc,key)=>{const step=steps[key];return acc[key]=(process,keepAlive=!1,immediate=!1)=>(runNextFrame||(runNextFrame=!0,useDefaultElapsed=!0,state.isProcessing||scheduleNextBatch(processBatch)),step.schedule(process,keepAlive,immediate)),acc}),{}),cancel:process=>{for(let i=0;i<stepsOrder.length;i++)steps[stepsOrder[i]].cancel(process)},state,steps}}const{schedule:frame_frame,cancel:cancelFrame,state:frameData,steps:frameSteps}=createRenderBatcher("undefined"!=typeof requestAnimationFrame?requestAnimationFrame:noop_noop,!0);let now;function clearTime(){now=void 0}const time={now:()=>(void 0===now&&time.set(frameData.isProcessing||MotionGlobalConfig_useManualTiming?frameData.timestamp:performance.now()),now),set:newTime=>{now=newTime,queueMicrotask(clearTime)}};function addUniqueItem(arr,item){-1===arr.indexOf(item)&&arr.push(item)}function removeItem(arr,item){const index=arr.indexOf(item);index>-1&&arr.splice(index,1)}class SubscriptionManager{constructor(){this.subscriptions=[]}add(handler){return addUniqueItem(this.subscriptions,handler),()=>removeItem(this.subscriptions,handler)}notify(a,b,c){const numSubscriptions=this.subscriptions.length;if(numSubscriptions)if(1===numSubscriptions)this.subscriptions[0](a,b,c);else for(let i=0;i<numSubscriptions;i++){const handler=this.subscriptions[i];handler&&handler(a,b,c)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}function velocityPerSecond(velocity,frameDuration){return frameDuration?velocity*(1e3/frameDuration):0}const collectMotionValues={current:void 0};class MotionValue{constructor(init,options={}){this.version="11.18.2",this.canTrackVelocity=null,this.events={},this.updateAndNotify=(v,render=!0)=>{const currentTime=time.now();this.updatedAt!==currentTime&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(v),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),render&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(init),this.owner=options.owner}setCurrent(current){var value;this.current=current,this.updatedAt=time.now(),null===this.canTrackVelocity&&void 0!==current&&(this.canTrackVelocity=(value=this.current,!isNaN(parseFloat(value))))}setPrevFrameValue(prevFrameValue=this.current){this.prevFrameValue=prevFrameValue,this.prevUpdatedAt=this.updatedAt}onChange(subscription){return this.on("change",subscription)}on(eventName,callback){this.events[eventName]||(this.events[eventName]=new SubscriptionManager);const unsubscribe=this.events[eventName].add(callback);return"change"===eventName?()=>{unsubscribe(),frame_frame.read((()=>{this.events.change.getSize()||this.stop()}))}:unsubscribe}clearListeners(){for(const eventManagers in this.events)this.events[eventManagers].clear()}attach(passiveEffect,stopPassiveEffect){this.passiveEffect=passiveEffect,this.stopPassiveEffect=stopPassiveEffect}set(v,render=!0){render&&this.passiveEffect?this.passiveEffect(v,this.updateAndNotify):this.updateAndNotify(v,render)}setWithVelocity(prev,current,delta){this.set(current),this.prev=void 0,this.prevFrameValue=prev,this.prevUpdatedAt=this.updatedAt-delta}jump(v,endAnimation=!0){this.updateAndNotify(v),this.prev=v,this.prevUpdatedAt=this.prevFrameValue=void 0,endAnimation&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return collectMotionValues.current&&collectMotionValues.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){const currentTime=time.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||currentTime-this.updatedAt>30)return 0;const delta=Math.min(this.updatedAt-this.prevUpdatedAt,30);return velocityPerSecond(parseFloat(this.current)-parseFloat(this.prevFrameValue),delta)}start(startAnimation){return this.stop(),new Promise((resolve=>{this.hasAnimated=!0,this.animation=startAnimation(resolve),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function motionValue(init,options){return new MotionValue(init,options)}function setMotionValue(visualElement,key,value){visualElement.hasValue(key)?visualElement.getValue(key).set(value):visualElement.addValue(key,motionValue(value))}const isMotionValue=value=>Boolean(value&&value.getVelocity);function addValueToWillChange(visualElement,key){const willChange=visualElement.getValue("willChange");if(function isWillChangeMotionValue(value){return Boolean(isMotionValue(value)&&value.add)}(willChange))return willChange.add(key)}const camelToDash=str=>str.replace(/([a-z])([A-Z])/gu,"$1-$2").toLowerCase(),optimizedAppearDataAttribute="data-"+camelToDash("framerAppearId");function getOptimisedAppearId(visualElement){return visualElement.props[optimizedAppearDataAttribute]}const instantAnimationState_current=!1,calcBezier=(t,a1,a2)=>(((1-3*a2+3*a1)*t+(3*a2-6*a1))*t+3*a1)*t;function cubicBezier(mX1,mY1,mX2,mY2){if(mX1===mY1&&mX2===mY2)return noop_noop;const getTForX=aX=>function binarySubdivide(x,lowerBound,upperBound,mX1,mX2){let currentX,currentT,i=0;do{currentT=lowerBound+(upperBound-lowerBound)/2,currentX=calcBezier(currentT,mX1,mX2)-x,currentX>0?upperBound=currentT:lowerBound=currentT}while(Math.abs(currentX)>1e-7&&++i<12);return currentT}(aX,0,1,mX1,mX2);return t=>0===t||1===t?t:calcBezier(getTForX(t),mY1,mY2)}const mirrorEasing=easing=>p=>p<=.5?easing(2*p)/2:(2-easing(2*(1-p)))/2,reverseEasing=easing=>p=>1-easing(1-p),backOut=cubicBezier(.33,1.53,.69,.99),backIn=reverseEasing(backOut),backInOut=mirrorEasing(backIn),anticipate=p=>(p*=2)<1?.5*backIn(p):.5*(2-Math.pow(2,-10*(p-1))),circIn=p=>1-Math.sin(Math.acos(p)),circOut=reverseEasing(circIn),circInOut=mirrorEasing(circIn),isZeroValueString=v=>/^0[^.\s]+$/u.test(v);const clamp=(min,max,v)=>v>max?max:v<min?min:v,number={test:v=>"number"==typeof v,parse:parseFloat,transform:v=>v},alpha={...number,transform:v=>clamp(0,1,v)},scale={...number,default:1},sanitize=v=>Math.round(1e5*v)/1e5,floatRegex=/-?(?:\d+(?:\.\d+)?|\.\d+)/gu;const singleColorRegex=/^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu,isColorString=(type,testProp)=>v=>Boolean("string"==typeof v&&singleColorRegex.test(v)&&v.startsWith(type)||testProp&&!function isNullish(v){return null==v}(v)&&Object.prototype.hasOwnProperty.call(v,testProp)),splitColor=(aName,bName,cName)=>v=>{if("string"!=typeof v)return v;const[a,b,c,alpha]=v.match(floatRegex);return{[aName]:parseFloat(a),[bName]:parseFloat(b),[cName]:parseFloat(c),alpha:void 0!==alpha?parseFloat(alpha):1}},rgbUnit={...number,transform:v=>Math.round((v=>clamp(0,255,v))(v))},rgba={test:isColorString("rgb","red"),parse:splitColor("red","green","blue"),transform:({red,green,blue,alpha:alpha$1=1})=>"rgba("+rgbUnit.transform(red)+", "+rgbUnit.transform(green)+", "+rgbUnit.transform(blue)+", "+sanitize(alpha.transform(alpha$1))+")"};const hex={test:isColorString("#"),parse:function parseHex(v){let r="",g="",b="",a="";return v.length>5?(r=v.substring(1,3),g=v.substring(3,5),b=v.substring(5,7),a=v.substring(7,9)):(r=v.substring(1,2),g=v.substring(2,3),b=v.substring(3,4),a=v.substring(4,5),r+=r,g+=g,b+=b,a+=a),{red:parseInt(r,16),green:parseInt(g,16),blue:parseInt(b,16),alpha:a?parseInt(a,16)/255:1}},transform:rgba.transform},createUnitType=unit=>({test:v=>"string"==typeof v&&v.endsWith(unit)&&1===v.split(" ").length,parse:parseFloat,transform:v=>`${v}${unit}`}),degrees=createUnitType("deg"),percent=createUnitType("%"),px=createUnitType("px"),vh=createUnitType("vh"),vw=createUnitType("vw"),progressPercentage={...percent,parse:v=>percent.parse(v)/100,transform:v=>percent.transform(100*v)},hsla={test:isColorString("hsl","hue"),parse:splitColor("hue","saturation","lightness"),transform:({hue,saturation,lightness,alpha:alpha$1=1})=>"hsla("+Math.round(hue)+", "+percent.transform(sanitize(saturation))+", "+percent.transform(sanitize(lightness))+", "+sanitize(alpha.transform(alpha$1))+")"},color={test:v=>rgba.test(v)||hex.test(v)||hsla.test(v),parse:v=>rgba.test(v)?rgba.parse(v):hsla.test(v)?hsla.parse(v):hex.parse(v),transform:v=>"string"==typeof v?v:v.hasOwnProperty("red")?rgba.transform(v):hsla.transform(v)},colorRegex=/(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;const complexRegex=/var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;function analyseComplexValue(value){const originalValue=value.toString(),values=[],indexes={color:[],number:[],var:[]},types=[];let i=0;const split=originalValue.replace(complexRegex,(parsedValue=>(color.test(parsedValue)?(indexes.color.push(i),types.push("color"),values.push(color.parse(parsedValue))):parsedValue.startsWith("var(")?(indexes.var.push(i),types.push("var"),values.push(parsedValue)):(indexes.number.push(i),types.push("number"),values.push(parseFloat(parsedValue))),++i,"${}"))).split("${}");return{values,split,indexes,types}}function parseComplexValue(v){return analyseComplexValue(v).values}function createTransformer(source){const{split,types}=analyseComplexValue(source),numSections=split.length;return v=>{let output="";for(let i=0;i<numSections;i++)if(output+=split[i],void 0!==v[i]){const type=types[i];output+="number"===type?sanitize(v[i]):"color"===type?color.transform(v[i]):v[i]}return output}}const convertNumbersToZero=v=>"number"==typeof v?0:v;const complex={test:function test(v){var _a,_b;return isNaN(v)&&"string"==typeof v&&((null===(_a=v.match(floatRegex))||void 0===_a?void 0:_a.length)||0)+((null===(_b=v.match(colorRegex))||void 0===_b?void 0:_b.length)||0)>0},parse:parseComplexValue,createTransformer,getAnimatableNone:function getAnimatableNone(v){const parsed=parseComplexValue(v);return createTransformer(v)(parsed.map(convertNumbersToZero))}},maxDefaults=new Set(["brightness","contrast","saturate","opacity"]);function applyDefaultFilter(v){const[name,value]=v.slice(0,-1).split("(");if("drop-shadow"===name)return v;const[number]=value.match(floatRegex)||[];if(!number)return v;const unit=value.replace(number,"");let defaultValue=maxDefaults.has(name)?1:0;return number!==value&&(defaultValue*=100),name+"("+defaultValue+unit+")"}const functionRegex=/\b([a-z-]*)\(.*?\)/gu,filter={...complex,getAnimatableNone:v=>{const functions=v.match(functionRegex);return functions?functions.map(applyDefaultFilter).join(" "):v}},browserNumberValueTypes={borderWidth:px,borderTopWidth:px,borderRightWidth:px,borderBottomWidth:px,borderLeftWidth:px,borderRadius:px,radius:px,borderTopLeftRadius:px,borderTopRightRadius:px,borderBottomRightRadius:px,borderBottomLeftRadius:px,width:px,maxWidth:px,height:px,maxHeight:px,top:px,right:px,bottom:px,left:px,padding:px,paddingTop:px,paddingRight:px,paddingBottom:px,paddingLeft:px,margin:px,marginTop:px,marginRight:px,marginBottom:px,marginLeft:px,backgroundPositionX:px,backgroundPositionY:px},transformValueTypes={rotate:degrees,rotateX:degrees,rotateY:degrees,rotateZ:degrees,scale,scaleX:scale,scaleY:scale,scaleZ:scale,skew:degrees,skewX:degrees,skewY:degrees,distance:px,translateX:px,translateY:px,translateZ:px,x:px,y:px,z:px,perspective:px,transformPerspective:px,opacity:alpha,originX:progressPercentage,originY:progressPercentage,originZ:px},type_int_int={...number,transform:Math.round},numberValueTypes={...browserNumberValueTypes,...transformValueTypes,zIndex:type_int_int,size:px,fillOpacity:alpha,strokeOpacity:alpha,numOctaves:type_int_int},defaultValueTypes={...numberValueTypes,color,backgroundColor:color,outlineColor:color,fill:color,stroke:color,borderColor:color,borderTopColor:color,borderRightColor:color,borderBottomColor:color,borderLeftColor:color,filter,WebkitFilter:filter},getDefaultValueType=key=>defaultValueTypes[key];function animatable_none_getAnimatableNone(key,value){let defaultValueType=getDefaultValueType(key);return defaultValueType!==filter&&(defaultValueType=complex),defaultValueType.getAnimatableNone?defaultValueType.getAnimatableNone(value):void 0}const invalidTemplates=new Set(["auto","none","0"]);const isNumOrPxType=v=>v===number||v===px,getPosFromMatrix=(matrix,pos)=>parseFloat(matrix.split(", ")[pos]),getTranslateFromMatrix=(pos2,pos3)=>(_bbox,{transform})=>{if("none"===transform||!transform)return 0;const matrix3d=transform.match(/^matrix3d\((.+)\)$/u);if(matrix3d)return getPosFromMatrix(matrix3d[1],pos3);{const matrix=transform.match(/^matrix\((.+)\)$/u);return matrix?getPosFromMatrix(matrix[1],pos2):0}},transformKeys=new Set(["x","y","z"]),nonTranslationalTransformKeys=transformPropOrder.filter((key=>!transformKeys.has(key)));const positionalValues={width:({x},{paddingLeft="0",paddingRight="0"})=>x.max-x.min-parseFloat(paddingLeft)-parseFloat(paddingRight),height:({y},{paddingTop="0",paddingBottom="0"})=>y.max-y.min-parseFloat(paddingTop)-parseFloat(paddingBottom),top:(_bbox,{top})=>parseFloat(top),left:(_bbox,{left})=>parseFloat(left),bottom:({y},{top})=>parseFloat(top)+(y.max-y.min),right:({x},{left})=>parseFloat(left)+(x.max-x.min),x:getTranslateFromMatrix(4,13),y:getTranslateFromMatrix(5,14)};positionalValues.translateX=positionalValues.x,positionalValues.translateY=positionalValues.y;const toResolve=new Set;let isScheduled=!1,anyNeedsMeasurement=!1;function measureAllKeyframes(){if(anyNeedsMeasurement){const resolversToMeasure=Array.from(toResolve).filter((resolver=>resolver.needsMeasurement)),elementsToMeasure=new Set(resolversToMeasure.map((resolver=>resolver.element))),transformsToRestore=new Map;elementsToMeasure.forEach((element=>{const removedTransforms=function removeNonTranslationalTransform(visualElement){const removedTransforms=[];return nonTranslationalTransformKeys.forEach((key=>{const value=visualElement.getValue(key);void 0!==value&&(removedTransforms.push([key,value.get()]),value.set(key.startsWith("scale")?1:0))})),removedTransforms}(element);removedTransforms.length&&(transformsToRestore.set(element,removedTransforms),element.render())})),resolversToMeasure.forEach((resolver=>resolver.measureInitialState())),elementsToMeasure.forEach((element=>{element.render();const restore=transformsToRestore.get(element);restore&&restore.forEach((([key,value])=>{var _a;null===(_a=element.getValue(key))||void 0===_a||_a.set(value)}))})),resolversToMeasure.forEach((resolver=>resolver.measureEndState())),resolversToMeasure.forEach((resolver=>{void 0!==resolver.suspendedScrollY&&window.scrollTo(0,resolver.suspendedScrollY)}))}anyNeedsMeasurement=!1,isScheduled=!1,toResolve.forEach((resolver=>resolver.complete())),toResolve.clear()}function readAllKeyframes(){toResolve.forEach((resolver=>{resolver.readKeyframes(),resolver.needsMeasurement&&(anyNeedsMeasurement=!0)}))}class KeyframeResolver{constructor(unresolvedKeyframes,onComplete,name,motionValue,element,isAsync=!1){this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...unresolvedKeyframes],this.onComplete=onComplete,this.name=name,this.motionValue=motionValue,this.element=element,this.isAsync=isAsync}scheduleResolve(){this.isScheduled=!0,this.isAsync?(toResolve.add(this),isScheduled||(isScheduled=!0,frame_frame.read(readAllKeyframes),frame_frame.resolveKeyframes(measureAllKeyframes))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes,name,element,motionValue}=this;for(let i=0;i<unresolvedKeyframes.length;i++)if(null===unresolvedKeyframes[i])if(0===i){const currentValue=null==motionValue?void 0:motionValue.get(),finalKeyframe=unresolvedKeyframes[unresolvedKeyframes.length-1];if(void 0!==currentValue)unresolvedKeyframes[0]=currentValue;else if(element&&name){const valueAsRead=element.readValue(name,finalKeyframe);null!=valueAsRead&&(unresolvedKeyframes[0]=valueAsRead)}void 0===unresolvedKeyframes[0]&&(unresolvedKeyframes[0]=finalKeyframe),motionValue&&void 0===currentValue&&motionValue.set(unresolvedKeyframes[0])}else unresolvedKeyframes[i]=unresolvedKeyframes[i-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),toResolve.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,toResolve.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}let warning=noop_noop,invariant=noop_noop;const isNumericalString=v=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v),checkStringStartsWith=token=>key=>"string"==typeof key&&key.startsWith(token),isCSSVariableName=checkStringStartsWith("--"),startsAsVariableToken=checkStringStartsWith("var(--"),isCSSVariableToken=value=>!!startsAsVariableToken(value)&&singleCssVariableRegex.test(value.split("/*")[0].trim()),singleCssVariableRegex=/var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,splitCSSVariableRegex=/^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;function getVariableValue(current,element,depth=1){invariant(depth<=4,`Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);const[token,fallback]=function parseCSSVariable(current){const match=splitCSSVariableRegex.exec(current);if(!match)return[,];const[,token1,token2,fallback]=match;return[`--${null!=token1?token1:token2}`,fallback]}(current);if(!token)return;const resolved=window.getComputedStyle(element).getPropertyValue(token);if(resolved){const trimmed=resolved.trim();return isNumericalString(trimmed)?parseFloat(trimmed):trimmed}return isCSSVariableToken(fallback)?getVariableValue(fallback,element,depth+1):fallback}const testValueType=v=>type=>type.test(v),dimensionValueTypes=[number,px,percent,degrees,vw,vh,{test:v=>"auto"===v,parse:v=>v}],findDimensionValueType=v=>dimensionValueTypes.find(testValueType(v));class DOMKeyframesResolver extends KeyframeResolver{constructor(unresolvedKeyframes,onComplete,name,motionValue,element){super(unresolvedKeyframes,onComplete,name,motionValue,element,!0)}readKeyframes(){const{unresolvedKeyframes,element,name}=this;if(!element||!element.current)return;super.readKeyframes();for(let i=0;i<unresolvedKeyframes.length;i++){let keyframe=unresolvedKeyframes[i];if("string"==typeof keyframe&&(keyframe=keyframe.trim(),isCSSVariableToken(keyframe))){const resolved=getVariableValue(keyframe,element.current);void 0!==resolved&&(unresolvedKeyframes[i]=resolved),i===unresolvedKeyframes.length-1&&(this.finalKeyframe=keyframe)}}if(this.resolveNoneKeyframes(),!positionalKeys.has(name)||2!==unresolvedKeyframes.length)return;const[origin,target]=unresolvedKeyframes,originType=findDimensionValueType(origin),targetType=findDimensionValueType(target);if(originType!==targetType)if(isNumOrPxType(originType)&&isNumOrPxType(targetType))for(let i=0;i<unresolvedKeyframes.length;i++){const value=unresolvedKeyframes[i];"string"==typeof value&&(unresolvedKeyframes[i]=parseFloat(value))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes,name}=this,noneKeyframeIndexes=[];for(let i=0;i<unresolvedKeyframes.length;i++)("number"==typeof(value=unresolvedKeyframes[i])?0===value:null===value||"none"===value||"0"===value||isZeroValueString(value))&&noneKeyframeIndexes.push(i);var value;noneKeyframeIndexes.length&&function makeNoneKeyframesAnimatable(unresolvedKeyframes,noneKeyframeIndexes,name){let animatableTemplate,i=0;for(;i<unresolvedKeyframes.length&&!animatableTemplate;){const keyframe=unresolvedKeyframes[i];"string"==typeof keyframe&&!invalidTemplates.has(keyframe)&&analyseComplexValue(keyframe).values.length&&(animatableTemplate=unresolvedKeyframes[i]),i++}if(animatableTemplate&&name)for(const noneIndex of noneKeyframeIndexes)unresolvedKeyframes[noneIndex]=animatable_none_getAnimatableNone(name,animatableTemplate)}(unresolvedKeyframes,noneKeyframeIndexes,name)}measureInitialState(){const{element,unresolvedKeyframes,name}=this;if(!element||!element.current)return;"height"===name&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=positionalValues[name](element.measureViewportBox(),window.getComputedStyle(element.current)),unresolvedKeyframes[0]=this.measuredOrigin;const measureKeyframe=unresolvedKeyframes[unresolvedKeyframes.length-1];void 0!==measureKeyframe&&element.getValue(name,measureKeyframe).jump(measureKeyframe,!1)}measureEndState(){var _a;const{element,name,unresolvedKeyframes}=this;if(!element||!element.current)return;const value=element.getValue(name);value&&value.jump(this.measuredOrigin,!1);const finalKeyframeIndex=unresolvedKeyframes.length-1,finalKeyframe=unresolvedKeyframes[finalKeyframeIndex];unresolvedKeyframes[finalKeyframeIndex]=positionalValues[name](element.measureViewportBox(),window.getComputedStyle(element.current)),null!==finalKeyframe&&void 0===this.finalKeyframe&&(this.finalKeyframe=finalKeyframe),(null===(_a=this.removedTransforms)||void 0===_a?void 0:_a.length)&&this.removedTransforms.forEach((([unsetTransformName,unsetTransformValue])=>{element.getValue(unsetTransformName).set(unsetTransformValue)})),this.resolveNoneKeyframes()}}const isAnimatable=(value,name)=>"zIndex"!==name&&(!("number"!=typeof value&&!Array.isArray(value))||!("string"!=typeof value||!complex.test(value)&&"0"!==value||value.startsWith("url(")));function canAnimate(keyframes,name,type,velocity){const originKeyframe=keyframes[0];if(null===originKeyframe)return!1;if("display"===name||"visibility"===name)return!0;const targetKeyframe=keyframes[keyframes.length-1],isOriginAnimatable=isAnimatable(originKeyframe,name),isTargetAnimatable=isAnimatable(targetKeyframe,name);return warning(isOriginAnimatable===isTargetAnimatable,`You are trying to animate ${name} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`),!(!isOriginAnimatable||!isTargetAnimatable)&&(function hasKeyframesChanged(keyframes){const current=keyframes[0];if(1===keyframes.length)return!0;for(let i=0;i<keyframes.length;i++)if(keyframes[i]!==current)return!0}(keyframes)||("spring"===type||isGenerator(type))&&velocity)}const isNotNull=value=>null!==value;function getFinalKeyframe(keyframes,{repeat,repeatType="loop"},finalKeyframe){const resolvedKeyframes=keyframes.filter(isNotNull),index=repeat&&"loop"!==repeatType&&repeat%2==1?0:resolvedKeyframes.length-1;return index&&void 0!==finalKeyframe?finalKeyframe:resolvedKeyframes[index]}class BaseAnimation{constructor({autoplay=!0,delay=0,type="keyframes",repeat=0,repeatDelay=0,repeatType="loop",...options}){this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=time.now(),this.options={autoplay,delay,type,repeat,repeatDelay,repeatType,...options},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt}get resolved(){return this._resolved||this.hasAttemptedResolve||function flushKeyframeResolvers(){readAllKeyframes(),measureAllKeyframes()}(),this._resolved}onKeyframesResolved(keyframes,finalKeyframe){this.resolvedAt=time.now(),this.hasAttemptedResolve=!0;const{name,type,velocity,delay,onComplete,onUpdate,isGenerator}=this.options;if(!isGenerator&&!canAnimate(keyframes,name,type,velocity)){if(instantAnimationState_current||!delay)return onUpdate&&onUpdate(getFinalKeyframe(keyframes,this.options,finalKeyframe)),onComplete&&onComplete(),void this.resolveFinishedPromise();this.options.duration=0}const resolvedAnimation=this.initPlayback(keyframes,finalKeyframe);!1!==resolvedAnimation&&(this._resolved={keyframes,finalKeyframe,...resolvedAnimation},this.onPostResolved())}onPostResolved(){}then(resolve,reject){return this.currentFinishedPromise.then(resolve,reject)}flatten(){this.options.type="keyframes",this.options.ease="linear"}updateFinishedPromise(){this.currentFinishedPromise=new Promise((resolve=>{this.resolveFinishedPromise=resolve}))}}const mixNumber=(from,to,progress)=>from+(to-from)*progress;function hueToRgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}function mixImmediate(a,b){return p=>p>0?b:a}const mixLinearColor=(from,to,v)=>{const fromExpo=from*from,expo=v*(to*to-fromExpo)+fromExpo;return expo<0?0:Math.sqrt(expo)},colorTypes=[hex,rgba,hsla];function asRGBA(color){const type=(v=color,colorTypes.find((type=>type.test(v))));var v;if(warning(Boolean(type),`'${color}' is not an animatable color. Use the equivalent color code instead.`),!Boolean(type))return!1;let model=type.parse(color);return type===hsla&&(model=function hslaToRgba({hue,saturation,lightness,alpha}){hue/=360,lightness/=100;let red=0,green=0,blue=0;if(saturation/=100){const q=lightness<.5?lightness*(1+saturation):lightness+saturation-lightness*saturation,p=2*lightness-q;red=hueToRgb(p,q,hue+1/3),green=hueToRgb(p,q,hue),blue=hueToRgb(p,q,hue-1/3)}else red=green=blue=lightness;return{red:Math.round(255*red),green:Math.round(255*green),blue:Math.round(255*blue),alpha}}(model)),model}const mixColor=(from,to)=>{const fromRGBA=asRGBA(from),toRGBA=asRGBA(to);if(!fromRGBA||!toRGBA)return mixImmediate(from,to);const blended={...fromRGBA};return v=>(blended.red=mixLinearColor(fromRGBA.red,toRGBA.red,v),blended.green=mixLinearColor(fromRGBA.green,toRGBA.green,v),blended.blue=mixLinearColor(fromRGBA.blue,toRGBA.blue,v),blended.alpha=mixNumber(fromRGBA.alpha,toRGBA.alpha,v),rgba.transform(blended))},combineFunctions=(a,b)=>v=>b(a(v)),pipe=(...transformers)=>transformers.reduce(combineFunctions),invisibleValues=new Set(["none","hidden"]);function complex_mixNumber(a,b){return p=>mixNumber(a,b,p)}function getMixer(a){return"number"==typeof a?complex_mixNumber:"string"==typeof a?isCSSVariableToken(a)?mixImmediate:color.test(a)?mixColor:mixComplex:Array.isArray(a)?mixArray:"object"==typeof a?color.test(a)?mixColor:mixObject:mixImmediate}function mixArray(a,b){const output=[...a],numValues=output.length,blendValue=a.map(((v,i)=>getMixer(v)(v,b[i])));return p=>{for(let i=0;i<numValues;i++)output[i]=blendValue[i](p);return output}}function mixObject(a,b){const output={...a,...b},blendValue={};for(const key in output)void 0!==a[key]&&void 0!==b[key]&&(blendValue[key]=getMixer(a[key])(a[key],b[key]));return v=>{for(const key in blendValue)output[key]=blendValue[key](v);return output}}const mixComplex=(origin,target)=>{const template=complex.createTransformer(target),originStats=analyseComplexValue(origin),targetStats=analyseComplexValue(target);return originStats.indexes.var.length===targetStats.indexes.var.length&&originStats.indexes.color.length===targetStats.indexes.color.length&&originStats.indexes.number.length>=targetStats.indexes.number.length?invisibleValues.has(origin)&&!targetStats.values.length||invisibleValues.has(target)&&!originStats.values.length?function mixVisibility(origin,target){return invisibleValues.has(origin)?p=>p<=0?origin:target:p=>p>=1?target:origin}(origin,target):pipe(mixArray(function matchOrder(origin,target){var _a;const orderedOrigin=[],pointers={color:0,var:0,number:0};for(let i=0;i<target.values.length;i++){const type=target.types[i],originIndex=origin.indexes[type][pointers[type]],originValue=null!==(_a=origin.values[originIndex])&&void 0!==_a?_a:0;orderedOrigin[i]=originValue,pointers[type]++}return orderedOrigin}(originStats,targetStats),targetStats.values),template):(warning(!0,`Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),mixImmediate(origin,target))};function mix(from,to,p){if("number"==typeof from&&"number"==typeof to&&"number"==typeof p)return mixNumber(from,to,p);return getMixer(from)(from,to)}function calcGeneratorVelocity(resolveValue,t,current){const prevT=Math.max(t-5,0);return velocityPerSecond(current-resolveValue(prevT),t-prevT)}const springDefaults_stiffness=100,springDefaults_damping=10,springDefaults_mass=1,springDefaults_velocity=0,springDefaults_duration=800,springDefaults_bounce=.3,springDefaults_visualDuration=.3,springDefaults_restSpeed={granular:.01,default:2},springDefaults_restDelta={granular:.005,default:.5},springDefaults_minDuration=.01,springDefaults_maxDuration=10,springDefaults_minDamping=.05,springDefaults_maxDamping=1;function findSpring({duration=springDefaults_duration,bounce=springDefaults_bounce,velocity=springDefaults_velocity,mass=springDefaults_mass}){let envelope,derivative;warning(duration<=time_conversion_secondsToMilliseconds(springDefaults_maxDuration),"Spring duration must be 10 seconds or less");let dampingRatio=1-bounce;dampingRatio=clamp(springDefaults_minDamping,springDefaults_maxDamping,dampingRatio),duration=clamp(springDefaults_minDuration,springDefaults_maxDuration,millisecondsToSeconds(duration)),dampingRatio<1?(envelope=undampedFreq=>{const exponentialDecay=undampedFreq*dampingRatio,delta=exponentialDecay*duration;return.001-(exponentialDecay-velocity)/calcAngularFreq(undampedFreq,dampingRatio)*Math.exp(-delta)},derivative=undampedFreq=>{const delta=undampedFreq*dampingRatio*duration,d=delta*velocity+velocity,e=Math.pow(dampingRatio,2)*Math.pow(undampedFreq,2)*duration,f=Math.exp(-delta),g=calcAngularFreq(Math.pow(undampedFreq,2),dampingRatio);return(.001-envelope(undampedFreq)>0?-1:1)*((d-e)*f)/g}):(envelope=undampedFreq=>Math.exp(-undampedFreq*duration)*((undampedFreq-velocity)*duration+1)-.001,derivative=undampedFreq=>Math.exp(-undampedFreq*duration)*(duration*duration*(velocity-undampedFreq)));const undampedFreq=function approximateRoot(envelope,derivative,initialGuess){let result=initialGuess;for(let i=1;i<rootIterations;i++)result-=envelope(result)/derivative(result);return result}(envelope,derivative,5/duration);if(duration=time_conversion_secondsToMilliseconds(duration),isNaN(undampedFreq))return{stiffness:springDefaults_stiffness,damping:springDefaults_damping,duration};{const stiffness=Math.pow(undampedFreq,2)*mass;return{stiffness,damping:2*dampingRatio*Math.sqrt(mass*stiffness),duration}}}const rootIterations=12;function calcAngularFreq(undampedFreq,dampingRatio){return undampedFreq*Math.sqrt(1-dampingRatio*dampingRatio)}const durationKeys=["duration","bounce"],physicsKeys=["stiffness","damping","mass"];function isSpringType(options,keys){return keys.some((key=>void 0!==options[key]))}function spring(optionsOrVisualDuration=springDefaults_visualDuration,bounce=springDefaults_bounce){const options="object"!=typeof optionsOrVisualDuration?{visualDuration:optionsOrVisualDuration,keyframes:[0,1],bounce}:optionsOrVisualDuration;let{restSpeed,restDelta}=options;const origin=options.keyframes[0],target=options.keyframes[options.keyframes.length-1],state={done:!1,value:origin},{stiffness,damping,mass,duration,velocity,isResolvedFromDuration}=function getSpringOptions(options){let springOptions={velocity:springDefaults_velocity,stiffness:springDefaults_stiffness,damping:springDefaults_damping,mass:springDefaults_mass,isResolvedFromDuration:!1,...options};if(!isSpringType(options,physicsKeys)&&isSpringType(options,durationKeys))if(options.visualDuration){const visualDuration=options.visualDuration,root=2*Math.PI/(1.2*visualDuration),stiffness=root*root,damping=2*clamp(.05,1,1-(options.bounce||0))*Math.sqrt(stiffness);springOptions={...springOptions,mass:springDefaults_mass,stiffness,damping}}else{const derived=findSpring(options);springOptions={...springOptions,...derived,mass:springDefaults_mass},springOptions.isResolvedFromDuration=!0}return springOptions}({...options,velocity:-millisecondsToSeconds(options.velocity||0)}),initialVelocity=velocity||0,dampingRatio=damping/(2*Math.sqrt(stiffness*mass)),initialDelta=target-origin,undampedAngularFreq=millisecondsToSeconds(Math.sqrt(stiffness/mass)),isGranularScale=Math.abs(initialDelta)<5;let resolveSpring;if(restSpeed||(restSpeed=isGranularScale?springDefaults_restSpeed.granular:springDefaults_restSpeed.default),restDelta||(restDelta=isGranularScale?springDefaults_restDelta.granular:springDefaults_restDelta.default),dampingRatio<1){const angularFreq=calcAngularFreq(undampedAngularFreq,dampingRatio);resolveSpring=t=>{const envelope=Math.exp(-dampingRatio*undampedAngularFreq*t);return target-envelope*((initialVelocity+dampingRatio*undampedAngularFreq*initialDelta)/angularFreq*Math.sin(angularFreq*t)+initialDelta*Math.cos(angularFreq*t))}}else if(1===dampingRatio)resolveSpring=t=>target-Math.exp(-undampedAngularFreq*t)*(initialDelta+(initialVelocity+undampedAngularFreq*initialDelta)*t);else{const dampedAngularFreq=undampedAngularFreq*Math.sqrt(dampingRatio*dampingRatio-1);resolveSpring=t=>{const envelope=Math.exp(-dampingRatio*undampedAngularFreq*t),freqForT=Math.min(dampedAngularFreq*t,300);return target-envelope*((initialVelocity+dampingRatio*undampedAngularFreq*initialDelta)*Math.sinh(freqForT)+dampedAngularFreq*initialDelta*Math.cosh(freqForT))/dampedAngularFreq}}const generator={calculatedDuration:isResolvedFromDuration&&duration||null,next:t=>{const current=resolveSpring(t);if(isResolvedFromDuration)state.done=t>=duration;else{let currentVelocity=0;dampingRatio<1&&(currentVelocity=0===t?time_conversion_secondsToMilliseconds(initialVelocity):calcGeneratorVelocity(resolveSpring,t,current));const isBelowVelocityThreshold=Math.abs(currentVelocity)<=restSpeed,isBelowDisplacementThreshold=Math.abs(target-current)<=restDelta;state.done=isBelowVelocityThreshold&&isBelowDisplacementThreshold}return state.value=state.done?target:current,state},toString:()=>{const calculatedDuration=Math.min(calcGeneratorDuration(generator),2e4),easing=generateLinearEasing((progress=>generator.next(calculatedDuration*progress).value),calculatedDuration,30);return calculatedDuration+"ms "+easing}};return generator}function inertia({keyframes,velocity=0,power=.8,timeConstant=325,bounceDamping=10,bounceStiffness=500,modifyTarget,min,max,restDelta=.5,restSpeed}){const origin=keyframes[0],state={done:!1,value:origin},nearestBoundary=v=>void 0===min?max:void 0===max||Math.abs(min-v)<Math.abs(max-v)?min:max;let amplitude=power*velocity;const ideal=origin+amplitude,target=void 0===modifyTarget?ideal:modifyTarget(ideal);target!==ideal&&(amplitude=target-origin);const calcDelta=t=>-amplitude*Math.exp(-t/timeConstant),calcLatest=t=>target+calcDelta(t),applyFriction=t=>{const delta=calcDelta(t),latest=calcLatest(t);state.done=Math.abs(delta)<=restDelta,state.value=state.done?target:latest};let timeReachedBoundary,spring$1;const checkCatchBoundary=t=>{var v;(v=state.value,void 0!==min&&v<min||void 0!==max&&v>max)&&(timeReachedBoundary=t,spring$1=spring({keyframes:[state.value,nearestBoundary(state.value)],velocity:calcGeneratorVelocity(calcLatest,t,state.value),damping:bounceDamping,stiffness:bounceStiffness,restDelta,restSpeed}))};return checkCatchBoundary(0),{calculatedDuration:null,next:t=>{let hasUpdatedFrame=!1;return spring$1||void 0!==timeReachedBoundary||(hasUpdatedFrame=!0,applyFriction(t),checkCatchBoundary(t)),void 0!==timeReachedBoundary&&t>=timeReachedBoundary?spring$1.next(t-timeReachedBoundary):(!hasUpdatedFrame&&applyFriction(t),state)}}}const easeIn=cubicBezier(.42,0,1,1),easeOut=cubicBezier(0,0,.58,1),easeInOut=cubicBezier(.42,0,.58,1),easingLookup={linear:noop_noop,easeIn,easeInOut,easeOut,circIn,circInOut,circOut,backIn,backInOut,backOut,anticipate},easingDefinitionToFunction=definition=>{if(isBezierDefinition(definition)){invariant(4===definition.length,"Cubic bezier arrays must contain four numerical values.");const[x1,y1,x2,y2]=definition;return cubicBezier(x1,y1,x2,y2)}return"string"==typeof definition?(invariant(void 0!==easingLookup[definition],`Invalid easing type '${definition}'`),easingLookup[definition]):definition};function interpolate(input,output,{clamp:isClamp=!0,ease,mixer}={}){const inputLength=input.length;if(invariant(inputLength===output.length,"Both input and output ranges must be the same length"),1===inputLength)return()=>output[0];if(2===inputLength&&output[0]===output[1])return()=>output[1];const isZeroDeltaRange=input[0]===input[1];input[0]>input[inputLength-1]&&(input=[...input].reverse(),output=[...output].reverse());const mixers=function createMixers(output,ease,customMixer){const mixers=[],mixerFactory=customMixer||mix,numMixers=output.length-1;for(let i=0;i<numMixers;i++){let mixer=mixerFactory(output[i],output[i+1]);if(ease){const easingFunction=Array.isArray(ease)?ease[i]||noop_noop:ease;mixer=pipe(easingFunction,mixer)}mixers.push(mixer)}return mixers}(output,ease,mixer),numMixers=mixers.length,interpolator=v=>{if(isZeroDeltaRange&&v<input[0])return output[0];let i=0;if(numMixers>1)for(;i<input.length-2&&!(v<input[i+1]);i++);const progressInRange=progress(input[i],input[i+1],v);return mixers[i](progressInRange)};return isClamp?v=>interpolator(clamp(input[0],input[inputLength-1],v)):interpolator}function defaultOffset(arr){const offset=[0];return function fillOffset(offset,remaining){const min=offset[offset.length-1];for(let i=1;i<=remaining;i++){const offsetProgress=progress(0,remaining,i);offset.push(mixNumber(min,1,offsetProgress))}}(offset,arr.length-1),offset}function keyframes({duration=300,keyframes:keyframeValues,times,ease="easeInOut"}){const easingFunctions=(ease=>Array.isArray(ease)&&"number"!=typeof ease[0])(ease)?ease.map(easingDefinitionToFunction):easingDefinitionToFunction(ease),state={done:!1,value:keyframeValues[0]},absoluteTimes=function convertOffsetToTimes(offset,duration){return offset.map((o=>o*duration))}(times&&times.length===keyframeValues.length?times:defaultOffset(keyframeValues),duration),mapTimeToKeyframe=interpolate(absoluteTimes,keyframeValues,{ease:Array.isArray(easingFunctions)?easingFunctions:(values=keyframeValues,easing=easingFunctions,values.map((()=>easing||easeInOut)).splice(0,values.length-1))});var values,easing;return{calculatedDuration:duration,next:t=>(state.value=mapTimeToKeyframe(t),state.done=t>=duration,state)}}const frameloopDriver=update=>{const passTimestamp=({timestamp})=>update(timestamp);return{start:()=>frame_frame.update(passTimestamp,!0),stop:()=>cancelFrame(passTimestamp),now:()=>frameData.isProcessing?frameData.timestamp:time.now()}},generators={decay:inertia,inertia,tween:keyframes,keyframes,spring},percentToProgress=percent=>percent/100;class MainThreadAnimation extends BaseAnimation{constructor(options){super(options),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState="running",this.startTime=null,this.state="idle",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.teardown();const{onStop}=this.options;onStop&&onStop()};const{name,motionValue,element,keyframes}=this.options,KeyframeResolver$1=(null==element?void 0:element.KeyframeResolver)||KeyframeResolver;this.resolver=new KeyframeResolver$1(keyframes,((resolvedKeyframes,finalKeyframe)=>this.onKeyframesResolved(resolvedKeyframes,finalKeyframe)),name,motionValue,element),this.resolver.scheduleResolve()}flatten(){super.flatten(),this._resolved&&Object.assign(this._resolved,this.initPlayback(this._resolved.keyframes))}initPlayback(keyframes$1){const{type="keyframes",repeat=0,repeatDelay=0,repeatType,velocity=0}=this.options,generatorFactory=isGenerator(type)?type:generators[type]||keyframes;let mapPercentToKeyframes,mirroredGenerator;generatorFactory!==keyframes&&"number"!=typeof keyframes$1[0]&&(mapPercentToKeyframes=pipe(percentToProgress,mix(keyframes$1[0],keyframes$1[1])),keyframes$1=[0,100]);const generator=generatorFactory({...this.options,keyframes:keyframes$1});"mirror"===repeatType&&(mirroredGenerator=generatorFactory({...this.options,keyframes:[...keyframes$1].reverse(),velocity:-velocity})),null===generator.calculatedDuration&&(generator.calculatedDuration=calcGeneratorDuration(generator));const{calculatedDuration}=generator,resolvedDuration=calculatedDuration+repeatDelay;return{generator,mirroredGenerator,mapPercentToKeyframes,calculatedDuration,resolvedDuration,totalDuration:resolvedDuration*(repeat+1)-repeatDelay}}onPostResolved(){const{autoplay=!0}=this.options;this.play(),"paused"!==this.pendingPlayState&&autoplay?this.state=this.pendingPlayState:this.pause()}tick(timestamp,sample=!1){const{resolved}=this;if(!resolved){const{keyframes}=this.options;return{done:!0,value:keyframes[keyframes.length-1]}}const{finalKeyframe,generator,mirroredGenerator,mapPercentToKeyframes,keyframes,calculatedDuration,totalDuration,resolvedDuration}=resolved;if(null===this.startTime)return generator.next(0);const{delay,repeat,repeatType,repeatDelay,onUpdate}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,timestamp):this.speed<0&&(this.startTime=Math.min(timestamp-totalDuration/this.speed,this.startTime)),sample?this.currentTime=timestamp:null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=Math.round(timestamp-this.startTime)*this.speed;const timeWithoutDelay=this.currentTime-delay*(this.speed>=0?1:-1),isInDelayPhase=this.speed>=0?timeWithoutDelay<0:timeWithoutDelay>totalDuration;this.currentTime=Math.max(timeWithoutDelay,0),"finished"===this.state&&null===this.holdTime&&(this.currentTime=totalDuration);let elapsed=this.currentTime,frameGenerator=generator;if(repeat){const progress=Math.min(this.currentTime,totalDuration)/resolvedDuration;let currentIteration=Math.floor(progress),iterationProgress=progress%1;!iterationProgress&&progress>=1&&(iterationProgress=1),1===iterationProgress&&currentIteration--,currentIteration=Math.min(currentIteration,repeat+1);Boolean(currentIteration%2)&&("reverse"===repeatType?(iterationProgress=1-iterationProgress,repeatDelay&&(iterationProgress-=repeatDelay/resolvedDuration)):"mirror"===repeatType&&(frameGenerator=mirroredGenerator)),elapsed=clamp(0,1,iterationProgress)*resolvedDuration}const state=isInDelayPhase?{done:!1,value:keyframes[0]}:frameGenerator.next(elapsed);mapPercentToKeyframes&&(state.value=mapPercentToKeyframes(state.value));let{done}=state;isInDelayPhase||null===calculatedDuration||(done=this.speed>=0?this.currentTime>=totalDuration:this.currentTime<=0);const isAnimationFinished=null===this.holdTime&&("finished"===this.state||"running"===this.state&&done);return isAnimationFinished&&void 0!==finalKeyframe&&(state.value=getFinalKeyframe(keyframes,this.options,finalKeyframe)),onUpdate&&onUpdate(state.value),isAnimationFinished&&this.finish(),state}get duration(){const{resolved}=this;return resolved?millisecondsToSeconds(resolved.calculatedDuration):0}get time(){return millisecondsToSeconds(this.currentTime)}set time(newTime){newTime=time_conversion_secondsToMilliseconds(newTime),this.currentTime=newTime,null!==this.holdTime||0===this.speed?this.holdTime=newTime:this.driver&&(this.startTime=this.driver.now()-newTime/this.speed)}get speed(){return this.playbackSpeed}set speed(newSpeed){const hasChanged=this.playbackSpeed!==newSpeed;this.playbackSpeed=newSpeed,hasChanged&&(this.time=millisecondsToSeconds(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved)return void(this.pendingPlayState="running");if(this.isStopped)return;const{driver=frameloopDriver,onPlay,startTime}=this.options;this.driver||(this.driver=driver((timestamp=>this.tick(timestamp)))),onPlay&&onPlay();const now=this.driver.now();null!==this.holdTime?this.startTime=now-this.holdTime:this.startTime?"finished"===this.state&&(this.startTime=now):this.startTime=null!=startTime?startTime:this.calcStartTime(),"finished"===this.state&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state="running",this.driver.start()}pause(){var _a;this._resolved?(this.state="paused",this.holdTime=null!==(_a=this.currentTime)&&void 0!==_a?_a:0):this.pendingPlayState="paused"}complete(){"running"!==this.state&&this.play(),this.pendingPlayState=this.state="finished",this.holdTime=null}finish(){this.teardown(),this.state="finished";const{onComplete}=this.options;onComplete&&onComplete()}cancel(){null!==this.cancelTime&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state="idle",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(time){return this.startTime=0,this.tick(time,!0)}}const acceleratedValues=new Set(["opacity","clipPath","filter","transform"]);const supportsWaapi=memo((()=>Object.hasOwnProperty.call(Element.prototype,"animate")));const unsupportedEasingFunctions={anticipate,backInOut,circInOut};class AcceleratedAnimation extends BaseAnimation{constructor(options){super(options);const{name,motionValue,element,keyframes}=this.options;this.resolver=new DOMKeyframesResolver(keyframes,((resolvedKeyframes,finalKeyframe)=>this.onKeyframesResolved(resolvedKeyframes,finalKeyframe)),name,motionValue,element),this.resolver.scheduleResolve()}initPlayback(keyframes,finalKeyframe){let{duration=300,times,ease,type,motionValue,name,startTime}=this.options;if(!motionValue.owner||!motionValue.owner.current)return!1;if("string"==typeof ease&&supportsLinearEasing()&&function isUnsupportedEase(key){return key in unsupportedEasingFunctions}(ease)&&(ease=unsupportedEasingFunctions[ease]),function requiresPregeneratedKeyframes(options){return isGenerator(options.type)||"spring"===options.type||!isWaapiSupportedEasing(options.ease)}(this.options)){const{onComplete,onUpdate,motionValue,element,...options}=this.options,pregeneratedAnimation=function pregenerateKeyframes(keyframes,options){const sampleAnimation=new MainThreadAnimation({...options,keyframes,repeat:0,delay:0,isGenerator:!0});let state={done:!1,value:keyframes[0]};const pregeneratedKeyframes=[];let t=0;for(;!state.done&&t<2e4;)state=sampleAnimation.sample(t),pregeneratedKeyframes.push(state.value),t+=10;return{times:void 0,keyframes:pregeneratedKeyframes,duration:t-10,ease:"linear"}}(keyframes,options);1===(keyframes=pregeneratedAnimation.keyframes).length&&(keyframes[1]=keyframes[0]),duration=pregeneratedAnimation.duration,times=pregeneratedAnimation.times,ease=pregeneratedAnimation.ease,type="keyframes"}const animation=function startWaapiAnimation(element,valueName,keyframes,{delay=0,duration=300,repeat=0,repeatType="loop",ease="easeInOut",times}={}){const keyframeOptions={[valueName]:keyframes};times&&(keyframeOptions.offset=times);const easing=easing_mapEasingToNativeEasing(ease,duration);return Array.isArray(easing)&&(keyframeOptions.easing=easing),element.animate(keyframeOptions,{delay,duration,easing:Array.isArray(easing)?"linear":easing,fill:"both",iterations:repeat+1,direction:"reverse"===repeatType?"alternate":"normal"})}(motionValue.owner.current,name,keyframes,{...this.options,duration,times,ease});return animation.startTime=null!=startTime?startTime:this.calcStartTime(),this.pendingTimeline?(attachTimeline(animation,this.pendingTimeline),this.pendingTimeline=void 0):animation.onfinish=()=>{const{onComplete}=this.options;motionValue.set(getFinalKeyframe(keyframes,this.options,finalKeyframe)),onComplete&&onComplete(),this.cancel(),this.resolveFinishedPromise()},{animation,duration,times,type,ease,keyframes}}get duration(){const{resolved}=this;if(!resolved)return 0;const{duration}=resolved;return millisecondsToSeconds(duration)}get time(){const{resolved}=this;if(!resolved)return 0;const{animation}=resolved;return millisecondsToSeconds(animation.currentTime||0)}set time(newTime){const{resolved}=this;if(!resolved)return;const{animation}=resolved;animation.currentTime=time_conversion_secondsToMilliseconds(newTime)}get speed(){const{resolved}=this;if(!resolved)return 1;const{animation}=resolved;return animation.playbackRate}set speed(newSpeed){const{resolved}=this;if(!resolved)return;const{animation}=resolved;animation.playbackRate=newSpeed}get state(){const{resolved}=this;if(!resolved)return"idle";const{animation}=resolved;return animation.playState}get startTime(){const{resolved}=this;if(!resolved)return null;const{animation}=resolved;return animation.startTime}attachTimeline(timeline){if(this._resolved){const{resolved}=this;if(!resolved)return noop_noop;const{animation}=resolved;attachTimeline(animation,timeline)}else this.pendingTimeline=timeline;return noop_noop}play(){if(this.isStopped)return;const{resolved}=this;if(!resolved)return;const{animation}=resolved;"finished"===animation.playState&&this.updateFinishedPromise(),animation.play()}pause(){const{resolved}=this;if(!resolved)return;const{animation}=resolved;animation.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved}=this;if(!resolved)return;const{animation,keyframes,duration,type,ease,times}=resolved;if("idle"===animation.playState||"finished"===animation.playState)return;if(this.time){const{motionValue,onUpdate,onComplete,element,...options}=this.options,sampleAnimation=new MainThreadAnimation({...options,keyframes,duration,type,ease,times,isGenerator:!0}),sampleTime=time_conversion_secondsToMilliseconds(this.time);motionValue.setWithVelocity(sampleAnimation.sample(sampleTime-10).value,sampleAnimation.sample(sampleTime).value,10)}const{onStop}=this.options;onStop&&onStop(),this.cancel()}complete(){const{resolved}=this;resolved&&resolved.animation.finish()}cancel(){const{resolved}=this;resolved&&resolved.animation.cancel()}static supports(options){const{motionValue,name,repeatDelay,repeatType,damping,type}=options;if(!(motionValue&&motionValue.owner&&motionValue.owner.current instanceof HTMLElement))return!1;const{onUpdate,transformTemplate}=motionValue.owner.getProps();return supportsWaapi()&&name&&acceleratedValues.has(name)&&!onUpdate&&!transformTemplate&&!repeatDelay&&"mirror"!==repeatType&&0!==damping&&"inertia"!==type}}const underDampedSpring={type:"spring",stiffness:500,damping:25,restSpeed:10},keyframesTransition={type:"keyframes",duration:.8},ease={type:"keyframes",ease:[.25,.1,.35,1],duration:.3},getDefaultTransition=(valueKey,{keyframes})=>keyframes.length>2?keyframesTransition:transformProps.has(valueKey)?valueKey.startsWith("scale")?{type:"spring",stiffness:550,damping:0===keyframes[1]?2*Math.sqrt(550):30,restSpeed:10}:underDampedSpring:ease;const animateMotionValue=(name,value,target,transition={},element,isHandoff)=>onComplete=>{const valueTransition=get_value_transition_getValueTransition(transition,name)||{},delay=valueTransition.delay||transition.delay||0;let{elapsed=0}=transition;elapsed-=time_conversion_secondsToMilliseconds(delay);let options={keyframes:Array.isArray(target)?target:[null,target],ease:"easeOut",velocity:value.getVelocity(),...valueTransition,delay:-elapsed,onUpdate:v=>{value.set(v),valueTransition.onUpdate&&valueTransition.onUpdate(v)},onComplete:()=>{onComplete(),valueTransition.onComplete&&valueTransition.onComplete()},name,motionValue:value,element:isHandoff?void 0:element};(function isTransitionDefined({when,delay:_delay,delayChildren,staggerChildren,staggerDirection,repeat,repeatType,repeatDelay,from,elapsed,...transition}){return!!Object.keys(transition).length})(valueTransition)||(options={...options,...getDefaultTransition(name,options)}),options.duration&&(options.duration=time_conversion_secondsToMilliseconds(options.duration)),options.repeatDelay&&(options.repeatDelay=time_conversion_secondsToMilliseconds(options.repeatDelay)),void 0!==options.from&&(options.keyframes[0]=options.from);let shouldSkip=!1;if((!1===options.type||0===options.duration&&!options.repeatDelay)&&(options.duration=0,0===options.delay&&(shouldSkip=!0)),(instantAnimationState_current||MotionGlobalConfig_skipAnimations)&&(shouldSkip=!0,options.duration=0,options.delay=0),shouldSkip&&!isHandoff&&void 0!==value.get()){const finalKeyframe=getFinalKeyframe(options.keyframes,valueTransition);if(void 0!==finalKeyframe)return frame_frame.update((()=>{options.onUpdate(finalKeyframe),options.onComplete()})),new GroupPlaybackControls([])}return!isHandoff&&AcceleratedAnimation.supports(options)?new AcceleratedAnimation(options):new MainThreadAnimation(options)};function shouldBlockAnimation({protectedKeys,needsAnimating},key){const shouldBlock=protectedKeys.hasOwnProperty(key)&&!0!==needsAnimating[key];return needsAnimating[key]=!1,shouldBlock}function animateTarget(visualElement,targetAndTransition,{delay=0,transitionOverride,type}={}){var _a;let{transition=visualElement.getDefaultTransition(),transitionEnd,...target}=targetAndTransition;transitionOverride&&(transition=transitionOverride);const animations=[],animationTypeState=type&&visualElement.animationState&&visualElement.animationState.getState()[type];for(const key in target){const value=visualElement.getValue(key,null!==(_a=visualElement.latestValues[key])&&void 0!==_a?_a:null),valueTarget=target[key];if(void 0===valueTarget||animationTypeState&&shouldBlockAnimation(animationTypeState,key))continue;const valueTransition={delay,...get_value_transition_getValueTransition(transition||{},key)};let isHandoff=!1;if(window.MotionHandoffAnimation){const appearId=getOptimisedAppearId(visualElement);if(appearId){const startTime=window.MotionHandoffAnimation(appearId,key,frame_frame);null!==startTime&&(valueTransition.startTime=startTime,isHandoff=!0)}}addValueToWillChange(visualElement,key),value.start(animateMotionValue(key,value,valueTarget,visualElement.shouldReduceMotion&&positionalKeys.has(key)?{type:!1}:valueTransition,visualElement,isHandoff));const animation=value.animation;animation&&animations.push(animation)}return transitionEnd&&Promise.all(animations).then((()=>{frame_frame.update((()=>{transitionEnd&&function setTarget(visualElement,definition){const resolved=resolveVariant(visualElement,definition);let{transitionEnd={},transition={},...target}=resolved||{};target={...target,...transitionEnd};for(const key in target)setMotionValue(visualElement,key,(v=target[key],isKeyframesTarget(v)?v[v.length-1]||0:v));var v}(visualElement,transitionEnd)}))})),animations}function animateVariant(visualElement,variant,options={}){var _a;const resolved=resolveVariant(visualElement,variant,"exit"===options.type?null===(_a=visualElement.presenceContext)||void 0===_a?void 0:_a.custom:void 0);let{transition=visualElement.getDefaultTransition()||{}}=resolved||{};options.transitionOverride&&(transition=options.transitionOverride);const getAnimation=resolved?()=>Promise.all(animateTarget(visualElement,resolved,options)):()=>Promise.resolve(),getChildAnimations=visualElement.variantChildren&&visualElement.variantChildren.size?(forwardDelay=0)=>{const{delayChildren=0,staggerChildren,staggerDirection}=transition;return function animateChildren(visualElement,variant,delayChildren=0,staggerChildren=0,staggerDirection=1,options){const animations=[],maxStaggerDuration=(visualElement.variantChildren.size-1)*staggerChildren,generateStaggerDuration=1===staggerDirection?(i=0)=>i*staggerChildren:(i=0)=>maxStaggerDuration-i*staggerChildren;return Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach(((child,i)=>{child.notify("AnimationStart",variant),animations.push(animateVariant(child,variant,{...options,delay:delayChildren+generateStaggerDuration(i)}).then((()=>child.notify("AnimationComplete",variant))))})),Promise.all(animations)}(visualElement,variant,delayChildren+forwardDelay,staggerChildren,staggerDirection,options)}:()=>Promise.resolve(),{when}=transition;if(when){const[first,last]="beforeChildren"===when?[getAnimation,getChildAnimations]:[getChildAnimations,getAnimation];return first().then((()=>last()))}return Promise.all([getAnimation(),getChildAnimations(options.delay)])}function sortByTreeOrder(a,b){return a.sortNodePosition(b)}const numVariantProps=variantProps.length;function getVariantContext(visualElement){if(!visualElement)return;if(!visualElement.isControllingVariants){const context=visualElement.parent&&getVariantContext(visualElement.parent)||{};return void 0!==visualElement.props.initial&&(context.initial=visualElement.props.initial),context}const context={};for(let i=0;i<numVariantProps;i++){const name=variantProps[i],prop=visualElement.props[name];(isVariantLabel(prop)||!1===prop)&&(context[name]=prop)}return context}const reversePriorityOrder=[...variantPriorityOrder].reverse(),numAnimationTypes=variantPriorityOrder.length;function animateList(visualElement){return animations=>Promise.all(animations.map((({animation,options})=>function animateVisualElement(visualElement,definition,options={}){let animation;if(visualElement.notify("AnimationStart",definition),Array.isArray(definition)){const animations=definition.map((variant=>animateVariant(visualElement,variant,options)));animation=Promise.all(animations)}else if("string"==typeof definition)animation=animateVariant(visualElement,definition,options);else{const resolvedDefinition="function"==typeof definition?resolveVariant(visualElement,definition,options.custom):definition;animation=Promise.all(animateTarget(visualElement,resolvedDefinition,options))}return animation.then((()=>{visualElement.notify("AnimationComplete",definition)}))}(visualElement,animation,options))))}function createAnimationState(visualElement){let animate=animateList(visualElement),state=createState(),isInitialRender=!0;const buildResolvedTypeValues=type=>(acc,definition)=>{var _a;const resolved=resolveVariant(visualElement,definition,"exit"===type?null===(_a=visualElement.presenceContext)||void 0===_a?void 0:_a.custom:void 0);if(resolved){const{transition,transitionEnd,...target}=resolved;acc={...acc,...target,...transitionEnd}}return acc};function animateChanges(changedActiveType){const{props}=visualElement,context=getVariantContext(visualElement.parent)||{},animations=[],removedKeys=new Set;let encounteredKeys={},removedVariantIndex=1/0;for(let i=0;i<numAnimationTypes;i++){const type=reversePriorityOrder[i],typeState=state[type],prop=void 0!==props[type]?props[type]:context[type],propIsVariant=isVariantLabel(prop),activeDelta=type===changedActiveType?typeState.isActive:null;!1===activeDelta&&(removedVariantIndex=i);let isInherited=prop===context[type]&&prop!==props[type]&&propIsVariant;if(isInherited&&isInitialRender&&visualElement.manuallyAnimateOnMount&&(isInherited=!1),typeState.protectedKeys={...encounteredKeys},!typeState.isActive&&null===activeDelta||!prop&&!typeState.prevProp||isAnimationControls(prop)||"boolean"==typeof prop)continue;const variantDidChange=checkVariantsDidChange(typeState.prevProp,prop);let shouldAnimateType=variantDidChange||type===changedActiveType&&typeState.isActive&&!isInherited&&propIsVariant||i>removedVariantIndex&&propIsVariant,handledRemovedValues=!1;const definitionList=Array.isArray(prop)?prop:[prop];let resolvedValues=definitionList.reduce(buildResolvedTypeValues(type),{});!1===activeDelta&&(resolvedValues={});const{prevResolvedValues={}}=typeState,allKeys={...prevResolvedValues,...resolvedValues},markToAnimate=key=>{shouldAnimateType=!0,removedKeys.has(key)&&(handledRemovedValues=!0,removedKeys.delete(key)),typeState.needsAnimating[key]=!0;const motionValue=visualElement.getValue(key);motionValue&&(motionValue.liveStyle=!1)};for(const key in allKeys){const next=resolvedValues[key],prev=prevResolvedValues[key];if(encounteredKeys.hasOwnProperty(key))continue;let valueHasChanged=!1;valueHasChanged=isKeyframesTarget(next)&&isKeyframesTarget(prev)?!shallowCompare(next,prev):next!==prev,valueHasChanged?null!=next?markToAnimate(key):removedKeys.add(key):void 0!==next&&removedKeys.has(key)?markToAnimate(key):typeState.protectedKeys[key]=!0}typeState.prevProp=prop,typeState.prevResolvedValues=resolvedValues,typeState.isActive&&(encounteredKeys={...encounteredKeys,...resolvedValues}),isInitialRender&&visualElement.blockInitialAnimation&&(shouldAnimateType=!1);shouldAnimateType&&(!(isInherited&&variantDidChange)||handledRemovedValues)&&animations.push(...definitionList.map((animation=>({animation,options:{type}}))))}if(removedKeys.size){const fallbackAnimation={};removedKeys.forEach((key=>{const fallbackTarget=visualElement.getBaseTarget(key),motionValue=visualElement.getValue(key);motionValue&&(motionValue.liveStyle=!0),fallbackAnimation[key]=null!=fallbackTarget?fallbackTarget:null})),animations.push({animation:fallbackAnimation})}let shouldAnimate=Boolean(animations.length);return!isInitialRender||!1!==props.initial&&props.initial!==props.animate||visualElement.manuallyAnimateOnMount||(shouldAnimate=!1),isInitialRender=!1,shouldAnimate?animate(animations):Promise.resolve()}return{animateChanges,setActive:function setActive(type,isActive){var _a;if(state[type].isActive===isActive)return Promise.resolve();null===(_a=visualElement.variantChildren)||void 0===_a||_a.forEach((child=>{var _a;return null===(_a=child.animationState)||void 0===_a?void 0:_a.setActive(type,isActive)})),state[type].isActive=isActive;const animations=animateChanges(type);for(const key in state)state[key].protectedKeys={};return animations},setAnimateFunction:function setAnimateFunction(makeAnimator){animate=makeAnimator(visualElement)},getState:()=>state,reset:()=>{state=createState(),isInitialRender=!0}}}function checkVariantsDidChange(prev,next){return"string"==typeof next?next!==prev:!!Array.isArray(next)&&!shallowCompare(next,prev)}function createTypeState(isActive=!1){return{isActive,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function createState(){return{animate:createTypeState(!0),whileInView:createTypeState(),whileHover:createTypeState(),whileTap:createTypeState(),whileDrag:createTypeState(),whileFocus:createTypeState(),exit:createTypeState()}}class Feature{constructor(node){this.isMounted=!1,this.node=node}update(){}}let id=0;const animations={animation:{Feature:class AnimationFeature extends Feature{constructor(node){super(node),node.animationState||(node.animationState=createAnimationState(node))}updateAnimationControlsSubscription(){const{animate}=this.node.getProps();isAnimationControls(animate)&&(this.unmountControls=animate.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate}=this.node.getProps(),{animate:prevAnimate}=this.node.prevProps||{};animate!==prevAnimate&&this.updateAnimationControlsSubscription()}unmount(){var _a;this.node.animationState.reset(),null===(_a=this.unmountControls)||void 0===_a||_a.call(this)}}},exit:{Feature:class ExitAnimationFeature extends Feature{constructor(){super(...arguments),this.id=id++}update(){if(!this.node.presenceContext)return;const{isPresent,onExitComplete}=this.node.presenceContext,{isPresent:prevIsPresent}=this.node.prevPresenceContext||{};if(!this.node.animationState||isPresent===prevIsPresent)return;const exitAnimation=this.node.animationState.setActive("exit",!isPresent);onExitComplete&&!isPresent&&exitAnimation.then((()=>onExitComplete(this.id)))}mount(){const{register}=this.node.presenceContext||{};register&&(this.unmount=register(this.id))}unmount(){}}}};function addDomEvent(target,eventName,handler,options={passive:!0}){return target.addEventListener(eventName,handler,options),()=>target.removeEventListener(eventName,handler)}function extractEventInfo(event){return{point:{x:event.pageX,y:event.pageY}}}function addPointerEvent(target,eventName,handler,options){return addDomEvent(target,eventName,(handler=>event=>isPrimaryPointer(event)&&handler(event,extractEventInfo(event)))(handler),options)}const distance=(a,b)=>Math.abs(a-b);class PanSession{constructor(event,handlers,{transformPagePoint,contextWindow,dragSnapToOrigin=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const info=getPanInfo(this.lastMoveEventInfo,this.history),isPanStarted=null!==this.startEvent,isDistancePastThreshold=function distance2D(a,b){const xDelta=distance(a.x,b.x),yDelta=distance(a.y,b.y);return Math.sqrt(xDelta**2+yDelta**2)}(info.offset,{x:0,y:0})>=3;if(!isPanStarted&&!isDistancePastThreshold)return;const{point}=info,{timestamp}=frameData;this.history.push({...point,timestamp});const{onStart,onMove}=this.handlers;isPanStarted||(onStart&&onStart(this.lastMoveEvent,info),this.startEvent=this.lastMoveEvent),onMove&&onMove(this.lastMoveEvent,info)},this.handlePointerMove=(event,info)=>{this.lastMoveEvent=event,this.lastMoveEventInfo=transformPoint(info,this.transformPagePoint),frame_frame.update(this.updatePoint,!0)},this.handlePointerUp=(event,info)=>{this.end();const{onEnd,onSessionEnd,resumeAnimation}=this.handlers;if(this.dragSnapToOrigin&&resumeAnimation&&resumeAnimation(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const panInfo=getPanInfo("pointercancel"===event.type?this.lastMoveEventInfo:transformPoint(info,this.transformPagePoint),this.history);this.startEvent&&onEnd&&onEnd(event,panInfo),onSessionEnd&&onSessionEnd(event,panInfo)},!isPrimaryPointer(event))return;this.dragSnapToOrigin=dragSnapToOrigin,this.handlers=handlers,this.transformPagePoint=transformPagePoint,this.contextWindow=contextWindow||window;const initialInfo=transformPoint(extractEventInfo(event),this.transformPagePoint),{point}=initialInfo,{timestamp}=frameData;this.history=[{...point,timestamp}];const{onSessionStart}=handlers;onSessionStart&&onSessionStart(event,getPanInfo(initialInfo,this.history)),this.removeListeners=pipe(addPointerEvent(this.contextWindow,"pointermove",this.handlePointerMove),addPointerEvent(this.contextWindow,"pointerup",this.handlePointerUp),addPointerEvent(this.contextWindow,"pointercancel",this.handlePointerUp))}updateHandlers(handlers){this.handlers=handlers}end(){this.removeListeners&&this.removeListeners(),cancelFrame(this.updatePoint)}}function transformPoint(info,transformPagePoint){return transformPagePoint?{point:transformPagePoint(info.point)}:info}function subtractPoint(a,b){return{x:a.x-b.x,y:a.y-b.y}}function getPanInfo({point},history){return{point,delta:subtractPoint(point,lastDevicePoint(history)),offset:subtractPoint(point,startDevicePoint(history)),velocity:getVelocity(history,.1)}}function startDevicePoint(history){return history[0]}function lastDevicePoint(history){return history[history.length-1]}function getVelocity(history,timeDelta){if(history.length<2)return{x:0,y:0};let i=history.length-1,timestampedPoint=null;const lastPoint=lastDevicePoint(history);for(;i>=0&&(timestampedPoint=history[i],!(lastPoint.timestamp-timestampedPoint.timestamp>time_conversion_secondsToMilliseconds(timeDelta)));)i--;if(!timestampedPoint)return{x:0,y:0};const time=millisecondsToSeconds(lastPoint.timestamp-timestampedPoint.timestamp);if(0===time)return{x:0,y:0};const currentVelocity={x:(lastPoint.x-timestampedPoint.x)/time,y:(lastPoint.y-timestampedPoint.y)/time};return currentVelocity.x===1/0&&(currentVelocity.x=0),currentVelocity.y===1/0&&(currentVelocity.y=0),currentVelocity}function isRefObject(ref){return ref&&"object"==typeof ref&&Object.prototype.hasOwnProperty.call(ref,"current")}function calcLength(axis){return axis.max-axis.min}function calcAxisDelta(delta,source,target,origin=.5){delta.origin=origin,delta.originPoint=mixNumber(source.min,source.max,delta.origin),delta.scale=calcLength(target)/calcLength(source),delta.translate=mixNumber(target.min,target.max,delta.origin)-delta.originPoint,(delta.scale>=.9999&&delta.scale<=1.0001||isNaN(delta.scale))&&(delta.scale=1),(delta.translate>=-.01&&delta.translate<=.01||isNaN(delta.translate))&&(delta.translate=0)}function calcBoxDelta(delta,source,target,origin){calcAxisDelta(delta.x,source.x,target.x,origin?origin.originX:void 0),calcAxisDelta(delta.y,source.y,target.y,origin?origin.originY:void 0)}function calcRelativeAxis(target,relative,parent){target.min=parent.min+relative.min,target.max=target.min+calcLength(relative)}function calcRelativeAxisPosition(target,layout,parent){target.min=layout.min-parent.min,target.max=target.min+calcLength(layout)}function calcRelativePosition(target,layout,parent){calcRelativeAxisPosition(target.x,layout.x,parent.x),calcRelativeAxisPosition(target.y,layout.y,parent.y)}function calcRelativeAxisConstraints(axis,min,max){return{min:void 0!==min?axis.min+min:void 0,max:void 0!==max?axis.max+max-(axis.max-axis.min):void 0}}function calcViewportAxisConstraints(layoutAxis,constraintsAxis){let min=constraintsAxis.min-layoutAxis.min,max=constraintsAxis.max-layoutAxis.max;return constraintsAxis.max-constraintsAxis.min<layoutAxis.max-layoutAxis.min&&([min,max]=[max,min]),{min,max}}const defaultElastic=.35;function resolveAxisElastic(dragElastic,minLabel,maxLabel){return{min:resolvePointElastic(dragElastic,minLabel),max:resolvePointElastic(dragElastic,maxLabel)}}function resolvePointElastic(dragElastic,label){return"number"==typeof dragElastic?dragElastic:dragElastic[label]||0}const createBox=()=>({x:{min:0,max:0},y:{min:0,max:0}});function eachAxis(callback){return[callback("x"),callback("y")]}function convertBoundingBoxToBox({top,left,right,bottom}){return{x:{min:left,max:right},y:{min:top,max:bottom}}}function isIdentityScale(scale){return void 0===scale||1===scale}function hasScale({scale,scaleX,scaleY}){return!isIdentityScale(scale)||!isIdentityScale(scaleX)||!isIdentityScale(scaleY)}function hasTransform(values){return hasScale(values)||has2DTranslate(values)||values.z||values.rotate||values.rotateX||values.rotateY||values.skewX||values.skewY}function has2DTranslate(values){return is2DTranslate(values.x)||is2DTranslate(values.y)}function is2DTranslate(value){return value&&"0%"!==value}function scalePoint(point,scale,originPoint){return originPoint+scale*(point-originPoint)}function applyPointDelta(point,translate,scale,originPoint,boxScale){return void 0!==boxScale&&(point=scalePoint(point,boxScale,originPoint)),scalePoint(point,scale,originPoint)+translate}function applyAxisDelta(axis,translate=0,scale=1,originPoint,boxScale){axis.min=applyPointDelta(axis.min,translate,scale,originPoint,boxScale),axis.max=applyPointDelta(axis.max,translate,scale,originPoint,boxScale)}function applyBoxDelta(box,{x,y}){applyAxisDelta(box.x,x.translate,x.scale,x.originPoint),applyAxisDelta(box.y,y.translate,y.scale,y.originPoint)}function translateAxis(axis,distance){axis.min=axis.min+distance,axis.max=axis.max+distance}function transformAxis(axis,axisTranslate,axisScale,boxScale,axisOrigin=.5){applyAxisDelta(axis,axisTranslate,axisScale,mixNumber(axis.min,axis.max,axisOrigin),boxScale)}function transformBox(box,transform){transformAxis(box.x,transform.x,transform.scaleX,transform.scale,transform.originX),transformAxis(box.y,transform.y,transform.scaleY,transform.scale,transform.originY)}function measureViewportBox(instance,transformPoint){return convertBoundingBoxToBox(function transformBoxPoints(point,transformPoint){if(!transformPoint)return point;const topLeft=transformPoint({x:point.left,y:point.top}),bottomRight=transformPoint({x:point.right,y:point.bottom});return{top:topLeft.y,left:topLeft.x,bottom:bottomRight.y,right:bottomRight.x}}(instance.getBoundingClientRect(),transformPoint))}const getContextWindow=({current})=>current?current.ownerDocument.defaultView:null,elementDragControls=new WeakMap;class VisualElementDragControls{constructor(visualElement){this.openDragLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic={x:{min:0,max:0},y:{min:0,max:0}},this.visualElement=visualElement}start(originEvent,{snapToCursor=!1}={}){const{presenceContext}=this.visualElement;if(presenceContext&&!1===presenceContext.isPresent)return;const{dragSnapToOrigin}=this.getProps();this.panSession=new PanSession(originEvent,{onSessionStart:event=>{const{dragSnapToOrigin}=this.getProps();dragSnapToOrigin?this.pauseAnimation():this.stopAnimation(),snapToCursor&&this.snapToCursor(extractEventInfo(event).point)},onStart:(event,info)=>{const{drag,dragPropagation,onDragStart}=this.getProps();if(drag&&!dragPropagation&&(this.openDragLock&&this.openDragLock(),this.openDragLock=function setDragLock(axis){return"x"===axis||"y"===axis?isDragging[axis]?null:(isDragging[axis]=!0,()=>{isDragging[axis]=!1}):isDragging.x||isDragging.y?null:(isDragging.x=isDragging.y=!0,()=>{isDragging.x=isDragging.y=!1})}(drag),!this.openDragLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),eachAxis((axis=>{let current=this.getAxisMotionValue(axis).get()||0;if(percent.test(current)){const{projection}=this.visualElement;if(projection&&projection.layout){const measuredAxis=projection.layout.layoutBox[axis];if(measuredAxis){current=calcLength(measuredAxis)*(parseFloat(current)/100)}}}this.originPoint[axis]=current})),onDragStart&&frame_frame.postRender((()=>onDragStart(event,info))),addValueToWillChange(this.visualElement,"transform");const{animationState}=this.visualElement;animationState&&animationState.setActive("whileDrag",!0)},onMove:(event,info)=>{const{dragPropagation,dragDirectionLock,onDirectionLock,onDrag}=this.getProps();if(!dragPropagation&&!this.openDragLock)return;const{offset}=info;if(dragDirectionLock&&null===this.currentDirection)return this.currentDirection=function getCurrentDirection(offset,lockThreshold=10){let direction=null;Math.abs(offset.y)>lockThreshold?direction="y":Math.abs(offset.x)>lockThreshold&&(direction="x");return direction}(offset),void(null!==this.currentDirection&&onDirectionLock&&onDirectionLock(this.currentDirection));this.updateAxis("x",info.point,offset),this.updateAxis("y",info.point,offset),this.visualElement.render(),onDrag&&onDrag(event,info)},onSessionEnd:(event,info)=>this.stop(event,info),resumeAnimation:()=>eachAxis((axis=>{var _a;return"paused"===this.getAnimationState(axis)&&(null===(_a=this.getAxisMotionValue(axis).animation)||void 0===_a?void 0:_a.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin,contextWindow:getContextWindow(this.visualElement)})}stop(event,info){const isDragging=this.isDragging;if(this.cancel(),!isDragging)return;const{velocity}=info;this.startAnimation(velocity);const{onDragEnd}=this.getProps();onDragEnd&&frame_frame.postRender((()=>onDragEnd(event,info)))}cancel(){this.isDragging=!1;const{projection,animationState}=this.visualElement;projection&&(projection.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation}=this.getProps();!dragPropagation&&this.openDragLock&&(this.openDragLock(),this.openDragLock=null),animationState&&animationState.setActive("whileDrag",!1)}updateAxis(axis,_point,offset){const{drag}=this.getProps();if(!offset||!shouldDrag(axis,drag,this.currentDirection))return;const axisValue=this.getAxisMotionValue(axis);let next=this.originPoint[axis]+offset[axis];this.constraints&&this.constraints[axis]&&(next=function applyConstraints(point,{min,max},elastic){return void 0!==min&&point<min?point=elastic?mixNumber(min,point,elastic.min):Math.max(point,min):void 0!==max&&point>max&&(point=elastic?mixNumber(max,point,elastic.max):Math.min(point,max)),point}(next,this.constraints[axis],this.elastic[axis])),axisValue.set(next)}resolveConstraints(){var _a;const{dragConstraints,dragElastic}=this.getProps(),layout=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(_a=this.visualElement.projection)||void 0===_a?void 0:_a.layout,prevConstraints=this.constraints;dragConstraints&&isRefObject(dragConstraints)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!dragConstraints||!layout)&&function calcRelativeConstraints(layoutBox,{top,left,bottom,right}){return{x:calcRelativeAxisConstraints(layoutBox.x,left,right),y:calcRelativeAxisConstraints(layoutBox.y,top,bottom)}}(layout.layoutBox,dragConstraints),this.elastic=function resolveDragElastic(dragElastic=defaultElastic){return!1===dragElastic?dragElastic=0:!0===dragElastic&&(dragElastic=defaultElastic),{x:resolveAxisElastic(dragElastic,"left","right"),y:resolveAxisElastic(dragElastic,"top","bottom")}}(dragElastic),prevConstraints!==this.constraints&&layout&&this.constraints&&!this.hasMutatedConstraints&&eachAxis((axis=>{!1!==this.constraints&&this.getAxisMotionValue(axis)&&(this.constraints[axis]=function rebaseAxisConstraints(layout,constraints){const relativeConstraints={};return void 0!==constraints.min&&(relativeConstraints.min=constraints.min-layout.min),void 0!==constraints.max&&(relativeConstraints.max=constraints.max-layout.min),relativeConstraints}(layout.layoutBox[axis],this.constraints[axis]))}))}resolveRefConstraints(){const{dragConstraints:constraints,onMeasureDragConstraints}=this.getProps();if(!constraints||!isRefObject(constraints))return!1;const constraintsElement=constraints.current;invariant(null!==constraintsElement,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");const{projection}=this.visualElement;if(!projection||!projection.layout)return!1;const constraintsBox=function measurePageBox(element,rootProjectionNode,transformPagePoint){const viewportBox=measureViewportBox(element,transformPagePoint),{scroll}=rootProjectionNode;return scroll&&(translateAxis(viewportBox.x,scroll.offset.x),translateAxis(viewportBox.y,scroll.offset.y)),viewportBox}(constraintsElement,projection.root,this.visualElement.getTransformPagePoint());let measuredConstraints=function calcViewportConstraints(layoutBox,constraintsBox){return{x:calcViewportAxisConstraints(layoutBox.x,constraintsBox.x),y:calcViewportAxisConstraints(layoutBox.y,constraintsBox.y)}}(projection.layout.layoutBox,constraintsBox);if(onMeasureDragConstraints){const userConstraints=onMeasureDragConstraints(function convertBoxToBoundingBox({x,y}){return{top:y.min,right:x.max,bottom:y.max,left:x.min}}(measuredConstraints));this.hasMutatedConstraints=!!userConstraints,userConstraints&&(measuredConstraints=convertBoundingBoxToBox(userConstraints))}return measuredConstraints}startAnimation(velocity){const{drag,dragMomentum,dragElastic,dragTransition,dragSnapToOrigin,onDragTransitionEnd}=this.getProps(),constraints=this.constraints||{},momentumAnimations=eachAxis((axis=>{if(!shouldDrag(axis,drag,this.currentDirection))return;let transition=constraints&&constraints[axis]||{};dragSnapToOrigin&&(transition={min:0,max:0});const bounceStiffness=dragElastic?200:1e6,bounceDamping=dragElastic?40:1e7,inertia={type:"inertia",velocity:dragMomentum?velocity[axis]:0,bounceStiffness,bounceDamping,timeConstant:750,restDelta:1,restSpeed:10,...dragTransition,...transition};return this.startAxisValueAnimation(axis,inertia)}));return Promise.all(momentumAnimations).then(onDragTransitionEnd)}startAxisValueAnimation(axis,transition){const axisValue=this.getAxisMotionValue(axis);return addValueToWillChange(this.visualElement,axis),axisValue.start(animateMotionValue(axis,axisValue,0,transition,this.visualElement,!1))}stopAnimation(){eachAxis((axis=>this.getAxisMotionValue(axis).stop()))}pauseAnimation(){eachAxis((axis=>{var _a;return null===(_a=this.getAxisMotionValue(axis).animation)||void 0===_a?void 0:_a.pause()}))}getAnimationState(axis){var _a;return null===(_a=this.getAxisMotionValue(axis).animation)||void 0===_a?void 0:_a.state}getAxisMotionValue(axis){const dragKey=`_drag${axis.toUpperCase()}`,props=this.visualElement.getProps(),externalMotionValue=props[dragKey];return externalMotionValue||this.visualElement.getValue(axis,(props.initial?props.initial[axis]:void 0)||0)}snapToCursor(point){eachAxis((axis=>{const{drag}=this.getProps();if(!shouldDrag(axis,drag,this.currentDirection))return;const{projection}=this.visualElement,axisValue=this.getAxisMotionValue(axis);if(projection&&projection.layout){const{min,max}=projection.layout.layoutBox[axis];axisValue.set(point[axis]-mixNumber(min,max,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag,dragConstraints}=this.getProps(),{projection}=this.visualElement;if(!isRefObject(dragConstraints)||!projection||!this.constraints)return;this.stopAnimation();const boxProgress={x:0,y:0};eachAxis((axis=>{const axisValue=this.getAxisMotionValue(axis);if(axisValue&&!1!==this.constraints){const latest=axisValue.get();boxProgress[axis]=function calcOrigin(source,target){let origin=.5;const sourceLength=calcLength(source),targetLength=calcLength(target);return targetLength>sourceLength?origin=progress(target.min,target.max-sourceLength,source.min):sourceLength>targetLength&&(origin=progress(source.min,source.max-targetLength,target.min)),clamp(0,1,origin)}({min:latest,max:latest},this.constraints[axis])}}));const{transformTemplate}=this.visualElement.getProps();this.visualElement.current.style.transform=transformTemplate?transformTemplate({},""):"none",projection.root&&projection.root.updateScroll(),projection.updateLayout(),this.resolveConstraints(),eachAxis((axis=>{if(!shouldDrag(axis,drag,null))return;const axisValue=this.getAxisMotionValue(axis),{min,max}=this.constraints[axis];axisValue.set(mixNumber(min,max,boxProgress[axis]))}))}addListeners(){if(!this.visualElement.current)return;elementDragControls.set(this.visualElement,this);const stopPointerListener=addPointerEvent(this.visualElement.current,"pointerdown",(event=>{const{drag,dragListener=!0}=this.getProps();drag&&dragListener&&this.start(event)})),measureDragConstraints=()=>{const{dragConstraints}=this.getProps();isRefObject(dragConstraints)&&dragConstraints.current&&(this.constraints=this.resolveRefConstraints())},{projection}=this.visualElement,stopMeasureLayoutListener=projection.addEventListener("measure",measureDragConstraints);projection&&!projection.layout&&(projection.root&&projection.root.updateScroll(),projection.updateLayout()),frame_frame.read(measureDragConstraints);const stopResizeListener=addDomEvent(window,"resize",(()=>this.scalePositionWithinConstraints())),stopLayoutUpdateListener=projection.addEventListener("didUpdate",(({delta,hasLayoutChanged})=>{this.isDragging&&hasLayoutChanged&&(eachAxis((axis=>{const motionValue=this.getAxisMotionValue(axis);motionValue&&(this.originPoint[axis]+=delta[axis].translate,motionValue.set(motionValue.get()+delta[axis].translate))})),this.visualElement.render())}));return()=>{stopResizeListener(),stopPointerListener(),stopMeasureLayoutListener(),stopLayoutUpdateListener&&stopLayoutUpdateListener()}}getProps(){const props=this.visualElement.getProps(),{drag=!1,dragDirectionLock=!1,dragPropagation=!1,dragConstraints=!1,dragElastic=defaultElastic,dragMomentum=!0}=props;return{...props,drag,dragDirectionLock,dragPropagation,dragConstraints,dragElastic,dragMomentum}}}function shouldDrag(direction,drag,currentDirection){return!(!0!==drag&&drag!==direction||null!==currentDirection&&currentDirection!==direction)}const asyncHandler=handler=>(event,info)=>{handler&&frame_frame.postRender((()=>handler(event,info)))};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),use_presence=__webpack_require__("./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs"),LayoutGroupContext=__webpack_require__("./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs");const SwitchLayoutGroupContext=(0,react.createContext)({}),globalProjectionState={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function pixelsToPercent(pixels,axis){return axis.max===axis.min?0:pixels/(axis.max-axis.min)*100}const correctBorderRadius={correct:(latest,node)=>{if(!node.target)return latest;if("string"==typeof latest){if(!px.test(latest))return latest;latest=parseFloat(latest)}return`${pixelsToPercent(latest,node.target.x)}% ${pixelsToPercent(latest,node.target.y)}%`}},correctBoxShadow={correct:(latest,{treeScale,projectionDelta})=>{const original=latest,shadow=complex.parse(latest);if(shadow.length>5)return original;const template=complex.createTransformer(latest),offset="number"!=typeof shadow[0]?1:0,xScale=projectionDelta.x.scale*treeScale.x,yScale=projectionDelta.y.scale*treeScale.y;shadow[0+offset]/=xScale,shadow[1+offset]/=yScale;const averageScale=mixNumber(xScale,yScale,.5);return"number"==typeof shadow[2+offset]&&(shadow[2+offset]/=averageScale),"number"==typeof shadow[3+offset]&&(shadow[3+offset]/=averageScale),template(shadow)}},scaleCorrectors={};const{schedule:microtask,cancel:cancelMicrotask}=createRenderBatcher(queueMicrotask,!1);class MeasureLayoutWithContext extends react.Component{componentDidMount(){const{visualElement,layoutGroup,switchLayoutGroup,layoutId}=this.props,{projection}=visualElement;!function addScaleCorrector(correctors){Object.assign(scaleCorrectors,correctors)}(defaultScaleCorrectors),projection&&(layoutGroup.group&&layoutGroup.group.add(projection),switchLayoutGroup&&switchLayoutGroup.register&&layoutId&&switchLayoutGroup.register(projection),projection.root.didUpdate(),projection.addEventListener("animationComplete",(()=>{this.safeToRemove()})),projection.setOptions({...projection.options,onExitComplete:()=>this.safeToRemove()})),globalProjectionState.hasEverUpdated=!0}getSnapshotBeforeUpdate(prevProps){const{layoutDependency,visualElement,drag,isPresent}=this.props,projection=visualElement.projection;return projection?(projection.isPresent=isPresent,drag||prevProps.layoutDependency!==layoutDependency||void 0===layoutDependency?projection.willUpdate():this.safeToRemove(),prevProps.isPresent!==isPresent&&(isPresent?projection.promote():projection.relegate()||frame_frame.postRender((()=>{const stack=projection.getStack();stack&&stack.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection}=this.props.visualElement;projection&&(projection.root.didUpdate(),microtask.postRender((()=>{!projection.currentAnimation&&projection.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement,layoutGroup,switchLayoutGroup:promoteContext}=this.props,{projection}=visualElement;projection&&(projection.scheduleCheckAfterUnmount(),layoutGroup&&layoutGroup.group&&layoutGroup.group.remove(projection),promoteContext&&promoteContext.deregister&&promoteContext.deregister(projection))}safeToRemove(){const{safeToRemove}=this.props;safeToRemove&&safeToRemove()}render(){return null}}function MeasureLayout(props){const[isPresent,safeToRemove]=(0,use_presence.xQ)(),layoutGroup=(0,react.useContext)(LayoutGroupContext.L);return(0,jsx_runtime.jsx)(MeasureLayoutWithContext,{...props,layoutGroup,switchLayoutGroup:(0,react.useContext)(SwitchLayoutGroupContext),isPresent,safeToRemove})}const defaultScaleCorrectors={borderRadius:{...correctBorderRadius,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:correctBorderRadius,borderTopRightRadius:correctBorderRadius,borderBottomLeftRadius:correctBorderRadius,borderBottomRightRadius:correctBorderRadius,boxShadow:correctBoxShadow};const compareByDepth=(a,b)=>a.depth-b.depth;class FlatTree{constructor(){this.children=[],this.isDirty=!1}add(child){addUniqueItem(this.children,child),this.isDirty=!0}remove(child){removeItem(this.children,child),this.isDirty=!0}forEach(callback){this.isDirty&&this.children.sort(compareByDepth),this.isDirty=!1,this.children.forEach(callback)}}function delay(callback,timeout){const start=time.now(),checkElapsed=({timestamp})=>{const elapsed=timestamp-start;elapsed>=timeout&&(cancelFrame(checkElapsed),callback(elapsed-timeout))};return frame_frame.read(checkElapsed,!0),()=>cancelFrame(checkElapsed)}function resolveMotionValue(value){const unwrappedValue=isMotionValue(value)?value.get():value;return v=unwrappedValue,Boolean(v&&"object"==typeof v&&v.mix&&v.toValue)?unwrappedValue.toValue():unwrappedValue;var v}const borders=["TopLeft","TopRight","BottomLeft","BottomRight"],numBorders=borders.length,asNumber=value=>"string"==typeof value?parseFloat(value):value,isPx=value=>"number"==typeof value||px.test(value);function getRadius(values,radiusName){return void 0!==values[radiusName]?values[radiusName]:values.borderRadius}const easeCrossfadeIn=compress(0,.5,circOut),easeCrossfadeOut=compress(.5,.95,noop_noop);function compress(min,max,easing){return p=>p<min?0:p>max?1:easing(progress(min,max,p))}function copyAxisInto(axis,originAxis){axis.min=originAxis.min,axis.max=originAxis.max}function copyBoxInto(box,originBox){copyAxisInto(box.x,originBox.x),copyAxisInto(box.y,originBox.y)}function copyAxisDeltaInto(delta,originDelta){delta.translate=originDelta.translate,delta.scale=originDelta.scale,delta.originPoint=originDelta.originPoint,delta.origin=originDelta.origin}function removePointDelta(point,translate,scale,originPoint,boxScale){return point=scalePoint(point-=translate,1/scale,originPoint),void 0!==boxScale&&(point=scalePoint(point,1/boxScale,originPoint)),point}function removeAxisTransforms(axis,transforms,[key,scaleKey,originKey],origin,sourceAxis){!function removeAxisDelta(axis,translate=0,scale=1,origin=.5,boxScale,originAxis=axis,sourceAxis=axis){percent.test(translate)&&(translate=parseFloat(translate),translate=mixNumber(sourceAxis.min,sourceAxis.max,translate/100)-sourceAxis.min);if("number"!=typeof translate)return;let originPoint=mixNumber(originAxis.min,originAxis.max,origin);axis===originAxis&&(originPoint-=translate),axis.min=removePointDelta(axis.min,translate,scale,originPoint,boxScale),axis.max=removePointDelta(axis.max,translate,scale,originPoint,boxScale)}(axis,transforms[key],transforms[scaleKey],transforms[originKey],transforms.scale,origin,sourceAxis)}const xKeys=["x","scaleX","originX"],yKeys=["y","scaleY","originY"];function removeBoxTransforms(box,transforms,originBox,sourceBox){removeAxisTransforms(box.x,transforms,xKeys,originBox?originBox.x:void 0,sourceBox?sourceBox.x:void 0),removeAxisTransforms(box.y,transforms,yKeys,originBox?originBox.y:void 0,sourceBox?sourceBox.y:void 0)}function isAxisDeltaZero(delta){return 0===delta.translate&&1===delta.scale}function isDeltaZero(delta){return isAxisDeltaZero(delta.x)&&isAxisDeltaZero(delta.y)}function axisEquals(a,b){return a.min===b.min&&a.max===b.max}function axisEqualsRounded(a,b){return Math.round(a.min)===Math.round(b.min)&&Math.round(a.max)===Math.round(b.max)}function boxEqualsRounded(a,b){return axisEqualsRounded(a.x,b.x)&&axisEqualsRounded(a.y,b.y)}function aspectRatio(box){return calcLength(box.x)/calcLength(box.y)}function axisDeltaEquals(a,b){return a.translate===b.translate&&a.scale===b.scale&&a.originPoint===b.originPoint}class NodeStack{constructor(){this.members=[]}add(node){addUniqueItem(this.members,node),node.scheduleRender()}remove(node){if(removeItem(this.members,node),node===this.prevLead&&(this.prevLead=void 0),node===this.lead){const prevLead=this.members[this.members.length-1];prevLead&&this.promote(prevLead)}}relegate(node){const indexOfNode=this.members.findIndex((member=>node===member));if(0===indexOfNode)return!1;let prevLead;for(let i=indexOfNode;i>=0;i--){const member=this.members[i];if(!1!==member.isPresent){prevLead=member;break}}return!!prevLead&&(this.promote(prevLead),!0)}promote(node,preserveFollowOpacity){const prevLead=this.lead;if(node!==prevLead&&(this.prevLead=prevLead,this.lead=node,node.show(),prevLead)){prevLead.instance&&prevLead.scheduleRender(),node.scheduleRender(),node.resumeFrom=prevLead,preserveFollowOpacity&&(node.resumeFrom.preserveOpacity=!0),prevLead.snapshot&&(node.snapshot=prevLead.snapshot,node.snapshot.latestValues=prevLead.animationValues||prevLead.latestValues),node.root&&node.root.isUpdating&&(node.isLayoutDirty=!0);const{crossfade}=node.options;!1===crossfade&&prevLead.hide()}}exitAnimationComplete(){this.members.forEach((node=>{const{options,resumingFrom}=node;options.onExitComplete&&options.onExitComplete(),resumingFrom&&resumingFrom.options.onExitComplete&&resumingFrom.options.onExitComplete()}))}scheduleRender(){this.members.forEach((node=>{node.instance&&node.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}const metrics={type:"projectionFrame",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},isDebug="undefined"!=typeof window&&void 0!==window.MotionDebug,transformAxes=["","X","Y","Z"],hiddenVisibility={visibility:"hidden"};let create_projection_node_id=0;function resetDistortingTransform(key,visualElement,values,sharedAnimationValues){const{latestValues}=visualElement;latestValues[key]&&(values[key]=latestValues[key],visualElement.setStaticValue(key,0),sharedAnimationValues&&(sharedAnimationValues[key]=0))}function cancelTreeOptimisedTransformAnimations(projectionNode){if(projectionNode.hasCheckedOptimisedAppear=!0,projectionNode.root===projectionNode)return;const{visualElement}=projectionNode.options;if(!visualElement)return;const appearId=getOptimisedAppearId(visualElement);if(window.MotionHasOptimisedAnimation(appearId,"transform")){const{layout,layoutId}=projectionNode.options;window.MotionCancelOptimisedAnimation(appearId,"transform",frame_frame,!(layout||layoutId))}const{parent}=projectionNode;parent&&!parent.hasCheckedOptimisedAppear&&cancelTreeOptimisedTransformAnimations(parent)}function createProjectionNode({attachResizeListener,defaultParent,measureScroll,checkIsScrollRoot,resetTransform}){return class ProjectionNode{constructor(latestValues={},parent=(null==defaultParent?void 0:defaultParent())){this.id=create_projection_node_id++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,isDebug&&(metrics.totalNodes=metrics.resolvedTargetDeltas=metrics.recalculatedProjection=0),this.nodes.forEach(propagateDirtyNodes),this.nodes.forEach(resolveTargetDelta),this.nodes.forEach(calcProjection),this.nodes.forEach(cleanDirtyNodes),isDebug&&window.MotionDebug.record(metrics)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=latestValues,this.root=parent?parent.root||parent:this,this.path=parent?[...parent.path,parent]:[],this.parent=parent,this.depth=parent?parent.depth+1:0;for(let i=0;i<this.path.length;i++)this.path[i].shouldResetTransform=!0;this.root===this&&(this.nodes=new FlatTree)}addEventListener(name,handler){return this.eventHandlers.has(name)||this.eventHandlers.set(name,new SubscriptionManager),this.eventHandlers.get(name).add(handler)}notifyListeners(name,...args){const subscriptionManager=this.eventHandlers.get(name);subscriptionManager&&subscriptionManager.notify(...args)}hasListeners(name){return this.eventHandlers.has(name)}mount(instance,isLayoutDirty=this.root.hasTreeAnimated){if(this.instance)return;this.isSVG=function isSVGElement(element){return element instanceof SVGElement&&"svg"!==element.tagName}(instance),this.instance=instance;const{layoutId,layout,visualElement}=this.options;if(visualElement&&!visualElement.current&&visualElement.mount(instance),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),isLayoutDirty&&(layout||layoutId)&&(this.isLayoutDirty=!0),attachResizeListener){let cancelDelay;const resizeUnblockUpdate=()=>this.root.updateBlockedByResize=!1;attachResizeListener(instance,(()=>{this.root.updateBlockedByResize=!0,cancelDelay&&cancelDelay(),cancelDelay=delay(resizeUnblockUpdate,250),globalProjectionState.hasAnimatedSinceResize&&(globalProjectionState.hasAnimatedSinceResize=!1,this.nodes.forEach(finishAnimation))}))}layoutId&&this.root.registerSharedNode(layoutId,this),!1!==this.options.animate&&visualElement&&(layoutId||layout)&&this.addEventListener("didUpdate",(({delta,hasLayoutChanged,hasRelativeTargetChanged,layout:newLayout})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const layoutTransition=this.options.transition||visualElement.getDefaultTransition()||defaultLayoutTransition,{onLayoutAnimationStart,onLayoutAnimationComplete}=visualElement.getProps(),targetChanged=!this.targetLayout||!boxEqualsRounded(this.targetLayout,newLayout)||hasRelativeTargetChanged,hasOnlyRelativeTargetChanged=!hasLayoutChanged&&hasRelativeTargetChanged;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||hasOnlyRelativeTargetChanged||hasLayoutChanged&&(targetChanged||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(delta,hasOnlyRelativeTargetChanged);const animationOptions={...get_value_transition_getValueTransition(layoutTransition,"layout"),onPlay:onLayoutAnimationStart,onComplete:onLayoutAnimationComplete};(visualElement.shouldReduceMotion||this.options.layoutRoot)&&(animationOptions.delay=0,animationOptions.type=!1),this.startAnimation(animationOptions)}else hasLayoutChanged||finishAnimation(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=newLayout}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const stack=this.getStack();stack&&stack.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,cancelFrame(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(resetSkewAndRotation),this.animationId++)}getTransformTemplate(){const{visualElement}=this.options;return visualElement&&visualElement.getProps().transformTemplate}willUpdate(shouldNotifyListeners=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&cancelTreeOptimisedTransformAnimations(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let i=0;i<this.path.length;i++){const node=this.path[i];node.shouldResetTransform=!0,node.updateScroll("snapshot"),node.options.layoutRoot&&node.willUpdate(!1)}const{layoutId,layout}=this.options;if(void 0===layoutId&&!layout)return;const transformTemplate=this.getTransformTemplate();this.prevTransformTemplateValue=transformTemplate?transformTemplate(this.latestValues,""):void 0,this.updateSnapshot(),shouldNotifyListeners&&this.notifyListeners("willUpdate")}update(){this.updateScheduled=!1;if(this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(clearMeasurements);this.isUpdating||this.nodes.forEach(clearIsLayoutDirty),this.isUpdating=!1,this.nodes.forEach(resetTransformStyle),this.nodes.forEach(updateLayout),this.nodes.forEach(notifyLayoutUpdate),this.clearAllSnapshots();const now=time.now();frameData.delta=clamp(0,1e3/60,now-frameData.timestamp),frameData.timestamp=now,frameData.isProcessing=!0,frameSteps.update.process(frameData),frameSteps.preRender.process(frameData),frameSteps.render.process(frameData),frameData.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,microtask.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(clearSnapshot),this.sharedNodes.forEach(removeLeadSnapshots)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,frame_frame.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){frame_frame.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure())}updateLayout(){if(!this.instance)return;if(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let i=0;i<this.path.length;i++){this.path[i].updateScroll()}const prevLayout=this.layout;this.layout=this.measure(!1),this.layoutCorrected={x:{min:0,max:0},y:{min:0,max:0}},this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox);const{visualElement}=this.options;visualElement&&visualElement.notify("LayoutMeasure",this.layout.layoutBox,prevLayout?prevLayout.layoutBox:void 0)}updateScroll(phase="measure"){let needsMeasurement=Boolean(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===phase&&(needsMeasurement=!1),needsMeasurement){const isRoot=checkIsScrollRoot(this.instance);this.scroll={animationId:this.root.animationId,phase,isRoot,offset:measureScroll(this.instance),wasRoot:this.scroll?this.scroll.isRoot:isRoot}}}resetTransform(){if(!resetTransform)return;const isResetRequested=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,hasProjection=this.projectionDelta&&!isDeltaZero(this.projectionDelta),transformTemplate=this.getTransformTemplate(),transformTemplateValue=transformTemplate?transformTemplate(this.latestValues,""):void 0,transformTemplateHasChanged=transformTemplateValue!==this.prevTransformTemplateValue;isResetRequested&&(hasProjection||hasTransform(this.latestValues)||transformTemplateHasChanged)&&(resetTransform(this.instance,transformTemplateValue),this.shouldResetTransform=!1,this.scheduleRender())}measure(removeTransform=!0){const pageBox=this.measurePageBox();let layoutBox=this.removeElementScroll(pageBox);return removeTransform&&(layoutBox=this.removeTransform(layoutBox)),function roundBox(box){roundAxis(box.x),roundAxis(box.y)}(layoutBox),{animationId:this.root.animationId,measuredBox:pageBox,layoutBox,latestValues:{},source:this.id}}measurePageBox(){var _a;const{visualElement}=this.options;if(!visualElement)return{x:{min:0,max:0},y:{min:0,max:0}};const box=visualElement.measureViewportBox();if(!((null===(_a=this.scroll)||void 0===_a?void 0:_a.wasRoot)||this.path.some(checkNodeWasScrollRoot))){const{scroll}=this.root;scroll&&(translateAxis(box.x,scroll.offset.x),translateAxis(box.y,scroll.offset.y))}return box}removeElementScroll(box){var _a;const boxWithoutScroll={x:{min:0,max:0},y:{min:0,max:0}};if(copyBoxInto(boxWithoutScroll,box),null===(_a=this.scroll)||void 0===_a?void 0:_a.wasRoot)return boxWithoutScroll;for(let i=0;i<this.path.length;i++){const node=this.path[i],{scroll,options}=node;node!==this.root&&scroll&&options.layoutScroll&&(scroll.wasRoot&&copyBoxInto(boxWithoutScroll,box),translateAxis(boxWithoutScroll.x,scroll.offset.x),translateAxis(boxWithoutScroll.y,scroll.offset.y))}return boxWithoutScroll}applyTransform(box,transformOnly=!1){const withTransforms={x:{min:0,max:0},y:{min:0,max:0}};copyBoxInto(withTransforms,box);for(let i=0;i<this.path.length;i++){const node=this.path[i];!transformOnly&&node.options.layoutScroll&&node.scroll&&node!==node.root&&transformBox(withTransforms,{x:-node.scroll.offset.x,y:-node.scroll.offset.y}),hasTransform(node.latestValues)&&transformBox(withTransforms,node.latestValues)}return hasTransform(this.latestValues)&&transformBox(withTransforms,this.latestValues),withTransforms}removeTransform(box){const boxWithoutTransform={x:{min:0,max:0},y:{min:0,max:0}};copyBoxInto(boxWithoutTransform,box);for(let i=0;i<this.path.length;i++){const node=this.path[i];if(!node.instance)continue;if(!hasTransform(node.latestValues))continue;hasScale(node.latestValues)&&node.updateSnapshot();const sourceBox={x:{min:0,max:0},y:{min:0,max:0}};copyBoxInto(sourceBox,node.measurePageBox()),removeBoxTransforms(boxWithoutTransform,node.latestValues,node.snapshot?node.snapshot.layoutBox:void 0,sourceBox)}return hasTransform(this.latestValues)&&removeBoxTransforms(boxWithoutTransform,this.latestValues),boxWithoutTransform}setTargetDelta(delta){this.targetDelta=delta,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(options){this.options={...this.options,...options,crossfade:void 0===options.crossfade||options.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==frameData.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(forceRecalculation=!1){var _a;const lead=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=lead.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=lead.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=lead.isSharedProjectionDirty);const isShared=Boolean(this.resumingFrom)||this!==lead;if(!(forceRecalculation||isShared&&this.isSharedProjectionDirty||this.isProjectionDirty||(null===(_a=this.parent)||void 0===_a?void 0:_a.isProjectionDirty)||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout,layoutId}=this.options;if(this.layout&&(layout||layoutId)){if(this.resolvedRelativeTargetAt=frameData.timestamp,!this.targetDelta&&!this.relativeTarget){const relativeParent=this.getClosestProjectingParent();relativeParent&&relativeParent.layout&&1!==this.animationProgress?(this.relativeParent=relativeParent,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},calcRelativePosition(this.relativeTargetOrigin,this.layout.layoutBox,relativeParent.layout.layoutBox),copyBoxInto(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){if(this.target||(this.target={x:{min:0,max:0},y:{min:0,max:0}},this.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}}),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),function calcRelativeBox(target,relative,parent){calcRelativeAxis(target.x,relative.x,parent.x),calcRelativeAxis(target.y,relative.y,parent.y)}(this.target,this.relativeTarget,this.relativeParent.target)):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):copyBoxInto(this.target,this.layout.layoutBox),applyBoxDelta(this.target,this.targetDelta)):copyBoxInto(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const relativeParent=this.getClosestProjectingParent();relativeParent&&Boolean(relativeParent.resumingFrom)===Boolean(this.resumingFrom)&&!relativeParent.options.layoutScroll&&relativeParent.target&&1!==this.animationProgress?(this.relativeParent=relativeParent,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},calcRelativePosition(this.relativeTargetOrigin,this.target,relativeParent.target),copyBoxInto(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}isDebug&&metrics.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(this.parent&&!hasScale(this.parent.latestValues)&&!has2DTranslate(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return Boolean((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var _a;const lead=this.getLead(),isShared=Boolean(this.resumingFrom)||this!==lead;let canSkip=!0;if((this.isProjectionDirty||(null===(_a=this.parent)||void 0===_a?void 0:_a.isProjectionDirty))&&(canSkip=!1),isShared&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(canSkip=!1),this.resolvedRelativeTargetAt===frameData.timestamp&&(canSkip=!1),canSkip)return;const{layout,layoutId}=this.options;if(this.isTreeAnimating=Boolean(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!layout&&!layoutId)return;copyBoxInto(this.layoutCorrected,this.layout.layoutBox);const prevTreeScaleX=this.treeScale.x,prevTreeScaleY=this.treeScale.y;!function applyTreeDeltas(box,treeScale,treePath,isSharedTransition=!1){const treeLength=treePath.length;if(!treeLength)return;let node,delta;treeScale.x=treeScale.y=1;for(let i=0;i<treeLength;i++){node=treePath[i],delta=node.projectionDelta;const{visualElement}=node.options;visualElement&&visualElement.props.style&&"contents"===visualElement.props.style.display||(isSharedTransition&&node.options.layoutScroll&&node.scroll&&node!==node.root&&transformBox(box,{x:-node.scroll.offset.x,y:-node.scroll.offset.y}),delta&&(treeScale.x*=delta.x.scale,treeScale.y*=delta.y.scale,applyBoxDelta(box,delta)),isSharedTransition&&hasTransform(node.latestValues)&&transformBox(box,node.latestValues))}treeScale.x<1.0000000000001&&treeScale.x>.999999999999&&(treeScale.x=1),treeScale.y<1.0000000000001&&treeScale.y>.999999999999&&(treeScale.y=1)}(this.layoutCorrected,this.treeScale,this.path,isShared),!lead.layout||lead.target||1===this.treeScale.x&&1===this.treeScale.y||(lead.target=lead.layout.layoutBox,lead.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}});const{target}=lead;target?(this.projectionDelta&&this.prevProjectionDelta?(copyAxisDeltaInto(this.prevProjectionDelta.x,this.projectionDelta.x),copyAxisDeltaInto(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),calcBoxDelta(this.projectionDelta,this.layoutCorrected,target,this.latestValues),this.treeScale.x===prevTreeScaleX&&this.treeScale.y===prevTreeScaleY&&axisDeltaEquals(this.projectionDelta.x,this.prevProjectionDelta.x)&&axisDeltaEquals(this.projectionDelta.y,this.prevProjectionDelta.y)||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",target)),isDebug&&metrics.recalculatedProjection++):this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender())}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(notifyAll=!0){var _a;if(null===(_a=this.options.visualElement)||void 0===_a||_a.scheduleRender(),notifyAll){const stack=this.getStack();stack&&stack.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDeltaWithTransform={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}}setAnimationOrigin(delta,hasOnlyRelativeTargetChanged=!1){const snapshot=this.snapshot,snapshotLatestValues=snapshot?snapshot.latestValues:{},mixedValues={...this.latestValues},targetDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!hasOnlyRelativeTargetChanged;const relativeLayout={x:{min:0,max:0},y:{min:0,max:0}},isSharedLayoutAnimation=(snapshot?snapshot.source:void 0)!==(this.layout?this.layout.source:void 0),stack=this.getStack(),isOnlyMember=!stack||stack.members.length<=1,shouldCrossfadeOpacity=Boolean(isSharedLayoutAnimation&&!isOnlyMember&&!0===this.options.crossfade&&!this.path.some(hasOpacityCrossfade));let prevRelativeTarget;this.animationProgress=0,this.mixTargetDelta=latest=>{const progress=latest/1e3;mixAxisDelta(targetDelta.x,delta.x,progress),mixAxisDelta(targetDelta.y,delta.y,progress),this.setTargetDelta(targetDelta),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(calcRelativePosition(relativeLayout,this.layout.layoutBox,this.relativeParent.layout.layoutBox),function mixBox(output,from,to,p){mixAxis(output.x,from.x,to.x,p),mixAxis(output.y,from.y,to.y,p)}(this.relativeTarget,this.relativeTargetOrigin,relativeLayout,progress),prevRelativeTarget&&function boxEquals(a,b){return axisEquals(a.x,b.x)&&axisEquals(a.y,b.y)}(this.relativeTarget,prevRelativeTarget)&&(this.isProjectionDirty=!1),prevRelativeTarget||(prevRelativeTarget={x:{min:0,max:0},y:{min:0,max:0}}),copyBoxInto(prevRelativeTarget,this.relativeTarget)),isSharedLayoutAnimation&&(this.animationValues=mixedValues,function mixValues(target,follow,lead,progress,shouldCrossfadeOpacity,isOnlyMember){shouldCrossfadeOpacity?(target.opacity=mixNumber(0,void 0!==lead.opacity?lead.opacity:1,easeCrossfadeIn(progress)),target.opacityExit=mixNumber(void 0!==follow.opacity?follow.opacity:1,0,easeCrossfadeOut(progress))):isOnlyMember&&(target.opacity=mixNumber(void 0!==follow.opacity?follow.opacity:1,void 0!==lead.opacity?lead.opacity:1,progress));for(let i=0;i<numBorders;i++){const borderLabel=`border${borders[i]}Radius`;let followRadius=getRadius(follow,borderLabel),leadRadius=getRadius(lead,borderLabel);void 0===followRadius&&void 0===leadRadius||(followRadius||(followRadius=0),leadRadius||(leadRadius=0),0===followRadius||0===leadRadius||isPx(followRadius)===isPx(leadRadius)?(target[borderLabel]=Math.max(mixNumber(asNumber(followRadius),asNumber(leadRadius),progress),0),(percent.test(leadRadius)||percent.test(followRadius))&&(target[borderLabel]+="%")):target[borderLabel]=leadRadius)}(follow.rotate||lead.rotate)&&(target.rotate=mixNumber(follow.rotate||0,lead.rotate||0,progress))}(mixedValues,snapshotLatestValues,this.latestValues,progress,shouldCrossfadeOpacity,isOnlyMember)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=progress},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(options){this.notifyListeners("animationStart"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(cancelFrame(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=frame_frame.update((()=>{globalProjectionState.hasAnimatedSinceResize=!0,this.currentAnimation=function animateSingleValue(value,keyframes,options){const motionValue$1=isMotionValue(value)?value:motionValue(value);return motionValue$1.start(animateMotionValue("",motionValue$1,keyframes,options)),motionValue$1.animation}(0,1e3,{...options,onUpdate:latest=>{this.mixTargetDelta(latest),options.onUpdate&&options.onUpdate(latest)},onComplete:()=>{options.onComplete&&options.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const stack=this.getStack();stack&&stack.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const lead=this.getLead();let{targetWithTransforms,target,layout,latestValues}=lead;if(targetWithTransforms&&target&&layout){if(this!==lead&&this.layout&&layout&&shouldAnimatePositionOnly(this.options.animationType,this.layout.layoutBox,layout.layoutBox)){target=this.target||{x:{min:0,max:0},y:{min:0,max:0}};const xLength=calcLength(this.layout.layoutBox.x);target.x.min=lead.target.x.min,target.x.max=target.x.min+xLength;const yLength=calcLength(this.layout.layoutBox.y);target.y.min=lead.target.y.min,target.y.max=target.y.min+yLength}copyBoxInto(targetWithTransforms,target),transformBox(targetWithTransforms,latestValues),calcBoxDelta(this.projectionDeltaWithTransform,this.layoutCorrected,targetWithTransforms,latestValues)}}registerSharedNode(layoutId,node){this.sharedNodes.has(layoutId)||this.sharedNodes.set(layoutId,new NodeStack);this.sharedNodes.get(layoutId).add(node);const config=node.options.initialPromotionConfig;node.promote({transition:config?config.transition:void 0,preserveFollowOpacity:config&&config.shouldPreserveFollowOpacity?config.shouldPreserveFollowOpacity(node):void 0})}isLead(){const stack=this.getStack();return!stack||stack.lead===this}getLead(){var _a;const{layoutId}=this.options;return layoutId&&(null===(_a=this.getStack())||void 0===_a?void 0:_a.lead)||this}getPrevLead(){var _a;const{layoutId}=this.options;return layoutId?null===(_a=this.getStack())||void 0===_a?void 0:_a.prevLead:void 0}getStack(){const{layoutId}=this.options;if(layoutId)return this.root.sharedNodes.get(layoutId)}promote({needsReset,transition,preserveFollowOpacity}={}){const stack=this.getStack();stack&&stack.promote(this,preserveFollowOpacity),needsReset&&(this.projectionDelta=void 0,this.needsReset=!0),transition&&this.setOptions({transition})}relegate(){const stack=this.getStack();return!!stack&&stack.relegate(this)}resetSkewAndRotation(){const{visualElement}=this.options;if(!visualElement)return;let hasDistortingTransform=!1;const{latestValues}=visualElement;if((latestValues.z||latestValues.rotate||latestValues.rotateX||latestValues.rotateY||latestValues.rotateZ||latestValues.skewX||latestValues.skewY)&&(hasDistortingTransform=!0),!hasDistortingTransform)return;const resetValues={};latestValues.z&&resetDistortingTransform("z",visualElement,resetValues,this.animationValues);for(let i=0;i<transformAxes.length;i++)resetDistortingTransform(`rotate${transformAxes[i]}`,visualElement,resetValues,this.animationValues),resetDistortingTransform(`skew${transformAxes[i]}`,visualElement,resetValues,this.animationValues);visualElement.render();for(const key in resetValues)visualElement.setStaticValue(key,resetValues[key]),this.animationValues&&(this.animationValues[key]=resetValues[key]);visualElement.scheduleRender()}getProjectionStyles(styleProp){var _a,_b;if(!this.instance||this.isSVG)return;if(!this.isVisible)return hiddenVisibility;const styles={visibility:""},transformTemplate=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,styles.opacity="",styles.pointerEvents=resolveMotionValue(null==styleProp?void 0:styleProp.pointerEvents)||"",styles.transform=transformTemplate?transformTemplate(this.latestValues,""):"none",styles;const lead=this.getLead();if(!this.projectionDelta||!this.layout||!lead.target){const emptyStyles={};return this.options.layoutId&&(emptyStyles.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,emptyStyles.pointerEvents=resolveMotionValue(null==styleProp?void 0:styleProp.pointerEvents)||""),this.hasProjected&&!hasTransform(this.latestValues)&&(emptyStyles.transform=transformTemplate?transformTemplate({},""):"none",this.hasProjected=!1),emptyStyles}const valuesToRender=lead.animationValues||lead.latestValues;this.applyTransformsToTarget(),styles.transform=function buildProjectionTransform(delta,treeScale,latestTransform){let transform="";const xTranslate=delta.x.translate/treeScale.x,yTranslate=delta.y.translate/treeScale.y,zTranslate=(null==latestTransform?void 0:latestTransform.z)||0;if((xTranslate||yTranslate||zTranslate)&&(transform=`translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `),1===treeScale.x&&1===treeScale.y||(transform+=`scale(${1/treeScale.x}, ${1/treeScale.y}) `),latestTransform){const{transformPerspective,rotate,rotateX,rotateY,skewX,skewY}=latestTransform;transformPerspective&&(transform=`perspective(${transformPerspective}px) ${transform}`),rotate&&(transform+=`rotate(${rotate}deg) `),rotateX&&(transform+=`rotateX(${rotateX}deg) `),rotateY&&(transform+=`rotateY(${rotateY}deg) `),skewX&&(transform+=`skewX(${skewX}deg) `),skewY&&(transform+=`skewY(${skewY}deg) `)}const elementScaleX=delta.x.scale*treeScale.x,elementScaleY=delta.y.scale*treeScale.y;return 1===elementScaleX&&1===elementScaleY||(transform+=`scale(${elementScaleX}, ${elementScaleY})`),transform||"none"}(this.projectionDeltaWithTransform,this.treeScale,valuesToRender),transformTemplate&&(styles.transform=transformTemplate(valuesToRender,styles.transform));const{x,y}=this.projectionDelta;styles.transformOrigin=`${100*x.origin}% ${100*y.origin}% 0`,lead.animationValues?styles.opacity=lead===this?null!==(_b=null!==(_a=valuesToRender.opacity)&&void 0!==_a?_a:this.latestValues.opacity)&&void 0!==_b?_b:1:this.preserveOpacity?this.latestValues.opacity:valuesToRender.opacityExit:styles.opacity=lead===this?void 0!==valuesToRender.opacity?valuesToRender.opacity:"":void 0!==valuesToRender.opacityExit?valuesToRender.opacityExit:0;for(const key in scaleCorrectors){if(void 0===valuesToRender[key])continue;const{correct,applyTo}=scaleCorrectors[key],corrected="none"===styles.transform?valuesToRender[key]:correct(valuesToRender[key],lead);if(applyTo){const num=applyTo.length;for(let i=0;i<num;i++)styles[applyTo[i]]=corrected}else styles[key]=corrected}return this.options.layoutId&&(styles.pointerEvents=lead===this?resolveMotionValue(null==styleProp?void 0:styleProp.pointerEvents)||"":"none"),styles}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((node=>{var _a;return null===(_a=node.currentAnimation)||void 0===_a?void 0:_a.stop()})),this.root.nodes.forEach(clearMeasurements),this.root.sharedNodes.clear()}}}function updateLayout(node){node.updateLayout()}function notifyLayoutUpdate(node){var _a;const snapshot=(null===(_a=node.resumeFrom)||void 0===_a?void 0:_a.snapshot)||node.snapshot;if(node.isLead()&&node.layout&&snapshot&&node.hasListeners("didUpdate")){const{layoutBox:layout,measuredBox:measuredLayout}=node.layout,{animationType}=node.options,isShared=snapshot.source!==node.layout.source;"size"===animationType?eachAxis((axis=>{const axisSnapshot=isShared?snapshot.measuredBox[axis]:snapshot.layoutBox[axis],length=calcLength(axisSnapshot);axisSnapshot.min=layout[axis].min,axisSnapshot.max=axisSnapshot.min+length})):shouldAnimatePositionOnly(animationType,snapshot.layoutBox,layout)&&eachAxis((axis=>{const axisSnapshot=isShared?snapshot.measuredBox[axis]:snapshot.layoutBox[axis],length=calcLength(layout[axis]);axisSnapshot.max=axisSnapshot.min+length,node.relativeTarget&&!node.currentAnimation&&(node.isProjectionDirty=!0,node.relativeTarget[axis].max=node.relativeTarget[axis].min+length)}));const layoutDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};calcBoxDelta(layoutDelta,layout,snapshot.layoutBox);const visualDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};isShared?calcBoxDelta(visualDelta,node.applyTransform(measuredLayout,!0),snapshot.measuredBox):calcBoxDelta(visualDelta,layout,snapshot.layoutBox);const hasLayoutChanged=!isDeltaZero(layoutDelta);let hasRelativeTargetChanged=!1;if(!node.resumeFrom){const relativeParent=node.getClosestProjectingParent();if(relativeParent&&!relativeParent.resumeFrom){const{snapshot:parentSnapshot,layout:parentLayout}=relativeParent;if(parentSnapshot&&parentLayout){const relativeSnapshot={x:{min:0,max:0},y:{min:0,max:0}};calcRelativePosition(relativeSnapshot,snapshot.layoutBox,parentSnapshot.layoutBox);const relativeLayout={x:{min:0,max:0},y:{min:0,max:0}};calcRelativePosition(relativeLayout,layout,parentLayout.layoutBox),boxEqualsRounded(relativeSnapshot,relativeLayout)||(hasRelativeTargetChanged=!0),relativeParent.options.layoutRoot&&(node.relativeTarget=relativeLayout,node.relativeTargetOrigin=relativeSnapshot,node.relativeParent=relativeParent)}}}node.notifyListeners("didUpdate",{layout,snapshot,delta:visualDelta,layoutDelta,hasLayoutChanged,hasRelativeTargetChanged})}else if(node.isLead()){const{onExitComplete}=node.options;onExitComplete&&onExitComplete()}node.options.transition=void 0}function propagateDirtyNodes(node){isDebug&&metrics.totalNodes++,node.parent&&(node.isProjecting()||(node.isProjectionDirty=node.parent.isProjectionDirty),node.isSharedProjectionDirty||(node.isSharedProjectionDirty=Boolean(node.isProjectionDirty||node.parent.isProjectionDirty||node.parent.isSharedProjectionDirty)),node.isTransformDirty||(node.isTransformDirty=node.parent.isTransformDirty))}function cleanDirtyNodes(node){node.isProjectionDirty=node.isSharedProjectionDirty=node.isTransformDirty=!1}function clearSnapshot(node){node.clearSnapshot()}function clearMeasurements(node){node.clearMeasurements()}function clearIsLayoutDirty(node){node.isLayoutDirty=!1}function resetTransformStyle(node){const{visualElement}=node.options;visualElement&&visualElement.getProps().onBeforeLayoutMeasure&&visualElement.notify("BeforeLayoutMeasure"),node.resetTransform()}function finishAnimation(node){node.finishAnimation(),node.targetDelta=node.relativeTarget=node.target=void 0,node.isProjectionDirty=!0}function resolveTargetDelta(node){node.resolveTargetDelta()}function calcProjection(node){node.calcProjection()}function resetSkewAndRotation(node){node.resetSkewAndRotation()}function removeLeadSnapshots(stack){stack.removeLeadSnapshot()}function mixAxisDelta(output,delta,p){output.translate=mixNumber(delta.translate,0,p),output.scale=mixNumber(delta.scale,1,p),output.origin=delta.origin,output.originPoint=delta.originPoint}function mixAxis(output,from,to,p){output.min=mixNumber(from.min,to.min,p),output.max=mixNumber(from.max,to.max,p)}function hasOpacityCrossfade(node){return node.animationValues&&void 0!==node.animationValues.opacityExit}const defaultLayoutTransition={duration:.45,ease:[.4,0,.1,1]},userAgentContains=string=>"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(string),roundPoint=userAgentContains("applewebkit/")&&!userAgentContains("chrome/")?Math.round:noop_noop;function roundAxis(axis){axis.min=roundPoint(axis.min),axis.max=roundPoint(axis.max)}function shouldAnimatePositionOnly(animationType,snapshot,layout){return"position"===animationType||"preserve-aspect"===animationType&&!function isNear(value,target,maxDistance){return Math.abs(value-target)<=maxDistance}(aspectRatio(snapshot),aspectRatio(layout),.2)}function checkNodeWasScrollRoot(node){var _a;return node!==node.root&&(null===(_a=node.scroll)||void 0===_a?void 0:_a.wasRoot)}const DocumentProjectionNode=createProjectionNode({attachResizeListener:(ref,notify)=>addDomEvent(ref,"resize",notify),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),rootProjectionNode={current:void 0},HTMLProjectionNode=createProjectionNode({measureScroll:instance=>({x:instance.scrollLeft,y:instance.scrollTop}),defaultParent:()=>{if(!rootProjectionNode.current){const documentNode=new DocumentProjectionNode({});documentNode.mount(window),documentNode.setOptions({layoutScroll:!0}),rootProjectionNode.current=documentNode}return rootProjectionNode.current},resetTransform:(instance,value)=>{instance.style.transform=void 0!==value?value:"none"},checkIsScrollRoot:instance=>Boolean("fixed"===window.getComputedStyle(instance).position)}),drag={pan:{Feature:class PanGesture extends Feature{constructor(){super(...arguments),this.removePointerDownListener=noop_noop}onPointerDown(pointerDownEvent){this.session=new PanSession(pointerDownEvent,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:getContextWindow(this.node)})}createPanHandlers(){const{onPanSessionStart,onPanStart,onPan,onPanEnd}=this.node.getProps();return{onSessionStart:asyncHandler(onPanSessionStart),onStart:asyncHandler(onPanStart),onMove:onPan,onEnd:(event,info)=>{delete this.session,onPanEnd&&frame_frame.postRender((()=>onPanEnd(event,info)))}}}mount(){this.removePointerDownListener=addPointerEvent(this.node.current,"pointerdown",(event=>this.onPointerDown(event)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class DragGesture extends Feature{constructor(node){super(node),this.removeGroupControls=noop_noop,this.removeListeners=noop_noop,this.controls=new VisualElementDragControls(node)}mount(){const{dragControls}=this.node.getProps();dragControls&&(this.removeGroupControls=dragControls.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||noop_noop}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:HTMLProjectionNode,MeasureLayout}};function handleHoverEvent(node,event,lifecycle){const{props}=node;node.animationState&&props.whileHover&&node.animationState.setActive("whileHover","Start"===lifecycle);const callback=props["onHover"+lifecycle];callback&&frame_frame.postRender((()=>callback(event,extractEventInfo(event))))}function handlePressEvent(node,event,lifecycle){const{props}=node;node.animationState&&props.whileTap&&node.animationState.setActive("whileTap","Start"===lifecycle);const callback=props["onTap"+("End"===lifecycle?"":lifecycle)];callback&&frame_frame.postRender((()=>callback(event,extractEventInfo(event))))}const observerCallbacks=new WeakMap,observers=new WeakMap,fireObserverCallback=entry=>{const callback=observerCallbacks.get(entry.target);callback&&callback(entry)},fireAllObserverCallbacks=entries=>{entries.forEach(fireObserverCallback)};function observeIntersection(element,options,callback){const rootInteresectionObserver=function initIntersectionObserver({root,...options}){const lookupRoot=root||document;observers.has(lookupRoot)||observers.set(lookupRoot,{});const rootObservers=observers.get(lookupRoot),key=JSON.stringify(options);return rootObservers[key]||(rootObservers[key]=new IntersectionObserver(fireAllObserverCallbacks,{root,...options})),rootObservers[key]}(options);return observerCallbacks.set(element,callback),rootInteresectionObserver.observe(element),()=>{observerCallbacks.delete(element),rootInteresectionObserver.unobserve(element)}}const thresholdNames={some:0,all:1};const gestureAnimations={inView:{Feature:class InViewFeature extends Feature{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport={}}=this.node.getProps(),{root,margin:rootMargin,amount="some",once}=viewport,options={root:root?root.current:void 0,rootMargin,threshold:"number"==typeof amount?amount:thresholdNames[amount]};return observeIntersection(this.node.current,options,(entry=>{const{isIntersecting}=entry;if(this.isInView===isIntersecting)return;if(this.isInView=isIntersecting,once&&!isIntersecting&&this.hasEnteredView)return;isIntersecting&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive("whileInView",isIntersecting);const{onViewportEnter,onViewportLeave}=this.node.getProps(),callback=isIntersecting?onViewportEnter:onViewportLeave;callback&&callback(entry)}))}mount(){this.startObserver()}update(){if("undefined"==typeof IntersectionObserver)return;const{props,prevProps}=this.node;["amount","margin","root"].some(function hasViewportOptionChanged({viewport={}},{viewport:prevViewport={}}={}){return name=>viewport[name]!==prevViewport[name]}(props,prevProps))&&this.startObserver()}unmount(){}}},tap:{Feature:class PressGesture extends Feature{mount(){const{current}=this.node;current&&(this.unmount=press(current,(startEvent=>(handlePressEvent(this.node,startEvent,"Start"),(endEvent,{success})=>handlePressEvent(this.node,endEvent,success?"End":"Cancel"))),{useGlobalTarget:this.node.props.globalTapTarget}))}unmount(){}}},focus:{Feature:class FocusGesture extends Feature{constructor(){super(...arguments),this.isActive=!1}onFocus(){let isFocusVisible=!1;try{isFocusVisible=this.node.current.matches(":focus-visible")}catch(e){isFocusVisible=!0}isFocusVisible&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!1),this.isActive=!1)}mount(){this.unmount=pipe(addDomEvent(this.node.current,"focus",(()=>this.onFocus())),addDomEvent(this.node.current,"blur",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class HoverGesture extends Feature{mount(){const{current}=this.node;current&&(this.unmount=function hover(elementOrSelector,onHoverStart,options={}){const[elements,eventOptions,cancel]=setupGesture(elementOrSelector,options),onPointerEnter=filterEvents((enterEvent=>{const{target}=enterEvent,onHoverEnd=onHoverStart(enterEvent);if("function"!=typeof onHoverEnd||!target)return;const onPointerLeave=filterEvents((leaveEvent=>{onHoverEnd(leaveEvent),target.removeEventListener("pointerleave",onPointerLeave)}));target.addEventListener("pointerleave",onPointerLeave,eventOptions)}));return elements.forEach((element=>{element.addEventListener("pointerenter",onPointerEnter,eventOptions)})),cancel}(current,(startEvent=>(handleHoverEvent(this.node,startEvent,"Start"),endEvent=>handleHoverEvent(this.node,endEvent,"End")))))}unmount(){}}}},layout={layout:{ProjectionNode:HTMLProjectionNode,MeasureLayout}},LazyContext=(0,react.createContext)({strict:!1});var MotionConfigContext=__webpack_require__("./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs");const MotionContext=(0,react.createContext)({});function isControllingVariants(props){return isAnimationControls(props.animate)||variantProps.some((name=>isVariantLabel(props[name])))}function isVariantNode(props){return Boolean(isControllingVariants(props)||props.variants)}function useCreateMotionContext(props){const{initial,animate}=function getCurrentTreeVariants(props,context){if(isControllingVariants(props)){const{initial,animate}=props;return{initial:!1===initial||isVariantLabel(initial)?initial:void 0,animate:isVariantLabel(animate)?animate:void 0}}return!1!==props.inherit?context:{}}(props,(0,react.useContext)(MotionContext));return(0,react.useMemo)((()=>({initial,animate})),[variantLabelsAsDependency(initial),variantLabelsAsDependency(animate)])}function variantLabelsAsDependency(prop){return Array.isArray(prop)?prop.join(" "):prop}var is_browser=__webpack_require__("./node_modules/framer-motion/dist/es/utils/is-browser.mjs");const featureProps={animation:["animate","variants","whileHover","whileTap","exit","whileInView","whileFocus","whileDrag"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},featureDefinitions={};for(const key in featureProps)featureDefinitions[key]={isEnabled:props=>featureProps[key].some((name=>!!props[name]))};const motionComponentSymbol=Symbol.for("motionComponentSymbol");function useMotionRef(visualState,visualElement,externalRef){return(0,react.useCallback)((instance=>{instance&&visualState.onMount&&visualState.onMount(instance),visualElement&&(instance?visualElement.mount(instance):visualElement.unmount()),externalRef&&("function"==typeof externalRef?externalRef(instance):isRefObject(externalRef)&&(externalRef.current=instance))}),[visualElement])}var PresenceContext=__webpack_require__("./node_modules/framer-motion/dist/es/context/PresenceContext.mjs"),use_isomorphic_effect=__webpack_require__("./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs");function useVisualElement(Component,visualState,props,createVisualElement,ProjectionNodeConstructor){var _a,_b;const{visualElement:parent}=(0,react.useContext)(MotionContext),lazyContext=(0,react.useContext)(LazyContext),presenceContext=(0,react.useContext)(PresenceContext.t),reducedMotionConfig=(0,react.useContext)(MotionConfigContext.Q).reducedMotion,visualElementRef=(0,react.useRef)(null);createVisualElement=createVisualElement||lazyContext.renderer,!visualElementRef.current&&createVisualElement&&(visualElementRef.current=createVisualElement(Component,{visualState,parent,props,presenceContext,blockInitialAnimation:!!presenceContext&&!1===presenceContext.initial,reducedMotionConfig}));const visualElement=visualElementRef.current,initialLayoutGroupConfig=(0,react.useContext)(SwitchLayoutGroupContext);!visualElement||visualElement.projection||!ProjectionNodeConstructor||"html"!==visualElement.type&&"svg"!==visualElement.type||function use_visual_element_createProjectionNode(visualElement,props,ProjectionNodeConstructor,initialPromotionConfig){const{layoutId,layout,drag,dragConstraints,layoutScroll,layoutRoot}=props;visualElement.projection=new ProjectionNodeConstructor(visualElement.latestValues,props["data-framer-portal-id"]?void 0:getClosestProjectingNode(visualElement.parent)),visualElement.projection.setOptions({layoutId,layout,alwaysMeasureLayout:Boolean(drag)||dragConstraints&&isRefObject(dragConstraints),visualElement,animationType:"string"==typeof layout?layout:"both",initialPromotionConfig,layoutScroll,layoutRoot})}(visualElementRef.current,props,ProjectionNodeConstructor,initialLayoutGroupConfig);const isMounted=(0,react.useRef)(!1);(0,react.useInsertionEffect)((()=>{visualElement&&isMounted.current&&visualElement.update(props,presenceContext)}));const optimisedAppearId=props[optimizedAppearDataAttribute],wantsHandoff=(0,react.useRef)(Boolean(optimisedAppearId)&&!(null===(_a=window.MotionHandoffIsComplete)||void 0===_a?void 0:_a.call(window,optimisedAppearId))&&(null===(_b=window.MotionHasOptimisedAnimation)||void 0===_b?void 0:_b.call(window,optimisedAppearId)));return(0,use_isomorphic_effect.E)((()=>{visualElement&&(isMounted.current=!0,window.MotionIsMounted=!0,visualElement.updateFeatures(),microtask.render(visualElement.render),wantsHandoff.current&&visualElement.animationState&&visualElement.animationState.animateChanges())})),(0,react.useEffect)((()=>{visualElement&&(!wantsHandoff.current&&visualElement.animationState&&visualElement.animationState.animateChanges(),wantsHandoff.current&&(queueMicrotask((()=>{var _a;null===(_a=window.MotionHandoffMarkAsComplete)||void 0===_a||_a.call(window,optimisedAppearId)})),wantsHandoff.current=!1))})),visualElement}function getClosestProjectingNode(visualElement){if(visualElement)return!1!==visualElement.options.allowProjection?visualElement.projection:getClosestProjectingNode(visualElement.parent)}function createRendererMotionComponent({preloadedFeatures,createVisualElement,useRender,useVisualState,Component}){var _a,_b;function MotionComponent(props,externalRef){let MeasureLayout;const configAndProps={...(0,react.useContext)(MotionConfigContext.Q),...props,layoutId:useLayoutId(props)},{isStatic}=configAndProps,context=useCreateMotionContext(props),visualState=useVisualState(props,isStatic);if(!isStatic&&is_browser.B){!function useStrictMode(configAndProps,preloadedFeatures){(0,react.useContext)(LazyContext).strict;0}();const layoutProjection=function getProjectionFunctionality(props){const{drag,layout}=featureDefinitions;if(!drag&&!layout)return{};const combined={...drag,...layout};return{MeasureLayout:(null==drag?void 0:drag.isEnabled(props))||(null==layout?void 0:layout.isEnabled(props))?combined.MeasureLayout:void 0,ProjectionNode:combined.ProjectionNode}}(configAndProps);MeasureLayout=layoutProjection.MeasureLayout,context.visualElement=useVisualElement(Component,visualState,configAndProps,createVisualElement,layoutProjection.ProjectionNode)}return(0,jsx_runtime.jsxs)(MotionContext.Provider,{value:context,children:[MeasureLayout&&context.visualElement?(0,jsx_runtime.jsx)(MeasureLayout,{visualElement:context.visualElement,...configAndProps}):null,useRender(Component,props,useMotionRef(visualState,context.visualElement,externalRef),visualState,isStatic,context.visualElement)]})}preloadedFeatures&&function loadFeatures(features){for(const key in features)featureDefinitions[key]={...featureDefinitions[key],...features[key]}}(preloadedFeatures),MotionComponent.displayName=`motion.${"string"==typeof Component?Component:`create(${null!==(_b=null!==(_a=Component.displayName)&&void 0!==_a?_a:Component.name)&&void 0!==_b?_b:""})`}`;const ForwardRefMotionComponent=(0,react.forwardRef)(MotionComponent);return ForwardRefMotionComponent[motionComponentSymbol]=Component,ForwardRefMotionComponent}function useLayoutId({layoutId}){const layoutGroupId=(0,react.useContext)(LayoutGroupContext.L).id;return layoutGroupId&&void 0!==layoutId?layoutGroupId+"-"+layoutId:layoutId}const lowercaseSVGElements=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function isSVGComponent(Component){return"string"==typeof Component&&!Component.includes("-")&&!!(lowercaseSVGElements.indexOf(Component)>-1||/[A-Z]/u.test(Component))}var use_constant=__webpack_require__("./node_modules/framer-motion/dist/es/utils/use-constant.mjs");const makeUseVisualState=config=>(props,isStatic)=>{const context=(0,react.useContext)(MotionContext),presenceContext=(0,react.useContext)(PresenceContext.t),make=()=>function makeState({scrapeMotionValuesFromProps,createRenderState,onUpdate},props,context,presenceContext){const state={latestValues:makeLatestValues(props,context,presenceContext,scrapeMotionValuesFromProps),renderState:createRenderState()};return onUpdate&&(state.onMount=instance=>onUpdate({props,current:instance,...state}),state.onUpdate=visualElement=>onUpdate(visualElement)),state}(config,props,context,presenceContext);return isStatic?make():(0,use_constant.M)(make)};function makeLatestValues(props,context,presenceContext,scrapeMotionValues){const values={},motionValues=scrapeMotionValues(props,{});for(const key in motionValues)values[key]=resolveMotionValue(motionValues[key]);let{initial,animate}=props;const isControllingVariants$1=isControllingVariants(props),isVariantNode$1=isVariantNode(props);context&&isVariantNode$1&&!isControllingVariants$1&&!1!==props.inherit&&(void 0===initial&&(initial=context.initial),void 0===animate&&(animate=context.animate));let isInitialAnimationBlocked=!!presenceContext&&!1===presenceContext.initial;isInitialAnimationBlocked=isInitialAnimationBlocked||!1===initial;const variantToSet=isInitialAnimationBlocked?animate:initial;if(variantToSet&&"boolean"!=typeof variantToSet&&!isAnimationControls(variantToSet)){const list=Array.isArray(variantToSet)?variantToSet:[variantToSet];for(let i=0;i<list.length;i++){const resolved=resolveVariantFromProps(props,list[i]);if(resolved){const{transitionEnd,transition,...target}=resolved;for(const key in target){let valueTarget=target[key];if(Array.isArray(valueTarget)){valueTarget=valueTarget[isInitialAnimationBlocked?valueTarget.length-1:0]}null!==valueTarget&&(values[key]=valueTarget)}for(const key in transitionEnd)values[key]=transitionEnd[key]}}}return values}const getValueAsType=(value,type)=>type&&"number"==typeof value?type.transform(value):value,translateAlias={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},numTransforms=transformPropOrder.length;function buildHTMLStyles(state,latestValues,transformTemplate){const{style,vars,transformOrigin}=state;let hasTransform=!1,hasTransformOrigin=!1;for(const key in latestValues){const value=latestValues[key];if(transformProps.has(key))hasTransform=!0;else if(isCSSVariableName(key))vars[key]=value;else{const valueAsType=getValueAsType(value,numberValueTypes[key]);key.startsWith("origin")?(hasTransformOrigin=!0,transformOrigin[key]=valueAsType):style[key]=valueAsType}}if(latestValues.transform||(hasTransform||transformTemplate?style.transform=function buildTransform(latestValues,transform,transformTemplate){let transformString="",transformIsDefault=!0;for(let i=0;i<numTransforms;i++){const key=transformPropOrder[i],value=latestValues[key];if(void 0===value)continue;let valueIsDefault=!0;if(valueIsDefault="number"==typeof value?value===(key.startsWith("scale")?1:0):0===parseFloat(value),!valueIsDefault||transformTemplate){const valueAsType=getValueAsType(value,numberValueTypes[key]);valueIsDefault||(transformIsDefault=!1,transformString+=`${translateAlias[key]||key}(${valueAsType}) `),transformTemplate&&(transform[key]=valueAsType)}}return transformString=transformString.trim(),transformTemplate?transformString=transformTemplate(transform,transformIsDefault?"":transformString):transformIsDefault&&(transformString="none"),transformString}(latestValues,state.transform,transformTemplate):style.transform&&(style.transform="none")),hasTransformOrigin){const{originX="50%",originY="50%",originZ=0}=transformOrigin;style.transformOrigin=`${originX} ${originY} ${originZ}`}}const dashKeys={offset:"stroke-dashoffset",array:"stroke-dasharray"},camelKeys={offset:"strokeDashoffset",array:"strokeDasharray"};function transform_origin_calcOrigin(origin,offset,size){return"string"==typeof origin?origin:px.transform(offset+size*origin)}function buildSVGAttrs(state,{attrX,attrY,attrScale,originX,originY,pathLength,pathSpacing=1,pathOffset=0,...latest},isSVGTag,transformTemplate){if(buildHTMLStyles(state,latest,transformTemplate),isSVGTag)return void(state.style.viewBox&&(state.attrs.viewBox=state.style.viewBox));state.attrs=state.style,state.style={};const{attrs,style,dimensions}=state;attrs.transform&&(dimensions&&(style.transform=attrs.transform),delete attrs.transform),dimensions&&(void 0!==originX||void 0!==originY||style.transform)&&(style.transformOrigin=function calcSVGTransformOrigin(dimensions,originX,originY){return`${transform_origin_calcOrigin(originX,dimensions.x,dimensions.width)} ${transform_origin_calcOrigin(originY,dimensions.y,dimensions.height)}`}(dimensions,void 0!==originX?originX:.5,void 0!==originY?originY:.5)),void 0!==attrX&&(attrs.x=attrX),void 0!==attrY&&(attrs.y=attrY),void 0!==attrScale&&(attrs.scale=attrScale),void 0!==pathLength&&function buildSVGPath(attrs,length,spacing=1,offset=0,useDashCase=!0){attrs.pathLength=1;const keys=useDashCase?dashKeys:camelKeys;attrs[keys.offset]=px.transform(-offset);const pathLength=px.transform(length),pathSpacing=px.transform(spacing);attrs[keys.array]=`${pathLength} ${pathSpacing}`}(attrs,pathLength,pathSpacing,pathOffset,!1)}const createHtmlRenderState=()=>({style:{},transform:{},transformOrigin:{},vars:{}}),createSvgRenderState=()=>({style:{},transform:{},transformOrigin:{},vars:{},attrs:{}}),isSVGTag=tag=>"string"==typeof tag&&"svg"===tag.toLowerCase();function renderHTML(element,{style,vars},styleProp,projection){Object.assign(element.style,style,projection&&projection.getProjectionStyles(styleProp));for(const key in vars)element.style.setProperty(key,vars[key])}const camelCaseAttributes=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function renderSVG(element,renderState,_styleProp,projection){renderHTML(element,renderState,void 0,projection);for(const key in renderState.attrs)element.setAttribute(camelCaseAttributes.has(key)?key:camelToDash(key),renderState.attrs[key])}function isForcedMotionValue(key,{layout,layoutId}){return transformProps.has(key)||key.startsWith("origin")||(layout||void 0!==layoutId)&&(!!scaleCorrectors[key]||"opacity"===key)}function scrapeMotionValuesFromProps(props,prevProps,visualElement){var _a;const{style}=props,newValues={};for(const key in style)(isMotionValue(style[key])||prevProps.style&&isMotionValue(prevProps.style[key])||isForcedMotionValue(key,props)||void 0!==(null===(_a=null==visualElement?void 0:visualElement.getValue(key))||void 0===_a?void 0:_a.liveStyle))&&(newValues[key]=style[key]);return newValues}function scrape_motion_values_scrapeMotionValuesFromProps(props,prevProps,visualElement){const newValues=scrapeMotionValuesFromProps(props,prevProps,visualElement);for(const key in props)if(isMotionValue(props[key])||isMotionValue(prevProps[key])){newValues[-1!==transformPropOrder.indexOf(key)?"attr"+key.charAt(0).toUpperCase()+key.substring(1):key]=props[key]}return newValues}const layoutProps=["x","y","width","height","cx","cy","r"],svgMotionConfig={useVisualState:makeUseVisualState({scrapeMotionValuesFromProps:scrape_motion_values_scrapeMotionValuesFromProps,createRenderState:createSvgRenderState,onUpdate:({props,prevProps,current,renderState,latestValues})=>{if(!current)return;let hasTransform=!!props.drag;if(!hasTransform)for(const key in latestValues)if(transformProps.has(key)){hasTransform=!0;break}if(!hasTransform)return;let needsMeasure=!prevProps;if(prevProps)for(let i=0;i<layoutProps.length;i++){const key=layoutProps[i];props[key]!==prevProps[key]&&(needsMeasure=!0)}needsMeasure&&frame_frame.read((()=>{!function updateSVGDimensions(instance,renderState){try{renderState.dimensions="function"==typeof instance.getBBox?instance.getBBox():instance.getBoundingClientRect()}catch(e){renderState.dimensions={x:0,y:0,width:0,height:0}}}(current,renderState),frame_frame.render((()=>{buildSVGAttrs(renderState,latestValues,isSVGTag(current.tagName),props.transformTemplate),renderSVG(current,renderState)}))}))}})},htmlMotionConfig={useVisualState:makeUseVisualState({scrapeMotionValuesFromProps,createRenderState:createHtmlRenderState})};function copyRawValuesOnly(target,source,props){for(const key in source)isMotionValue(source[key])||isForcedMotionValue(key,props)||(target[key]=source[key])}function useStyle(props,visualState){const style={};return copyRawValuesOnly(style,props.style||{},props),Object.assign(style,function useInitialMotionValues({transformTemplate},visualState){return(0,react.useMemo)((()=>{const state={style:{},transform:{},transformOrigin:{},vars:{}};return buildHTMLStyles(state,visualState,transformTemplate),Object.assign({},state.vars,state.style)}),[visualState])}(props,visualState)),style}function useHTMLProps(props,visualState){const htmlProps={},style=useStyle(props,visualState);return props.drag&&!1!==props.dragListener&&(htmlProps.draggable=!1,style.userSelect=style.WebkitUserSelect=style.WebkitTouchCallout="none",style.touchAction=!0===props.drag?"none":"pan-"+("x"===props.drag?"y":"x")),void 0===props.tabIndex&&(props.onTap||props.onTapStart||props.whileTap)&&(htmlProps.tabIndex=0),htmlProps.style=style,htmlProps}const validMotionProps=new Set(["animate","exit","variants","initial","style","values","variants","transition","transformTemplate","custom","inherit","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","_dragX","_dragY","onHoverStart","onHoverEnd","onViewportEnter","onViewportLeave","globalTapTarget","ignoreStrict","viewport"]);function isValidMotionProp(key){return key.startsWith("while")||key.startsWith("drag")&&"draggable"!==key||key.startsWith("layout")||key.startsWith("onTap")||key.startsWith("onPan")||key.startsWith("onLayout")||validMotionProps.has(key)}let shouldForward=key=>!isValidMotionProp(key);try{!function loadExternalIsValidProp(isValidProp){isValidProp&&(shouldForward=key=>key.startsWith("on")?!isValidMotionProp(key):isValidProp(key))}(__webpack_require__("./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js").A)}catch(_a){}function useSVGProps(props,visualState,_isStatic,Component){const visualProps=(0,react.useMemo)((()=>{const state={style:{},transform:{},transformOrigin:{},vars:{},attrs:{}};return buildSVGAttrs(state,visualState,isSVGTag(Component),props.transformTemplate),{...state.attrs,style:{...state.style}}}),[visualState]);if(props.style){const rawStyles={};copyRawValuesOnly(rawStyles,props.style,props),visualProps.style={...rawStyles,...visualProps.style}}return visualProps}function createUseRender(forwardMotionProps=!1){return(Component,props,ref,{latestValues},isStatic)=>{const visualProps=(isSVGComponent(Component)?useSVGProps:useHTMLProps)(props,latestValues,isStatic,Component),filteredProps=function filterProps(props,isDom,forwardMotionProps){const filteredProps={};for(const key in props)"values"===key&&"object"==typeof props.values||(shouldForward(key)||!0===forwardMotionProps&&isValidMotionProp(key)||!isDom&&!isValidMotionProp(key)||props.draggable&&key.startsWith("onDrag"))&&(filteredProps[key]=props[key]);return filteredProps}(props,"string"==typeof Component,forwardMotionProps),elementProps=Component!==react.Fragment?{...filteredProps,...visualProps,ref}:{},{children}=props,renderedChildren=(0,react.useMemo)((()=>isMotionValue(children)?children.get():children),[children]);return(0,react.createElement)(Component,{...elementProps,children:renderedChildren})}}function createMotionComponentFactory(preloadedFeatures,createVisualElement){return function createMotionComponent(Component,{forwardMotionProps}={forwardMotionProps:!1}){return createRendererMotionComponent({...isSVGComponent(Component)?svgMotionConfig:htmlMotionConfig,preloadedFeatures,useRender:createUseRender(forwardMotionProps),createVisualElement,Component})}}var reduced_motion=__webpack_require__("./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs"),state=__webpack_require__("./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs");const valueTypes=[...dimensionValueTypes,color,complex],visualElementStore=new WeakMap;const propEventHandlers=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"];class VisualElement{scrapeMotionValuesFromProps(_props,_prevProps,_visualElement){return{}}constructor({parent,props,presenceContext,reducedMotionConfig,blockInitialAnimation,visualState},options={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=KeyframeResolver,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.renderScheduledAt=0,this.scheduleRender=()=>{const now=time.now();this.renderScheduledAt<now&&(this.renderScheduledAt=now,frame_frame.render(this.render,!1,!0))};const{latestValues,renderState,onUpdate}=visualState;this.onUpdate=onUpdate,this.latestValues=latestValues,this.baseTarget={...latestValues},this.initialValues=props.initial?{...latestValues}:{},this.renderState=renderState,this.parent=parent,this.props=props,this.presenceContext=presenceContext,this.depth=parent?parent.depth+1:0,this.reducedMotionConfig=reducedMotionConfig,this.options=options,this.blockInitialAnimation=Boolean(blockInitialAnimation),this.isControllingVariants=isControllingVariants(props),this.isVariantNode=isVariantNode(props),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(parent&&parent.current);const{willChange,...initialMotionValues}=this.scrapeMotionValuesFromProps(props,{},this);for(const key in initialMotionValues){const value=initialMotionValues[key];void 0!==latestValues[key]&&isMotionValue(value)&&value.set(latestValues[key],!1)}}mount(instance){this.current=instance,visualElementStore.set(instance,this),this.projection&&!this.projection.instance&&this.projection.mount(instance),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((value,key)=>this.bindToMotionValue(key,value))),state.r.current||(0,reduced_motion.U)(),this.shouldReduceMotion="never"!==this.reducedMotionConfig&&("always"===this.reducedMotionConfig||state.O.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){visualElementStore.delete(this.current),this.projection&&this.projection.unmount(),cancelFrame(this.notifyUpdate),cancelFrame(this.render),this.valueSubscriptions.forEach((remove=>remove())),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const key in this.events)this.events[key].clear();for(const key in this.features){const feature=this.features[key];feature&&(feature.unmount(),feature.isMounted=!1)}this.current=null}bindToMotionValue(key,value){this.valueSubscriptions.has(key)&&this.valueSubscriptions.get(key)();const valueIsTransform=transformProps.has(key),removeOnChange=value.on("change",(latestValue=>{this.latestValues[key]=latestValue,this.props.onUpdate&&frame_frame.preRender(this.notifyUpdate),valueIsTransform&&this.projection&&(this.projection.isTransformDirty=!0)})),removeOnRenderRequest=value.on("renderRequest",this.scheduleRender);let removeSyncCheck;window.MotionCheckAppearSync&&(removeSyncCheck=window.MotionCheckAppearSync(this,key,value)),this.valueSubscriptions.set(key,(()=>{removeOnChange(),removeOnRenderRequest(),removeSyncCheck&&removeSyncCheck(),value.owner&&value.stop()}))}sortNodePosition(other){return this.current&&this.sortInstanceNodePosition&&this.type===other.type?this.sortInstanceNodePosition(this.current,other.current):0}updateFeatures(){let key="animation";for(key in featureDefinitions){const featureDefinition=featureDefinitions[key];if(!featureDefinition)continue;const{isEnabled,Feature:FeatureConstructor}=featureDefinition;if(!this.features[key]&&FeatureConstructor&&isEnabled(this.props)&&(this.features[key]=new FeatureConstructor(this)),this.features[key]){const feature=this.features[key];feature.isMounted?feature.update():(feature.mount(),feature.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):{x:{min:0,max:0},y:{min:0,max:0}}}getStaticValue(key){return this.latestValues[key]}setStaticValue(key,value){this.latestValues[key]=value}update(props,presenceContext){(props.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=props,this.prevPresenceContext=this.presenceContext,this.presenceContext=presenceContext;for(let i=0;i<propEventHandlers.length;i++){const key=propEventHandlers[i];this.propEventSubscriptions[key]&&(this.propEventSubscriptions[key](),delete this.propEventSubscriptions[key]);const listener=props["on"+key];listener&&(this.propEventSubscriptions[key]=this.on(key,listener))}this.prevMotionValues=function updateMotionValuesFromProps(element,next,prev){for(const key in next){const nextValue=next[key],prevValue=prev[key];if(isMotionValue(nextValue))element.addValue(key,nextValue);else if(isMotionValue(prevValue))element.addValue(key,motionValue(nextValue,{owner:element}));else if(prevValue!==nextValue)if(element.hasValue(key)){const existingValue=element.getValue(key);!0===existingValue.liveStyle?existingValue.jump(nextValue):existingValue.hasAnimated||existingValue.set(nextValue)}else{const latestValue=element.getStaticValue(key);element.addValue(key,motionValue(void 0!==latestValue?latestValue:nextValue,{owner:element}))}}for(const key in prev)void 0===next[key]&&element.removeValue(key);return next}(this,this.scrapeMotionValuesFromProps(props,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue(),this.onUpdate&&this.onUpdate(this)}getProps(){return this.props}getVariant(name){return this.props.variants?this.props.variants[name]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}addVariantChild(child){const closestVariantNode=this.getClosestVariantNode();if(closestVariantNode)return closestVariantNode.variantChildren&&closestVariantNode.variantChildren.add(child),()=>closestVariantNode.variantChildren.delete(child)}addValue(key,value){const existingValue=this.values.get(key);value!==existingValue&&(existingValue&&this.removeValue(key),this.bindToMotionValue(key,value),this.values.set(key,value),this.latestValues[key]=value.get())}removeValue(key){this.values.delete(key);const unsubscribe=this.valueSubscriptions.get(key);unsubscribe&&(unsubscribe(),this.valueSubscriptions.delete(key)),delete this.latestValues[key],this.removeValueFromRenderState(key,this.renderState)}hasValue(key){return this.values.has(key)}getValue(key,defaultValue){if(this.props.values&&this.props.values[key])return this.props.values[key];let value=this.values.get(key);return void 0===value&&void 0!==defaultValue&&(value=motionValue(null===defaultValue?void 0:defaultValue,{owner:this}),this.addValue(key,value)),value}readValue(key,target){var _a;let value=void 0===this.latestValues[key]&&this.current?null!==(_a=this.getBaseTargetFromProps(this.props,key))&&void 0!==_a?_a:this.readValueFromInstance(this.current,key,this.options):this.latestValues[key];var v;return null!=value&&("string"==typeof value&&(isNumericalString(value)||isZeroValueString(value))?value=parseFloat(value):(v=value,!valueTypes.find(testValueType(v))&&complex.test(target)&&(value=animatable_none_getAnimatableNone(key,target))),this.setBaseTarget(key,isMotionValue(value)?value.get():value)),isMotionValue(value)?value.get():value}setBaseTarget(key,value){this.baseTarget[key]=value}getBaseTarget(key){var _a;const{initial}=this.props;let valueFromInitial;if("string"==typeof initial||"object"==typeof initial){const variant=resolveVariantFromProps(this.props,initial,null===(_a=this.presenceContext)||void 0===_a?void 0:_a.custom);variant&&(valueFromInitial=variant[key])}if(initial&&void 0!==valueFromInitial)return valueFromInitial;const target=this.getBaseTargetFromProps(this.props,key);return void 0===target||isMotionValue(target)?void 0!==this.initialValues[key]&&void 0===valueFromInitial?void 0:this.baseTarget[key]:target}on(eventName,callback){return this.events[eventName]||(this.events[eventName]=new SubscriptionManager),this.events[eventName].add(callback)}notify(eventName,...args){this.events[eventName]&&this.events[eventName].notify(...args)}}class DOMVisualElement extends VisualElement{constructor(){super(...arguments),this.KeyframeResolver=DOMKeyframesResolver}sortInstanceNodePosition(a,b){return 2&a.compareDocumentPosition(b)?1:-1}getBaseTargetFromProps(props,key){return props.style?props.style[key]:void 0}removeValueFromRenderState(key,{vars,style}){delete vars[key],delete style[key]}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children}=this.props;isMotionValue(children)&&(this.childSubscription=children.on("change",(latest=>{this.current&&(this.current.textContent=`${latest}`)})))}}class HTMLVisualElement extends DOMVisualElement{constructor(){super(...arguments),this.type="html",this.renderInstance=renderHTML}readValueFromInstance(instance,key){if(transformProps.has(key)){const defaultType=getDefaultValueType(key);return defaultType&&defaultType.default||0}{const computedStyle=function getComputedStyle(element){return window.getComputedStyle(element)}(instance),value=(isCSSVariableName(key)?computedStyle.getPropertyValue(key):computedStyle[key])||0;return"string"==typeof value?value.trim():value}}measureInstanceViewportBox(instance,{transformPagePoint}){return measureViewportBox(instance,transformPagePoint)}build(renderState,latestValues,props){buildHTMLStyles(renderState,latestValues,props.transformTemplate)}scrapeMotionValuesFromProps(props,prevProps,visualElement){return scrapeMotionValuesFromProps(props,prevProps,visualElement)}}class SVGVisualElement extends DOMVisualElement{constructor(){super(...arguments),this.type="svg",this.isSVGTag=!1,this.measureInstanceViewportBox=createBox}getBaseTargetFromProps(props,key){return props[key]}readValueFromInstance(instance,key){if(transformProps.has(key)){const defaultType=getDefaultValueType(key);return defaultType&&defaultType.default||0}return key=camelCaseAttributes.has(key)?key:camelToDash(key),instance.getAttribute(key)}scrapeMotionValuesFromProps(props,prevProps,visualElement){return scrape_motion_values_scrapeMotionValuesFromProps(props,prevProps,visualElement)}build(renderState,latestValues,props){buildSVGAttrs(renderState,latestValues,this.isSVGTag,props.transformTemplate)}renderInstance(instance,renderState,styleProp,projection){renderSVG(instance,renderState,0,projection)}mount(instance){this.isSVGTag=isSVGTag(instance.tagName),super.mount(instance)}}const motion=createDOMMotionComponentProxy(createMotionComponentFactory({...animations,...gestureAnimations,...drag,...layout},((Component,options)=>isSVGComponent(Component)?new SVGVisualElement(options):new HTMLVisualElement(options,{allowProjection:Component!==react.Fragment}))))},"./node_modules/framer-motion/dist/es/utils/is-browser.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>isBrowser});const isBrowser="undefined"!=typeof window},"./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>initPrefersReducedMotion});var _is_browser_mjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/framer-motion/dist/es/utils/is-browser.mjs"),_state_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs");function initPrefersReducedMotion(){if(_state_mjs__WEBPACK_IMPORTED_MODULE_0__.r.current=!0,_is_browser_mjs__WEBPACK_IMPORTED_MODULE_1__.B)if(window.matchMedia){const motionMediaQuery=window.matchMedia("(prefers-reduced-motion)"),setReducedMotionPreferences=()=>_state_mjs__WEBPACK_IMPORTED_MODULE_0__.O.current=motionMediaQuery.matches;motionMediaQuery.addListener(setReducedMotionPreferences),setReducedMotionPreferences()}else _state_mjs__WEBPACK_IMPORTED_MODULE_0__.O.current=!1}},"./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>prefersReducedMotion,r:()=>hasReducedMotionListener});const prefersReducedMotion={current:null},hasReducedMotionListener={current:!1}},"./node_modules/framer-motion/dist/es/utils/use-constant.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>useConstant});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useConstant(init){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return null===ref.current&&(ref.current=init()),ref.current}},"./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>useIsomorphicLayoutEffect});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useIsomorphicLayoutEffect=__webpack_require__("./node_modules/framer-motion/dist/es/utils/is-browser.mjs").B?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect}}]);