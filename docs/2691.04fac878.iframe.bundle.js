"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[2691],{"./packages/gamut/src/Form/inputs/Checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>Checkbox});var emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),src=__webpack_require__("./packages/gamut-styles/src/index.ts"),react=__webpack_require__("./node_modules/react/index.js"),shared_system_props=__webpack_require__("./packages/gamut/src/Form/styles/shared-system-props.ts");const checkboxLabel=src.qU.css({display:"flex",alignItems:"flex-start",cursor:"pointer",m:4,px:0,py:16,...shared_system_props.y2}),checkboxLabelStates=src.qU.states({disabled:{cursor:"not-allowed"}}),checkboxPadding=src.qU.variant({defaultVariant:"base",prop:"spacing",variants:{base:{py:16},tight:{py:4}}}),checkboxElement=src.qU.css({position:"relative",mr:8,minWidth:22,width:22,height:22,borderColor:"currentColor",borderRadius:"md",borderStyle:"solid",borderWidth:"2px",transition:(0,src.ab)(["transform","outline","background-color","box-shadow"],"slow","ease-in-out"),[shared_system_props.h$.HOVER]:{outline:`2px solid   ${src.w4.colors.primary}`,outlineOffset:"2px"}}),polyline=src.qU.css({color:"background"}),checkboxTextStates=src.qU.states({multiline:{fontSize:14},disabled:shared_system_props.uD}),checkboxElementStates=src.qU.states({multiline:{mt:4},checked:{color:"primary"},disabled:{color:"text-disabled",[shared_system_props.h$.HOVER]:{outline:"none"}}}),checkboxInput=src.qU.css({[shared_system_props.h$.FOCUS_LABEL_DIV_CHILD]:{outline:`2px solid ${src.w4.colors.primary}`,outlineOffset:"2px"}});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const CheckboxLabel=(0,emotion_styled_base_browser_esm.A)("label",{target:"e1ni3uy15",label:"CheckboxLabel"})(src.Ov,checkboxLabel,checkboxPadding,checkboxLabelStates,""),CheckboxElement=(0,emotion_styled_base_browser_esm.A)("div",_extends({},{target:"e1ni3uy14",label:"CheckboxElement"},src.W8))(checkboxElement,checkboxElementStates,""),CheckboxVector=(0,emotion_styled_base_browser_esm.A)("svg",{target:"e1ni3uy13",label:"CheckboxVector"})({name:"13idn5w",styles:"position:absolute;top:-1px;left:-1px"}),Polyline=(0,emotion_styled_base_browser_esm.A)("polyline",{target:"e1ni3uy12",label:"Polyline"})(polyline," fill:none;stroke:currentColor;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:18px;stroke-dashoffset:",(_ref=>{let{checked}=_ref;return checked?0:"18px"}),";transition:stroke-dashoffset ",src.N9.fast,";"),Input=(0,emotion_styled_base_browser_esm.A)("input",{target:"e1ni3uy11",label:"Input"})(src.IR," ",checkboxInput,";"),CheckboxText=(0,emotion_styled_base_browser_esm.A)("span",{target:"e1ni3uy10",label:"CheckboxText"})(checkboxTextStates,""),Checkbox=(0,react.forwardRef)(((_ref2,ref)=>{let{"aria-label":ariaLabel,className,label,htmlFor,multiline,id,checked,disabled,spacing,value,dontAriaHideLabel,...rest}=_ref2;return(0,jsx_runtime.jsxs)("div",{className,children:[(0,jsx_runtime.jsx)(Input,{id:id||htmlFor,"labelled-by":`text-${id||htmlFor}`,type:"checkbox",checked,disabled,"aria-label":void 0===ariaLabel?"string"==typeof label?label:void 0:ariaLabel,value:`${value}`,...rest,ref}),(0,jsx_runtime.jsxs)(CheckboxLabel,{htmlFor:id||htmlFor,disabled,spacing,children:[(0,jsx_runtime.jsx)(CheckboxElement,{multiline,checked,disabled,children:(0,jsx_runtime.jsxs)(CheckboxVector,{width:"19px",height:"19px",viewBox:"0 0 19 19",color:checked?"currentColor":"transparent","aria-hidden":!0,children:[(0,jsx_runtime.jsx)("path",{fill:"currentColor",d:"M1 1h19v19h-19z"}),(0,jsx_runtime.jsx)(Polyline,{checked,points:"4 11 8 15 16 6"})]})}),(0,jsx_runtime.jsx)(CheckboxText,{id:`text-${id||htmlFor}`,multiline,disabled,"aria-hidden":dontAriaHideLabel?"false":"true",children:label})]})]})}));try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{spacing:{defaultValue:null,description:"",name:"spacing",required:!1,type:{name:'false | "base" | "tight"'}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},label:{defaultValue:null,description:"If the label is a ReactNode, an aria-label must be added.",name:"label",required:!0,type:{name:"ReactNode"}},multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},htmlFor:{defaultValue:null,description:"[The for/id string of a label or labelable form-related element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor). The outer FormGroup or FormLabel should have an identical string as the inner FormElement for accessibility purposes.",name:"htmlFor",required:!0,type:{name:"string"}},value:{defaultValue:null,description:'@remarks The `value` prop here gets passed to the underlying `input` component\nand functions exactly like the HTML spec for checkboxes defines\n(which may not be as you expect):\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value=\n\nOf note is that `value` ends up being the string that your field name key\nis set to when the checkbox is checked. So a `value` of the boolean `true` and\na `name` of "isPro" will result in `{\n isPro: "true"\n}` being submitted to your (non-`Connected`) form when the checkbox is checked.\nHowever, if due to how your HOC is organized, the Checkbox recieves a value\nof the boolean `false` when it is unchecked, NOTHING will be submitted. You\n_will not_ get `{ isPro: "false" }` on submit. However, the `value` of your input\nwill be "false"\n\nAs the MDN documentation above states:\n"If a checkbox is unchecked when its form is submitted, there is no value submitted to the server to represent its unchecked state (e.g. value=unchecked); the value is not submitted to the server at all"\n\nThis behavior may not matter to you if you\'re handling your own form values\nexternally (i.e. not relying on default lower-case-`form`/`input` submit behavior)\nor you\'re using `register` from Gamut\'s `useField` hook,\nwhich uses `react-hook-form`\'s logic to sidestep this behavior by not passing\na value to the underlying checkbox at all.',name:"value",required:!1,type:{name:"string | boolean"}},dontAriaHideLabel:{defaultValue:null,description:"",name:"dontAriaHideLabel",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/Form/inputs/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"packages/gamut/src/Form/inputs/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./packages/gamut/src/Form/styles/shared-system-props.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Aw:()=>formFieldStyles,BF:()=>formBaseFieldStylesObject,HW:()=>formBaseComponentStyles,Px:()=>formFieldFocusStyles,XL:()=>conditionalStyles,ao:()=>formFieldTextDisabledStyles,gL:()=>formFieldPaddingStyles,h$:()=>InputSelectors,rx:()=>conditionalStyleState,uD:()=>formFieldBaseDisabledStyles,xh:()=>formFieldDisabledStyles,y2:()=>formBaseStyles});var _codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/gamut-styles/src/index.ts");let InputSelectors=function(InputSelectors){return InputSelectors.HOVER="&:hover",InputSelectors.ACTIVE="&:active",InputSelectors.PLACEHOLDER="&:placeholder",InputSelectors.FOCUS="&:focus",InputSelectors.FOCUS_LABEL_DIV_CHILD="&:focus + label > div",InputSelectors.DISABLED="&:disabled, &[aria-disabled='true']",InputSelectors.BEFORE="&::before",InputSelectors.AFTER="&::after",InputSelectors.BEFORE_AND_AFTER="&::before, &::after",InputSelectors.CHECKED_BEFORE="&:checked + label::before",InputSelectors.CHECKED_AFTER="&:checked + label::after",InputSelectors.HOVER_FOCUS_BEFORE="&:hover + label::before, &:focus + label::before",InputSelectors}({});const formBaseStyles={fontWeight:"base",fontSize:16,color:"text"},formBaseComponentStyles={width:1,outline:"none",bg:"background",minWidth:"auto",...formBaseStyles},formFieldFocusStyles={borderColor:"primary",boxShadow:`inset 0 0 0 1px ${_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.w4.colors.primary}`},formFieldTextDisabledStyles={color:"text-disabled",cursor:"not-allowed"},formFieldBaseDisabledStyles={borderColor:"currentColor",opacity:1,...formFieldTextDisabledStyles},formFieldDisabledStyles={...formFieldBaseDisabledStyles,bg:"background-disabled",[InputSelectors.HOVER]:{borderColor:"currentColor"}},formFieldPaddingStyles={py:12,px:8},formBaseFieldStylesObject={...formBaseComponentStyles,transition:(0,_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.ab)(["background-color","box-shadow"],"slow","ease-in-out"),border:1,borderRadius:"md",[InputSelectors.HOVER]:{borderColor:"primary"},[InputSelectors.PLACEHOLDER]:{fontStyle:"italic"},[InputSelectors.DISABLED]:{...formFieldDisabledStyles}},formFieldStyles=(_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.qU.css(formBaseFieldStylesObject),_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.qU.css({...formBaseFieldStylesObject,...formFieldPaddingStyles,lineHeight:"base",[InputSelectors.FOCUS]:formFieldFocusStyles})),conditionalStyles=_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.qU.variant({variants:{error:{borderColor:"feedback-error",[InputSelectors.HOVER]:{borderColor:"feedback-error"},[InputSelectors.FOCUS]:{borderColor:"feedback-error",boxShadow:`inset 0 0 0 1px ${_codecademy_gamut_styles__WEBPACK_IMPORTED_MODULE_0__.w4.colors["feedback-error"]}`}},activated:{borderColor:"currentColor"}}}),conditionalStyleState=(error,activated)=>error?"error":activated?"activated":void 0}}]);