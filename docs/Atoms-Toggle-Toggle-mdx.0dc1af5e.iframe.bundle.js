"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[2795],{"./packages/styleguide/src/lib/Atoms/Toggle/Toggle.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx");const parameters={subtitle:"A completely controlled boolean Toggle component that triggers an immediate on/off action.",status:"current",design:{type:"figma",url:"https://www.figma.com/design/ReGfRNillGABAj5SlITalN/%F0%9F%93%90-Gamut?node-id=30067-40001&node-type=frame&t=1xdU7wY1nMmPMtuG-0"},source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut/src/Toggle"}};function _createMdxContent(props){const _components={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.W8,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Bg,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Toggles are functionally similar to Checkboxes, as they both display whether they are checked or not."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Also like our Checkboxes, our Toggles are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://reactjs.org/docs/forms.html#controlled-components",rel:"nofollow",children:"controlled components"}),", so their checked value must be controlled by an external state and onChange."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Like other Form Elements, make sure to include a label with your Toggle.","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Labels can be on either side of the Toggle â€” choose the direction that aligns best with the other elements on the page."}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Toggles are most effective when they trigger an immediate action with related components (like changing copy or showing a section when toggled)"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"size",children:"Size"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"medium",children:"Medium"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Medium is the default and preferred size, especially if it is part of a form."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.Medium}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"small",children:"Small"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Use the small size for UI toggles that are outside of a form context and need to fit into smaller areas."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.Small}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"disabled",children:"Disabled"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Disabling the input will change the opacity and cursor but still denote the current value."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.Disabled}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.DisabledChecked}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"labels",children:"Labels"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Disabling the input will change the opacity and cursor but still denote the current value."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.LabelRight}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.LabelLeft}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Labels can also be React components."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.ReactComponentLabel}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"html-element",children:"HTML element"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Our Toggles default to being ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"input"})," elements, but can also be the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"button"})," element."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["An ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"input"})," toggle should be provided an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"onChange"})," and should have a secondary action (such as a submit button) that does something with its value. It is also usually wrapped in a form."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["A ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"button"})," toggle should be provided an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"onClick"})," and have an action that happens immediately (i.e, without a secondary input.) The toggle also gets the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"role"})," of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"switch"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If you use voiceover on either of the below, you will hear the difference this makes for accessibility."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.InputElement}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.ButtonElement}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"interactive-examples",children:"Interactive examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.InteractiveInputToggle}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.InteractiveButtonToggle}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"playground",children:"Playground"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.Hl,{sourceState:"shown",of:_Toggle_stories__WEBPACK_IMPORTED_MODULE_3__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_5__.H2,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_4__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ButtonElement:()=>ButtonElement,Default:()=>Default,Disabled:()=>Disabled,DisabledChecked:()=>DisabledChecked,InputElement:()=>InputElement,InteractiveButtonToggle:()=>InteractiveButtonToggle,InteractiveInputToggle:()=>InteractiveInputToggle,LabelLeft:()=>LabelLeft,LabelRight:()=>LabelRight,Medium:()=>Medium,ReactComponentLabel:()=>ReactComponentLabel,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/Toggle/index.tsx"),_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/gamut/src/Typography/Text.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.l,args:{}},Default={args:{}},Medium={args:{size:"medium"}},Small={args:{size:"small"}},Disabled={args:{disabled:!0}},DisabledChecked={args:{disabled:!0,checked:!0}},LabelLeft={args:{label:"My label is to the left",labelSide:"left"}},LabelRight={args:{label:"My label is to the right",labelSide:"right"}},ReactComponentLabel={args:{checked:!1,label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_3__.E,{children:"I am a Text component"}),ariaLabel:"Hello there"}},InputElement={args:{label:"input toggle",onChange:()=>null}},ButtonElement={args:{as:"button",checked:!0,label:"button toggle",onChange:void 0,onClick:()=>null}},InteractiveInputToggle=()=>{const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.l,{checked,label:"interactive input toggle",onChange:()=>{setChecked(!checked)}})},InteractiveButtonToggle=()=>{const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut__WEBPACK_IMPORTED_MODULE_2__.l,{as:"button",checked,label:"interactive button toggle",onClick:()=>{setChecked(!checked)}})},__namedExportsOrder=["Default","Medium","Small","Disabled","DisabledChecked","LabelLeft","LabelRight","ReactComponentLabel","InputElement","ButtonElement","InteractiveInputToggle","InteractiveButtonToggle"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'medium'\n  }\n}",...Medium.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'small'\n  }\n}",...Small.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},DisabledChecked.parameters={...DisabledChecked.parameters,docs:{...DisabledChecked.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    checked: true\n  }\n}",...DisabledChecked.parameters?.docs?.source}}},LabelLeft.parameters={...LabelLeft.parameters,docs:{...LabelLeft.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'My label is to the left',\n    labelSide: 'left'\n  }\n}",...LabelLeft.parameters?.docs?.source}}},LabelRight.parameters={...LabelRight.parameters,docs:{...LabelRight.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'My label is to the right',\n    labelSide: 'right'\n  }\n}",...LabelRight.parameters?.docs?.source}}},ReactComponentLabel.parameters={...ReactComponentLabel.parameters,docs:{...ReactComponentLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    checked: false,\n    label: <Text>I am a Text component</Text>,\n    ariaLabel: 'Hello there'\n  }\n}",...ReactComponentLabel.parameters?.docs?.source}}},InputElement.parameters={...InputElement.parameters,docs:{...InputElement.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'input toggle',\n    onChange: () => null\n  }\n}",...InputElement.parameters?.docs?.source}}},ButtonElement.parameters={...ButtonElement.parameters,docs:{...ButtonElement.parameters?.docs,source:{originalSource:"{\n  args: {\n    as: 'button',\n    checked: true,\n    label: 'button toggle',\n    onChange: undefined,\n    onClick: () => null\n  }\n}",...ButtonElement.parameters?.docs?.source}}},InteractiveInputToggle.parameters={...InteractiveInputToggle.parameters,docs:{...InteractiveInputToggle.parameters?.docs,source:{originalSource:'() => {\n  const [checked, setChecked] = useState(false);\n  const changeHandler = () => {\n    setChecked(!checked);\n  };\n  return <Toggle checked={checked} label="interactive input toggle" onChange={changeHandler} />;\n}',...InteractiveInputToggle.parameters?.docs?.source}}},InteractiveButtonToggle.parameters={...InteractiveButtonToggle.parameters,docs:{...InteractiveButtonToggle.parameters?.docs,source:{originalSource:'() => {\n  const [checked, setChecked] = useState(false);\n  const changeHandler = () => {\n    setChecked(!checked);\n  };\n  return <Toggle as="button" checked={checked} label="interactive button toggle" onClick={changeHandler} />;\n}',...InteractiveButtonToggle.parameters?.docs?.source}}};try{InteractiveInputToggle.displayName="InteractiveInputToggle",InteractiveInputToggle.__docgenInfo={description:"",displayName:"InteractiveInputToggle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx#InteractiveInputToggle"]={docgenInfo:InteractiveInputToggle.__docgenInfo,name:"InteractiveInputToggle",path:"packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx#InteractiveInputToggle"})}catch(__react_docgen_typescript_loader_error){}try{InteractiveButtonToggle.displayName="InteractiveButtonToggle",InteractiveButtonToggle.__docgenInfo={description:"",displayName:"InteractiveButtonToggle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx#InteractiveButtonToggle"]={docgenInfo:InteractiveButtonToggle.__docgenInfo,name:"InteractiveButtonToggle",path:"packages/styleguide/src/lib/Atoms/Toggle/Toggle.stories.tsx#InteractiveButtonToggle"})}catch(__react_docgen_typescript_loader_error){}}}]);