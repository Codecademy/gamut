{"version":3,"sources":["webpack:///./node_modules/@storybook/components/node_modules/highlight.js/lib/languages/xquery.js"],"names":["module","exports","hljs","METHOD","begin","end","CONTAINS","className","variants","contains","relevance","aliases","case_insensitive","lexemes","illegal","keywords","keyword","literal"],"mappings":"yFAAAA,OAAOC,QAAU,SAASC,MACxB,IA0CIC,OAAS,CACXC,MAAO,IAAKC,IAAK,KAGfC,SAAW,CAtCL,CACRF,MAAO,oBASI,CACXG,UAAW,SACXC,SAAU,CACR,CAACJ,MAAO,IAAKC,IAAK,IAAKI,SAAU,CAAC,CAACL,MAAO,KAAMM,UAAW,KAC3D,CAACN,MAAO,IAAKC,IAAK,IAAKI,SAAU,CAAC,CAACL,MAAO,KAAMM,UAAW,OAVlD,CACXH,UAAW,SACXH,MAAO,4EACPM,UAAW,GAgBC,CACZH,UAAW,UACXH,MAAO,OAAQC,IAAK,OACpBK,UAAW,GACXD,SAAU,CACR,CACEF,UAAW,SAAUH,MAAO,WAXjB,CACfG,UAAW,OACXH,MAAO,SAwBPD,QAKF,OAHAA,OAAOM,SAAWH,SAGX,CACLK,QAAS,CAAC,QAAS,MACnBC,kBAAkB,EAClBC,QAAS,6BACTC,QAAS,0CACTC,SAAU,CACRC,QA/DW,kiBAgEXC,QAzDU,4JA2DZR,SAAUH","file":"react-syntax-highlighter_languages_highlight_xquery.a7b8408de340f04ddd71.bundle.js","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\n    'replace value rename copy modify update';\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n  var VAR = {\n    begin: /\\$[a-zA-Z0-9\\-]+/\n  };\n\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n    ]\n  };\n\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '%\\\\w+'\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    begin: '\\\\(:', end: ':\\\\)',\n    relevance: 10,\n    contains: [\n      {\n        className: 'doctag', begin: '@\\\\w+'\n      }\n    ]\n  };\n\n  var METHOD = {\n    begin: '{', end: '}'\n  };\n\n  var CONTAINS = [\n    VAR,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    METHOD\n  ];\n  METHOD.contains = CONTAINS;\n\n\n  return {\n    aliases: ['xpath', 'xq'],\n    case_insensitive: false,\n    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n};"],"sourceRoot":""}