{"version":3,"sources":["webpack:///./node_modules/@storybook/components/node_modules/highlight.js/lib/languages/python.js"],"names":["module","exports","hljs","KEYWORDS","keyword","built_in","PROMPT","className","begin","SUBST","end","keywords","illegal","STRING","contains","BACKSLASH_ESCAPE","variants","relevance","APOS_STRING_MODE","QUOTE_STRING_MODE","NUMBER","BINARY_NUMBER_RE","C_NUMBER_RE","PARAMS","aliases","HASH_COMMENT_MODE","beginKeywords","UNDERSCORE_TITLE_MODE","endsWithParent"],"mappings":"yFAAAA,OAAOC,QAAU,SAASC,MACxB,IAAIC,SAAW,CACbC,QACE,8MAGFC,SACE,2BAEAC,OAAS,CACXC,UAAW,OAASC,MAAO,kBAEzBC,MAAQ,CACVF,UAAW,QACXC,MAAO,KAAME,IAAK,KAClBC,SAAUR,SACVS,QAAS,KAEPC,OAAS,CACXN,UAAW,SACXO,SAAU,CAACZ,KAAKa,kBAChBC,SAAU,CACR,CACER,MAAO,cAAeE,IAAK,MAC3BI,SAAU,CAACZ,KAAKa,iBAAkBT,QAClCW,UAAW,IAEb,CACET,MAAO,cAAeE,IAAK,MAC3BI,SAAU,CAACZ,KAAKa,iBAAkBT,QAClCW,UAAW,IAEb,CACET,MAAO,eAAgBE,IAAK,MAC5BI,SAAU,CAACZ,KAAKa,iBAAkBT,OAAQG,QAE5C,CACED,MAAO,eAAgBE,IAAK,MAC5BI,SAAU,CAACZ,KAAKa,iBAAkBT,OAAQG,QAE5C,CACED,MAAO,YAAaE,IAAK,IACzBO,UAAW,IAEb,CACET,MAAO,YAAaE,IAAK,IACzBO,UAAW,IAEb,CACET,MAAO,UAAWE,IAAK,KAEzB,CACEF,MAAO,UAAWE,IAAK,KAEzB,CACEF,MAAO,aAAcE,IAAK,IAC1BI,SAAU,CAACZ,KAAKa,iBAAkBN,QAEpC,CACED,MAAO,aAAcE,IAAK,IAC1BI,SAAU,CAACZ,KAAKa,iBAAkBN,QAEpCP,KAAKgB,iBACLhB,KAAKiB,oBAGLC,OAAS,CACXb,UAAW,SAAUU,UAAW,EAChCD,SAAU,CACR,CAACR,MAAON,KAAKmB,iBAAmB,WAChC,CAACb,MAAO,wBACR,CAACA,MAAON,KAAKoB,YAAc,aAG3BC,OAAS,CACXhB,UAAW,SACXC,MAAO,KAAME,IAAK,KAClBI,SAAU,CAAC,OAAQR,OAAQc,OAAQP,SAGrC,OADAJ,MAAMK,SAAW,CAACD,OAAQO,OAAQd,QAC3B,CACLkB,QAAS,CAAC,KAAM,OAChBb,SAAUR,SACVS,QAAS,iBACTE,SAAU,CACRR,OACAc,OACAP,OACAX,KAAKuB,kBACL,CACET,SAAU,CACR,CAACT,UAAW,WAAYmB,cAAe,OACvC,CAACnB,UAAW,QAASmB,cAAe,UAEtChB,IAAK,IACLE,QAAS,YACTE,SAAU,CACRZ,KAAKyB,sBACLJ,OACA,CACEf,MAAO,KAAMoB,gBAAgB,EAC7BjB,SAAU,UAIhB,CACEJ,UAAW,OACXC,MAAO,WAAYE,IAAK,KAE1B,CACEF,MAAO","file":"react-syntax-highlighter_languages_highlight_python.a8d5437c65bc39ef0a63.bundle.js","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // donâ€™t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};"],"sourceRoot":""}