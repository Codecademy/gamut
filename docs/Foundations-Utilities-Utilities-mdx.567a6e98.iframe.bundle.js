"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[6585],{"./packages/styleguide/src/lib/Foundations/Utilities/Utilities.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),components=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx"),emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),GridBox=__webpack_require__("./packages/gamut/src/Box/GridBox.tsx"),src=__webpack_require__("./packages/gamut-styles/src/index.ts");const ShadowBox=(0,emotion_styled_base_browser_esm.A)("div",{target:"e1s14qy40",label:"ShadowBox"})("display:inline-flex;align-items:center;justify-content:center;padding:20px;",(_ref=>{let{shadow}=_ref;return shadow}),";"),ShadowExample=()=>(0,jsx_runtime.jsxs)(GridBox.W,{bg:"background",gap:16,gridTemplateColumns:"repeat(5, 1fr)",p:16,width:"100%",children:[(0,jsx_runtime.jsx)(ShadowBox,{shadow:(0,src.MS)(1),children:"1"}),(0,jsx_runtime.jsx)(ShadowBox,{shadow:(0,src.MS)(2),children:"2"}),(0,jsx_runtime.jsx)(ShadowBox,{shadow:(0,src.MS)(3),children:"3"}),(0,jsx_runtime.jsx)(ShadowBox,{shadow:(0,src.MS)(4),children:"4"}),(0,jsx_runtime.jsx)(ShadowBox,{shadow:(0,src.MS)(5),children:"5"})]});try{ShadowBox.displayName="ShadowBox",ShadowBox.__docgenInfo={description:"",displayName:"ShadowBox",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},shadow:{defaultValue:null,description:"",name:"shadow",required:!1,type:{name:"SerializedStyles"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/styleguide/src/lib/Foundations/Utilities/boxShadow.tsx#ShadowBox"]={docgenInfo:ShadowBox.__docgenInfo,name:"ShadowBox",path:"packages/styleguide/src/lib/Foundations/Utilities/boxShadow.tsx#ShadowBox"})}catch(__react_docgen_typescript_loader_error){}const parameters={title:"Utilities",subtitle:"Style utilities for both SCSS and Emotion",status:"static",source:{repo:"gamut-styles",githubLink:"https://github.com/Codecademy/gamut/blob/main/packages/gamut-styles/src/styles"}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Foundations/Utilities"}),"\n",(0,jsx_runtime.jsx)(components.Rd,{...parameters}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"converting-units",children:"Converting units"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"px-to-rem",children:"PX to REM"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To keep consistent sizing we like to use ",(0,jsx_runtime.jsx)(_components.code,{children:"rem"})," units for most things (within reason).\nMany times when a specific REM value is not expressive like ",(0,jsx_runtime.jsx)(_components.code,{children:"1.875rem"})," (in this case, ",(0,jsx_runtime.jsx)(_components.code,{children:"30px"}),")\nit is better to express this as a pixel value that is closer to a round number."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"You can do this by using our px => rem utility in both TS and SCSS."}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"ts---pxrem",children:["TS - ",(0,jsx_runtime.jsx)(_components.code,{children:"pxRem"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { pxRem } from '@codecademy/gamut-styles';\n\npxRem(16); // => 1rem;\npxRem('30px'); // => 1.875rem;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"scss---px-rem",children:["SCSS - ",(0,jsx_runtime.jsx)(_components.code,{children:"px-rem"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-scss",children:"@import '@codecademy/gamut-styles/utils';\n\n.heading {\n  font-size: px-rem(30);\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"style-mixins",children:"Style mixins"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"We also support various style partials to help you consistently achieve affects, like box shadows and screen reader content."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"box-shadow",children:"Box shadow"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"We have 5 depths of box shadows that we use."}),"\n",(0,jsx_runtime.jsx)(ShadowExample,{}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"ts---boxshadow",children:["TS - ",(0,jsx_runtime.jsx)(_components.code,{children:"boxShadow"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { boxShadow } from '@codecademy/gamut-styles';\n\nconst Example = `\n  ${boxShadow(3)}\n`;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"scss---box-shadow",children:["SCSS - ",(0,jsx_runtime.jsx)(_components.code,{children:"box-shadow"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-scss",children:"@import '@codecademy/gamut-styles/utils';\n\n.box {\n  @include box-shadow(3);\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"fontsmoothing",children:(0,jsx_runtime.jsx)(_components.code,{children:"fontSmoothing"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"We enable font smoothing in some places to make typography more readable."}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"ts---fontsmoothing",children:["TS - ",(0,jsx_runtime.jsx)(_components.code,{children:"fontSmoothing"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { fontSmoothing } from '@codecademy/gamut-styles';\n\n// As props\nconst Smooth = `\n  ${fontSmoothing}\n`;\n\n// As Static\nconst Smooth = `\n  ${fontSmoothing({ fontSmoothing: 'subpixel' })}\n`;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"scss---font-smoothing",children:["SCSS - ",(0,jsx_runtime.jsx)(_components.code,{children:"font-smoothing"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-scss",children:"@import '@codecademy/gamut-styles/utils';\n\n.smoothed {\n  @include font-smoothing();\n}\n\n.rough {\n  @include font-smoothing(false);\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"no-selection",children:"No selection"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"In cases where we want to prevent the user from selecting an image or text."}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"ts---noselect",children:["TS - ",(0,jsx_runtime.jsx)(_components.code,{children:"noSelect"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { noSelect } from '@codecademy/gamut-styles';\n\nconst Unselectable = styled.div`\n  ${noSelect}\n`;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"scss---no-select",children:["SCSS - ",(0,jsx_runtime.jsx)(_components.code,{children:"no-select"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-scss",children:"@import '@codecademy/gamut-styles/utils';\n\n.unselectable {\n  @include font-smoothing();\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"screen-readers",children:"Screen readers"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Ensuring that your content is accessible can require you to make screen reader only text elements.\nWe provide a few helpful mixins for use cases where you want the screen reader to be able to focus or\njust be aware of the content."}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"ts---screenreaderonly--screenreaderonlyfocusable",children:["TS - ",(0,jsx_runtime.jsx)(_components.code,{children:"screenReaderOnly"})," | ",(0,jsx_runtime.jsx)(_components.code,{children:"screenReaderOnlyFocusable"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import {\n  screenReaderOnly,\n  screenReaderOnlyFocusable,\n} from '@codecademy/gamut-styles';\n\nconst HiddenLabel = `\n  ${screenReaderOnly}\n`;\n\nconst HiddenLabelWithFocus = `\n  ${screenReaderOnlyFocusable}\n`;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h4,{id:"scss---screenreader-only--screenreader-only-focusable",children:["SCSS - ",(0,jsx_runtime.jsx)(_components.code,{children:"screenreader-only"})," | ",(0,jsx_runtime.jsx)(_components.code,{children:"screenreader-only-focusable"})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-scss",children:"@import '@codecademy/gamut-styles/utils';\n\n.hiddenLabel {\n  @include screenreader-only();\n}\n\n.hiddenLabel__focusable {\n  @include screenreader-only-focusable();\n}\n"})})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);