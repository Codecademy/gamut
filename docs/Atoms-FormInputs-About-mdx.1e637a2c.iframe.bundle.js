"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[1343],{"./packages/styleguide/src/lib/Atoms/FormInputs/About.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent,parameters:()=>parameters});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/styleguide/.storybook/components/index.tsx");const parameters={id:"FormInputs",title:"Form Inputs",subtitle:"Various input types that allow a user to make a selection or enter information.",source:{repo:"gamut",githubLink:"https://github.com/Codecademy/gamut/tree/main/packages/gamut/src/Form/inputs"}};function _createMdxContent(props){const _components={p:"p",...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Atoms/FormInputs/About"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.Rd,{...parameters}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In most cases you should not need to use these directly and you should use the component ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Organisms/GridForm",children:"GridForm"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.WS,{id:"Organisms/ConnectedForm",children:"ConnectedForm"}),". These are meant to be used as API and design references for end states."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_styleguide_blocks__WEBPACK_IMPORTED_MODULE_2__.MB,{links:[{id:"Atoms/FormInputs/Checkbox",subtitle:'A `<input type="checkbox" />` element for handling boolean values.',title:"Checkbox",status:"current"},{id:"Atoms/FormInputs/Input",subtitle:'A general `<input />` element for handling "text", "number" and "file" input types',title:"Input",status:"current"},{id:"Atoms/FormInputs/Radio",subtitle:'A `<input type="radio" />` element to be used with a `<RadioGroup />` component',title:"Radio",status:"current"},{id:"Atoms/FormInputs/Select",subtitle:"A `<select />` element for picking from exclusive options",title:"Select",status:"current"},{id:"Atoms/FormInputs/SelectDropdown",subtitle:"A variant of our `Select` component with a styled dropdown menu.",title:"SelectDropdown",status:"current"},{id:"Atoms/FormInputs/TextArea",subtitle:"A `<textarea />` component for long form text entry",title:"TextArea",status:"current"}]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_circleci_repo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);