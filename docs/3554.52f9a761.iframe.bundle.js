"use strict";(self.webpackChunkgamut_repo=self.webpackChunkgamut_repo||[]).push([[3554],{"./packages/gamut/src/DataList/Controls/ExpandControl.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>ExpandControl});var _codecademy_gamut_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/gamut-icons/dist/icons/mini/MiniChevronDownIcon.js"),_Animation__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./packages/gamut/src/Animation/Rotation.tsx")),_Box_FlexBox__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/gamut/src/Box/FlexBox.tsx"),_Button_TextButton__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/gamut/src/Button/TextButton.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const ExpandControl=({id,disabled,expanded,onExpand})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Box_FlexBox__WEBPACK_IMPORTED_MODULE_2__.p,{center:!0,mt:{_:0,c_base:8,c_sm:0},pl:{_:16,c_base:0,c_sm:16},pr:8,width:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Button_TextButton__WEBPACK_IMPORTED_MODULE_3__.Q,{"aria-expanded":expanded,"aria-label":`Expand ${id} Row`,disabled,size:"small",variant:"secondary",width:{_:32,c_base:1,c_sm:32},onClick:()=>{onExpand?.({rowId:id,toggle:expanded})},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Animation__WEBPACK_IMPORTED_MODULE_4__.p,{rotated:expanded,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_codecademy_gamut_icons__WEBPACK_IMPORTED_MODULE_5__.C,{color:"secondary"})})})});try{ExpandControl.displayName="ExpandControl",ExpandControl.__docgenInfo={description:"",displayName:"ExpandControl",props:{expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"boolean"}},onExpand:{defaultValue:null,description:"",name:"onExpand",required:!1,type:{name:"RowChange<any>"}},ghost:{defaultValue:null,description:"",name:"ghost",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Controls/ExpandControl.tsx#ExpandControl"]={docgenInfo:ExpandControl.__docgenInfo,name:"ExpandControl",path:"packages/gamut/src/DataList/Controls/ExpandControl.tsx#ExpandControl"})}catch(__react_docgen_typescript_loader_error){}},"./packages/gamut/src/DataList/DataGrid.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>DataGrid});var react=__webpack_require__("./node_modules/react/index.js"),List=__webpack_require__("./packages/gamut/src/List/List.tsx"),FlexBox=__webpack_require__("./packages/gamut/src/Box/FlexBox.tsx"),FillButton=__webpack_require__("./packages/gamut/src/Button/FillButton.tsx"),Text=__webpack_require__("./packages/gamut/src/Typography/Text.tsx"),kebabCase=__webpack_require__("./node_modules/lodash/kebabCase.js"),kebabCase_default=__webpack_require__.n(kebabCase);function useListControls({idKey,id,onQueryChange,onRowExpand,onRowSelect,expandedContent}){const expandable=!!onRowExpand&&!!expandedContent,selectable=!!onRowSelect,prefixId=(0,react.useCallback)((affix=>`${id}-${kebabCase_default()(`${String(affix)}`)}`),[id]),onSelect=(0,react.useCallback)((({rowId,...payload})=>{const isHeader="header"===rowId;onRowSelect?.({type:isHeader?"select-all":"select",payload:isHeader?payload:{rowId,...payload}})}),[onRowSelect]),onExpand=(0,react.useCallback)((payload=>{onRowExpand?.({type:"expand",payload})}),[onRowExpand]),onSort=(0,react.useCallback)((payload=>{onQueryChange?.({type:"sort",payload})}),[onQueryChange]),onFilter=(0,react.useCallback)((payload=>{onQueryChange?.({type:"filter",payload})}),[onQueryChange]),onResetQuery=(0,react.useCallback)((()=>{onQueryChange?.({type:"reset"})}),[onQueryChange]);return(0,react.useMemo)((()=>({idKey,prefixId,onSelect,onExpand,onFilter,onResetQuery,onSort,expandedContent,expandable,selectable})),[idKey,prefixId,onSelect,onExpand,onFilter,onResetQuery,onSort,expandedContent,expandable,selectable])}const ListControlContext=(0,react.createContext)({}),useControlContext=()=>(0,react.useContext)(ListControlContext);try{useListControls.displayName="useListControls",useListControls.__docgenInfo={description:"",displayName:"useListControls",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},idKey:{defaultValue:null,description:"",name:"idKey",required:!0,type:{name:"string | number | symbol"}},rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"Row[]"}},expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"Row[IdKey][]"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"Row[IdKey][]"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"Query<Row>"}},onQueryChange:{defaultValue:null,description:"",name:"onQueryChange",required:!1,type:{name:"OnQueryChange<Row>"}},onRowSelect:{defaultValue:null,description:"",name:"onRowSelect",required:!1,type:{name:"RowStateChange<SelectEvents, Row[IdKey]>"}},onRowExpand:{defaultValue:null,description:"",name:"onRowExpand",required:!1,type:{name:'RowStateChange<"expand", Row[IdKey]>'}},expandedContent:{defaultValue:null,description:"",name:"expandedContent",required:!1,type:{name:"ExpandRow<Row>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/hooks/useListControls.tsx#useListControls"]={docgenInfo:useListControls.__docgenInfo,name:"useListControls",path:"packages/gamut/src/DataList/hooks/useListControls.tsx#useListControls"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const EmptyRows=()=>{const{onResetQuery}=useControlContext();return(0,jsx_runtime.jsx)(FlexBox.p,{as:"tbody",bg:"background-current",left:"calc(50% - 160px)",p:32,position:"sticky",top:"calc(50% - 66px)",width:"320px",zIndex:1,children:(0,jsx_runtime.jsxs)(FlexBox.p,{as:"tr",center:!0,column:!0,gap:16,width:"100%",children:[(0,jsx_runtime.jsx)("th",{children:(0,jsx_runtime.jsx)(Text.E,{variant:"title-sm",children:"No Results Found"})}),(0,jsx_runtime.jsx)("th",{children:(0,jsx_runtime.jsx)(Text.E,{variant:"p-base",children:"Remove filters to view"})}),(0,jsx_runtime.jsx)("th",{children:(0,jsx_runtime.jsx)(FillButton.S,{onClick:onResetQuery,children:"Reset Filters"})})]})})},ListStateContext=(0,react.createContext)({}),useListState=()=>(0,react.useContext)(ListStateContext);var ListCol=__webpack_require__("./packages/gamut/src/List/ListCol.tsx"),ListProvider=__webpack_require__("./packages/gamut/src/List/ListProvider.tsx"),Checkbox=__webpack_require__("./packages/gamut/src/Form/inputs/Checkbox.tsx");const SelectControl=({disabled,onSelect,rowId,label,selected=!1,name})=>(0,jsx_runtime.jsx)(Checkbox.S,{"aria-label":label,checked:selected,disabled,htmlFor:name,label:(0,jsx_runtime.jsx)(Text.E,{screenreader:!0,children:label}),name,spacing:"tight",onChange:()=>onSelect?.({rowId,toggle:selected})});try{SelectControl.displayName="SelectControl",SelectControl.__docgenInfo={description:"",displayName:"SelectControl",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},rowId:{defaultValue:null,description:"",name:"rowId",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"RowChange<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Controls/SelectControl.tsx#SelectControl"]={docgenInfo:SelectControl.__docgenInfo,name:"SelectControl",path:"packages/gamut/src/DataList/Controls/SelectControl.tsx#SelectControl"})}catch(__react_docgen_typescript_loader_error){}var emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),FilterIcon=__webpack_require__("./packages/gamut-icons/dist/icons/regular/FilterIcon.js"),src=__webpack_require__("./packages/gamut-styles/src/index.ts"),Menu=__webpack_require__("./packages/gamut/src/Menu/Menu.tsx"),MenuItem=__webpack_require__("./packages/gamut/src/Menu/MenuItem.tsx"),Anchor=__webpack_require__("./packages/gamut/src/Anchor/index.tsx"),PopoverContainer=__webpack_require__("./packages/gamut/src/PopoverContainer/PopoverContainer.tsx");const getNextFilters=(option,filters)=>"all"===option?[]:filters.includes(option)?filters.filter((filt=>filt!==option)):[...filters,option],SELECT_ALL={text:"Select All",value:"all"},FilterToggle=(0,emotion_styled_base_browser_esm.A)(Anchor.M,{target:"eqjksxr0",label:"FilterToggle"})((0,src.xP)({open:{pointerEvents:"none"}}),""),FilterControl=({columnKey,onFilter,options=[],justify="left"})=>{const target=(0,react.useRef)(null),{prefixId}=useControlContext(),[menuOpen,setMenuOpen]=(0,react.useState)(!1),dimension=String(columnKey),filters=useListState().query?.filter?.[columnKey]??[];return(0,jsx_runtime.jsxs)(FlexBox.p,{column:!0,position:"relative",children:[menuOpen&&(0,jsx_runtime.jsx)(PopoverContainer.d,{alignment:"left"===justify?"bottom-right":"bottom-left",isOpen:!0,offset:0,targetRef:target,onRequestClose:()=>setMenuOpen(!1),children:(0,jsx_runtime.jsx)(Menu.W,{maxHeight:300,overflowY:"auto",spacing:"condensed",variant:"popover",width:"max-content",children:[SELECT_ALL,...options].map((opt=>{const{text,value}="string"==typeof(option=opt)?{text:option,value:option}:option;var option;const optionId=prefixId(`${kebabCase_default()(value)}-${dimension}`),allSelected=0===filters.length,isSelectAll="all"===value,optionSelected=isSelectAll?allSelected:!filters.includes(value);return(0,jsx_runtime.jsx)(MenuItem.D,{children:(0,jsx_runtime.jsx)(Checkbox.S,{"aria-label":isSelectAll?`${text} ${dimension}`:text,checked:optionSelected,htmlFor:optionId,label:(0,jsx_runtime.jsxs)(Text.E,{alignSelf:"center",display:"inline-block",fontFamily:"base",variant:"p-small",children:[text,isSelectAll&&(0,jsx_runtime.jsxs)(Text.E,{screenreader:!0,children:[" ",dimension]})]}),name:optionId,spacing:"tight",onChange:()=>{onFilter?.({dimension,value:getNextFilters(value,filters)})}})},prefixId(`filter-${columnKey}-${value}`))}))})}),(0,jsx_runtime.jsx)(FilterToggle,{"aria-expanded":menuOpen,"aria-haspopup":"true","aria-label":`filter by ${columnKey}`,display:"inline-flex",open:menuOpen,ref:target,variant:"interface",onClick:()=>setMenuOpen(!0),children:(0,jsx_runtime.jsx)(FlexBox.p,{center:!0,dimensions:16,mb:4,mr:4,children:(0,jsx_runtime.jsx)(FilterIcon.Y,{color:filters.length>0?"primary":"text",size:14})})})]})};try{FilterControl.displayName="FilterControl",FilterControl.__docgenInfo={description:"",displayName:"FilterControl",props:{columnKey:{defaultValue:null,description:"",name:"columnKey",required:!0,type:{name:"string"}},options:{defaultValue:{value:"[]"},description:"",name:"options",required:!1,type:{name:"FilterOption[]"}},onFilter:{defaultValue:null,description:"",name:"onFilter",required:!1,type:{name:"OnFilter<any>"}},justify:{defaultValue:{value:"left"},description:"",name:"justify",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Controls/FilterControl.tsx#FilterControl"]={docgenInfo:FilterControl.__docgenInfo,name:"FilterControl",path:"packages/gamut/src/DataList/Controls/FilterControl.tsx#FilterControl"})}catch(__react_docgen_typescript_loader_error){}var ArrowChevronDownFilledIcon=__webpack_require__("./packages/gamut-icons/dist/icons/regular/ArrowChevronDownFilledIcon.js");const SortAnchor=(0,emotion_styled_base_browser_esm.A)(Anchor.M,{target:"e543qhx1",label:"SortAnchor"})((0,src.AH)({color:"text",textAlign:"left",width:"100%",alignItems:"flex-end","&:hover":{color:"text"},"> div":{color:"text-disabled"},"&:hover div":{color:"text-secondary"}}),""),SortIcon=(0,emotion_styled_base_browser_esm.A)(ArrowChevronDownFilledIcon.o,{target:"e543qhx0",label:"SortIcon"})((0,src.xP)({asc:{transform:"rotate(180deg)"},active:{color:"text-accent"}}),""),defaultSortOrder=["asc","desc","none"],getNextSortDirection=dir=>{const currentIdx=defaultSortOrder.indexOf(dir),nextIdx=currentIdx===defaultSortOrder.length-1?0:currentIdx+1;return defaultSortOrder[nextIdx]},SortControl=({children,columnKey,onSort})=>{const direction=useListState().query?.sort?.[columnKey]??"none";return(0,jsx_runtime.jsxs)(SortAnchor,{"aria-label":`sort by ${columnKey}`,display:"inline-flex",variant:"interface",onClick:()=>onSort?.({dimension:columnKey,value:getNextSortDirection(direction)}),children:[children,(0,jsx_runtime.jsxs)(FlexBox.p,{column:!0,mb:4,ml:8,width:16,children:[(0,jsx_runtime.jsx)(SortIcon,{active:"asc"===direction,"aria-hidden":!1,"aria-label":"ascending",asc:!0,color:"currentColor",size:9}),(0,jsx_runtime.jsx)(SortIcon,{active:"desc"===direction,"aria-hidden":!1,"aria-label":"descending",color:"currentColor",size:9})]})]})};try{SortControl.displayName="SortControl",SortControl.__docgenInfo={description:"",displayName:"SortControl",props:{columnKey:{defaultValue:null,description:"",name:"columnKey",required:!0,type:{name:"string"}},onSort:{defaultValue:null,description:"",name:"onSort",required:!1,type:{name:"OnSort<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Controls/SortControl.tsx#SortControl"]={docgenInfo:SortControl.__docgenInfo,name:"SortControl",path:"packages/gamut/src/DataList/Controls/SortControl.tsx#SortControl"})}catch(__react_docgen_typescript_loader_error){}var ExpandControl=__webpack_require__("./packages/gamut/src/DataList/Controls/ExpandControl.tsx"),Box=__webpack_require__("./packages/gamut/src/Box/Box.tsx"),List_elements=__webpack_require__("./packages/gamut/src/List/elements.tsx");const TableHeader=(0,react.forwardRef)((({children,...rest},ref)=>{const{spacing,scrollable,variant}=(0,ListProvider.Ti)();return(0,jsx_runtime.jsx)(Box.a,{as:"thead",display:"block",position:"sticky",top:0,zIndex:2,children:(0,jsx_runtime.jsx)(List_elements.z1,{...rest,ref,scrollable,spacing,variant,children})})}));try{TableHeader.displayName="TableHeader",TableHeader.__docgenInfo={description:"",displayName:"TableHeader",props:{as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"boolean"}},isOl:{defaultValue:null,description:"",name:"isOl",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/List/TableHeader.tsx#TableHeader"]={docgenInfo:TableHeader.__docgenInfo,name:"TableHeader",path:"packages/gamut/src/List/TableHeader.tsx#TableHeader"})}catch(__react_docgen_typescript_loader_error){}const StyledHeaderRow=(0,emotion_styled_base_browser_esm.A)(TableHeader,{target:"e1fruch0",label:"StyledHeaderRow"})((0,src.xP)({invisible:{visibility:"hidden",height:0,overflow:"hidden"},isDataList:{borderX:"1px solid transparent"}}),"");try{StyledHeaderRow.displayName="StyledHeaderRow",StyledHeaderRow.__docgenInfo={description:"",displayName:"StyledHeaderRow",props:{as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"boolean"}},isOl:{defaultValue:null,description:"",name:"isOl",required:!1,type:{name:"boolean"}},invisible:{defaultValue:null,description:"",name:"invisible",required:!1,type:{name:"boolean"}},isDataList:{defaultValue:null,description:"",name:"isDataList",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Tables/Rows/elements.tsx#StyledHeaderRow"]={docgenInfo:StyledHeaderRow.__docgenInfo,name:"StyledHeaderRow",path:"packages/gamut/src/DataList/Tables/Rows/elements.tsx#StyledHeaderRow"})}catch(__react_docgen_typescript_loader_error){}const TableHeaderRow=({columns,selected=!1,empty=!1,hideSelectAll,invisible=!1})=>{const{expandable,selectable,onSelect,onFilter,onSort,prefixId}=useControlContext(),{variant,listType}=(0,ListProvider.Ti)(),dataTablePadding="table"===listType&&"table"===variant,headerRowDirections=useListState().query?.sort;return(0,jsx_runtime.jsx)(StyledHeaderRow,{invisible,isDataList:"table"===listType&&"table"!==variant,children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[selectable&&(0,jsx_runtime.jsx)(ListCol.f,{size:"content",children:!hideSelectAll&&(0,jsx_runtime.jsx)(SelectControl,{disabled:empty,label:"Select All",name:prefixId("all"),rowId:"header",selected,onSelect})}),columns.map((({key,header,sortable,filters,...colProps})=>{const rowProperty=key,renderKey=prefixId(`header-col-${rowProperty}`),columnText=String(header||key),sortDirection=headerRowDirections?.[rowProperty]??"none",ariaSortDirection="none"===sortDirection?"none":"asc"===sortDirection?"ascending":"descending";return(0,jsx_runtime.jsx)(ListCol.f,{...colProps,"aria-sort":sortable?ariaSortDirection:void 0,columnHeader:!0,dataTablePadding,children:(0,jsx_runtime.jsxs)(FlexBox.p,{alignItems:"flex-end",gap:8,width:"100%",children:[filters&&(0,jsx_runtime.jsx)(FilterControl,{columnKey:rowProperty,justify:colProps.justify,options:filters,onFilter}),sortable?(0,jsx_runtime.jsx)(SortControl,{columnKey:rowProperty,onSort,children:columnText}):columnText]})},renderKey)})),expandable&&(0,jsx_runtime.jsx)(ListCol.f,{ghost:!0,size:"content",children:(0,jsx_runtime.jsx)(ExpandControl.e,{})})]})})},HeaderRow=(0,react.memo)(TableHeaderRow);try{TableHeaderRow.displayName="TableHeaderRow",TableHeaderRow.__docgenInfo={description:"",displayName:"TableHeaderRow",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"Query<Row>"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},empty:{defaultValue:{value:"false"},description:"",name:"empty",required:!1,type:{name:"boolean"}},hideSelectAll:{defaultValue:null,description:"",name:"hideSelectAll",required:!1,type:{name:"boolean"}},invisible:{defaultValue:{value:"false"},description:"",name:"invisible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Tables/Rows/TableHeaderRow.tsx#TableHeaderRow"]={docgenInfo:TableHeaderRow.__docgenInfo,name:"TableHeaderRow",path:"packages/gamut/src/DataList/Tables/Rows/TableHeaderRow.tsx#TableHeaderRow"})}catch(__react_docgen_typescript_loader_error){}try{HeaderRow.displayName="HeaderRow",HeaderRow.__docgenInfo={description:"",displayName:"HeaderRow",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"Query<Row>"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},empty:{defaultValue:{value:"false"},description:"",name:"empty",required:!1,type:{name:"boolean"}},hideSelectAll:{defaultValue:null,description:"",name:"hideSelectAll",required:!1,type:{name:"boolean"}},invisible:{defaultValue:{value:"false"},description:"",name:"invisible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Tables/Rows/TableHeaderRow.tsx#HeaderRow"]={docgenInfo:HeaderRow.__docgenInfo,name:"HeaderRow",path:"packages/gamut/src/DataList/Tables/Rows/TableHeaderRow.tsx#HeaderRow"})}catch(__react_docgen_typescript_loader_error){}var ListRow=__webpack_require__("./packages/gamut/src/List/ListRow.tsx"),Shimmer=__webpack_require__("./packages/gamut/src/Loading/Shimmer.tsx");const TableRow=({id,columns,row,expanded=!1,selected=!1,loading=!1,showOverflow})=>{const{expandable,selectable,expandedContent,onExpand,onSelect,prefixId}=useControlContext(),{variant,listType}=(0,ListProvider.Ti)(),listColProps={dataTablePadding:"table"===listType&&"table"===variant,showOverflow},controlIndices=(0,react.useMemo)((()=>{const controlIndices=new Map;let controlCount=0;return columns.forEach(((column,index)=>{"control"===column.type&&(controlIndices.set(index,controlCount),controlCount+=1)})),controlIndices}),[columns]),renderExpandedContent=(0,react.useCallback)((()=>expandedContent?.({row,onCollapse:()=>onExpand({rowId:id,toggle:!0})})),[onExpand,expandedContent,id,row]),listRowProps=expandable?{expanded,renderExpanded:renderExpandedContent}:{};return(0,jsx_runtime.jsxs)(ListRow.v,{as:"tr",...listRowProps,children:[selectable&&(0,jsx_runtime.jsx)(ListCol.f,{...listColProps,display:{_:"flex",c_sm:"flex"},size:"content",type:"select",children:(0,jsx_runtime.jsx)(SelectControl,{disabled:loading,label:`Select ${id}`,name:prefixId(String(id)),rowId:String(id),selected,onSelect})}),columns.map((({key,render,size,justify,fill,type},index)=>{let colConfig={gridColumn:void 0,gridRow:void 0};const newKey=prefixId(`${id}-col-${String(key)}`),colProps={...listColProps,size,justify,fill,type};if("control"===type){const controlIndex=controlIndices.get(index)??0,gridCol=2+controlIndex%2;let gridRow;gridRow=selectable?0===controlIndex?1:2+Math.floor((controlIndex-1)/2):1+Math.floor(controlIndex/2),colConfig={gridColumn:{_:"auto",c_base:gridCol,c_sm:"auto"},gridRow,type:"tableControl"}}return loading?(0,react.createElement)(ListCol.f,{...colProps,key:newKey},(0,jsx_runtime.jsx)(Shimmer.W,{height:"calc(100% - 1rem)",minHeight:24,width:"calc(100% - 0.5rem)"})):(0,react.createElement)(ListCol.f,{...colProps,key:newKey,...colConfig},render?render(row):"string"==typeof row[key]||"number"==typeof row[key]?(0,jsx_runtime.jsx)(Text.E,{textAlign:justify??"left",truncate:"ellipsis",truncateLines:1,children:row[key]}):(0,react.isValidElement)(row[key])?row[key]:row[key]?"Invalid data type":"")})),expandable&&(0,jsx_runtime.jsx)(ListCol.f,{...listColProps,order:{_:1e3,c_sm:"initial"},type:"expandControl",children:(0,jsx_runtime.jsx)(ExpandControl.e,{disabled:loading,expanded,id,onExpand})})]})},DataRow=(0,react.memo)(TableRow);try{TableRow.displayName="TableRow",TableRow.__docgenInfo={description:"",displayName:"TableRow",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"RowIds"}},row:{defaultValue:null,description:"",name:"row",required:!0,type:{name:"Row"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},expanded:{defaultValue:{value:"false"},description:"",name:"expanded",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"",name:"loading",required:!1,type:{name:"boolean"}},showOverflow:{defaultValue:null,description:"",name:"showOverflow",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Tables/Rows/TableRow.tsx#TableRow"]={docgenInfo:TableRow.__docgenInfo,name:"TableRow",path:"packages/gamut/src/DataList/Tables/Rows/TableRow.tsx#TableRow"})}catch(__react_docgen_typescript_loader_error){}try{DataRow.displayName="DataRow",DataRow.__docgenInfo={description:"",displayName:"DataRow",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"RowIds"}},row:{defaultValue:null,description:"",name:"row",required:!0,type:{name:"Row"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},expanded:{defaultValue:{value:"false"},description:"",name:"expanded",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"",name:"loading",required:!1,type:{name:"boolean"}},showOverflow:{defaultValue:null,description:"",name:"showOverflow",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/Tables/Rows/TableRow.tsx#DataRow"]={docgenInfo:DataRow.__docgenInfo,name:"DataRow",path:"packages/gamut/src/DataList/Tables/Rows/TableRow.tsx#DataRow"})}catch(__react_docgen_typescript_loader_error){}function DataGrid(props){const listControls=useListControls(props),{variant="table",spacing="condensed",scrollable=!0,shadow=!1,height=scrollable?"100%":"initial",columns,idKey,rows,selected,expanded,query,loading,minHeight=0,header=!0,showOverflow,emptyMessage,hideSelectAll=!1,scrollToTopOnUpdate=!1,id,wrapperWidth,overflow,disableContainerQuery=!1}=props,empty=0===rows.length,allSelected=(0,react.useMemo)((()=>{if(empty)return!1;const ids=rows.map((({[idKey]:id})=>id)),unselected=ids.filter((id=>!selected?.includes(id)));return 0===unselected.length}),[rows,selected,idKey,empty]),selectedRows=(0,react.useMemo)((()=>selected?.reduce(((carry,next)=>({...carry,[String(next)]:!0})),{})),[selected]),expandedRows=(0,react.useMemo)((()=>expanded?.reduce(((carry,next)=>({...carry,[String(next)]:!0})),{})),[expanded]),loadingRows=(0,react.useMemo)((()=>{const loadingRow={};columns.forEach((elem=>{const{key}=elem;loadingRow[key]=""}));return Array(5).fill(loadingRow,0).map(((elem,index)=>({...elem,[idKey]:`loading-${index}`})))}),[columns,idKey]),renderedRows=loading&&empty?loadingRows:rows;return(0,jsx_runtime.jsx)(ListStateContext.Provider,{value:{query},children:(0,jsx_runtime.jsx)(ListControlContext.Provider,{value:listControls,children:(0,jsx_runtime.jsx)(List.B,{as:"table",disableContainerQuery,emptyMessage:emptyMessage??(0,jsx_runtime.jsx)(EmptyRows,{}),header:header?(0,jsx_runtime.jsx)(HeaderRow,{columns,empty,hideSelectAll,selected:allSelected}):listControls.expandable?(0,jsx_runtime.jsx)(HeaderRow,{columns,empty,hideSelectAll,invisible:!0,selected:allSelected}):null,height,id,loading,minHeight,overflow,scrollToTopOnUpdate,scrollable,shadow,spacing,variant,wrapperWidth:wrapperWidth??void 0,children:renderedRows.map((row=>{const rowId=row[idKey],key=listControls.prefixId(`${rowId}-row`);return(0,jsx_runtime.jsx)(DataRow,{columns,expanded:expandedRows?.[rowId],id:rowId,loading,row,selected:selectedRows?.[rowId],showOverflow},key)}))})})})}try{DataGrid.displayName="DataGrid",DataGrid.__docgenInfo={description:"",displayName:"DataGrid",props:{loading:{defaultValue:null,description:"Whether the data inside is loading and should be indicated to the user somehow",name:"loading",required:!1,type:{name:"boolean"}},header:{defaultValue:null,description:"Whether an additional header element should be added",name:"header",required:!1,type:{name:"boolean"}},hideSelectAll:{defaultValue:null,description:"Whether Select All checkmark should be hidden in the header. Defaults to false",name:"hideSelectAll",required:!1,type:{name:"boolean"}},showOverflow:{defaultValue:null,description:"",name:"showOverflow",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},idKey:{defaultValue:null,description:"",name:"idKey",required:!0,type:{name:"string | number | symbol"}},rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"Row[]"}},expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"Row[IdKey][]"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"Row[IdKey][]"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"Query<Row>"}},onQueryChange:{defaultValue:null,description:"",name:"onQueryChange",required:!1,type:{name:"OnQueryChange<Row>"}},onRowSelect:{defaultValue:null,description:"",name:"onRowSelect",required:!1,type:{name:"RowStateChange<SelectEvents, Row[IdKey]>"}},onRowExpand:{defaultValue:null,description:"",name:"onRowExpand",required:!1,type:{name:'RowStateChange<"expand", Row[IdKey]>'}},expandedContent:{defaultValue:null,description:"",name:"expandedContent",required:!1,type:{name:"ExpandRow<Row>"}},spacing:{defaultValue:null,description:"",name:"spacing",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"condensed"'},{value:'"compact"'}]}},shadow:{defaultValue:null,description:"If the list should render a right-side shadow when rows are scrollable to indicate more horizontal content",name:"shadow",required:!1,type:{name:"boolean"}},overflow:{defaultValue:null,description:"How the List container should handle overflow.",name:"overflow",required:!1,type:{name:"unknown"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"unknown"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"unknown"}},as:{defaultValue:null,description:"Whether List should be an ol, ul element, or table",name:"as",required:!1,type:{name:"enum",value:[{value:'"ol"'},{value:'"table"'},{value:'"ul"'}]}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"block"'},{value:'"table"'},{value:'"default"'},{value:'"plain"'},{value:'"card"'}]}},listType:{defaultValue:null,description:"",name:"listType",required:!1,type:{name:"enum",value:[{value:'"ol"'},{value:'"table"'},{value:'"ul"'}]}},scrollable:{defaultValue:null,description:"Should only be used internally to Gamut",name:"scrollable",required:!1,type:{name:"boolean"}},scrollToTopOnUpdate:{defaultValue:null,description:"Whether the component should scroll to top after its rows update.",name:"scrollToTopOnUpdate",required:!1,type:{name:"boolean"}},emptyMessage:{defaultValue:null,description:"A custom message to override the default empty message",name:"emptyMessage",required:!1,type:{name:"ReactNode"}},wrapperWidth:{defaultValue:null,description:"This is an override for the width of the wrapper element that contains the List.\nIt is useful for custom scroll and breakpoint handling. Use with caution.",name:"wrapperWidth",required:!1,type:{name:"unknown"}},disableContainerQuery:{defaultValue:null,description:"Whether to disable container queries on the List wrapper",name:"disableContainerQuery",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/DataGrid.tsx#DataGrid"]={docgenInfo:DataGrid.__docgenInfo,name:"DataGrid",path:"packages/gamut/src/DataList/DataGrid.tsx#DataGrid"})}catch(__react_docgen_typescript_loader_error){}},"./packages/gamut/src/DataList/DataList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>DataList});var _DataGrid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/gamut/src/DataList/DataGrid.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DataList=({variant="default",...rest})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGrid__WEBPACK_IMPORTED_MODULE_1__.z,{variant,...rest,scrollable:!1,shadow:!1});try{DataList.displayName="DataList",DataList.__docgenInfo={description:"",displayName:"DataList",props:{spacing:{defaultValue:null,description:"",name:"spacing",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"condensed"'},{value:'"compact"'}]}},shadow:{defaultValue:null,description:"If the list should render a right-side shadow when rows are scrollable to indicate more horizontal content",name:"shadow",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"Row[IdKey][]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},overflow:{defaultValue:null,description:"How the List container should handle overflow.",name:"overflow",required:!1,type:{name:"unknown"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"unknown"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"unknown"}},as:{defaultValue:null,description:"Whether List should be an ol, ul element, or table",name:"as",required:!1,type:{name:"enum",value:[{value:'"ol"'},{value:'"table"'},{value:'"ul"'}]}},header:{defaultValue:null,description:"Whether an additional header element should be added",name:"header",required:!1,type:{name:"boolean"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ColumnConfig<Row>[]"}},rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"Row[]"}},expanded:{defaultValue:null,description:"",name:"expanded",required:!1,type:{name:"Row[IdKey][]"}},listType:{defaultValue:null,description:"",name:"listType",required:!1,type:{name:"enum",value:[{value:'"ol"'},{value:'"table"'},{value:'"ul"'}]}},scrollable:{defaultValue:null,description:"Should only be used internally to Gamut",name:"scrollable",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Whether the data inside is loading and should be indicated to the user somehow",name:"loading",required:!1,type:{name:"boolean"}},scrollToTopOnUpdate:{defaultValue:null,description:"Whether the component should scroll to top after its rows update.",name:"scrollToTopOnUpdate",required:!1,type:{name:"boolean"}},emptyMessage:{defaultValue:null,description:"A custom message to override the default empty message",name:"emptyMessage",required:!1,type:{name:"ReactNode"}},wrapperWidth:{defaultValue:null,description:"This is an override for the width of the wrapper element that contains the List.\nIt is useful for custom scroll and breakpoint handling. Use with caution.",name:"wrapperWidth",required:!1,type:{name:"unknown"}},disableContainerQuery:{defaultValue:null,description:"Whether to disable container queries on the List wrapper",name:"disableContainerQuery",required:!1,type:{name:"boolean"}},onRowExpand:{defaultValue:null,description:"",name:"onRowExpand",required:!1,type:{name:'RowStateChange<"expand", Row[IdKey]>'}},onRowSelect:{defaultValue:null,description:"",name:"onRowSelect",required:!1,type:{name:"RowStateChange<SelectEvents, Row[IdKey]>"}},hideSelectAll:{defaultValue:null,description:"Whether Select All checkmark should be hidden in the header. Defaults to false",name:"hideSelectAll",required:!1,type:{name:"boolean"}},showOverflow:{defaultValue:null,description:"",name:"showOverflow",required:!1,type:{name:"boolean"}},idKey:{defaultValue:null,description:"",name:"idKey",required:!0,type:{name:"string | number | symbol"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"Query<Row>"}},onQueryChange:{defaultValue:null,description:"",name:"onQueryChange",required:!1,type:{name:"OnQueryChange<Row>"}},expandedContent:{defaultValue:null,description:"",name:"expandedContent",required:!1,type:{name:"ExpandRow<Row>"}},variant:{defaultValue:{value:"default"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"card"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/gamut/src/DataList/DataList.tsx#DataList"]={docgenInfo:DataList.__docgenInfo,name:"DataList",path:"packages/gamut/src/DataList/DataList.tsx#DataList"})}catch(__react_docgen_typescript_loader_error){}}}]);