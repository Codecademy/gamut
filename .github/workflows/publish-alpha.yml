name: Publish Alpha

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '22.13.1'
  NODE_OPTIONS: '--max_old_space_size=8196'
  NX_CLOUD: false
  IGNORE_COMMIT_MESSAGE: 'chore(release): publish'

permissions:
  id-token: write
  contents: read
  pull-requests: write
  issues: write
  actions: write

jobs:
  publish-alpha:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{  github.event.pull_request.head.ref }}

      - name: Setup and Build
        id: setup
        uses: ./.github/actions/yarn

      - name: Set git user
        uses: ./.github/actions/set-git-user

      - name: Set npm token
        uses: ./.github/actions/set-npm-token
        with:
          token-secret: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Ensure workflow is associated with a pull request
        uses: ./.github/actions/validate-pr-context

      - name: Skip build from automated commit
        uses: ./.github/actions/skip-automated-commits
        with:
          ignore-commit-message: ${{ env.IGNORE_COMMIT_MESSAGE }}

      - run: npx nx run-many --target=publish-build --parallel=3

      - name: Publish alpha packages
        run: |
          SHORT_SHA=${GITHUB_SHA:0:6}
          yarn lerna publish --no-verify-access --exact --yes --include-merged-tags --no-push --no-git-reset --conventional-commits --conventional-prerelease --preid=alpha.${SHORT_SHA} --dist-tag=alpha.${SHORT_SHA}
        env:
          GH_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN  }}

      - name: List alpha packages versions
        id: published
        continue-on-error: true
        run: |
          {
            echo 'result<<EOF'
            yarn lerna ll --parseable | grep alpha | awk -F: '{print $2"@"$3}' || true
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Comment with published alpha packages
        uses: ./.github/actions/sticky-comment
        if: steps.published.outputs.result
        with:
          github-token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          header: Alpha Packages
          message: |
            ðŸ“¬ Published Alpha Packages:
            ```
            ${{ steps.published.outputs.result }}
            ```
